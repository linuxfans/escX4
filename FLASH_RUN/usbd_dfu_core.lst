   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 4
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"usbd_dfu_core.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.EP0_RxReady,"ax",%progbits
  20              		.align	1
  21              		.thumb
  22              		.thumb_func
  24              	EP0_RxReady:
  25              	.LFB114:
  26              		.file 1 "Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c"
   1:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** /**
   2:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   ******************************************************************************
   3:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * @file    usbd_dfu_core.c
   4:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * @author  MCD Application Team
   5:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * @version V1.1.0
   6:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * @date    19-March-2012
   7:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * @brief   This file provides the high layer firmware functions to manage the 
   8:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   *          following functionalities of the USB DFU Class:
   9:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   *           - Initialization and Configuration of high and low layer
  10:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   *           - Enumeration as DFU Device (and enumeration for each implemented memory interface)
  11:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   *           - Transfers to/from memory interfaces
  12:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   *           - Easy-to-customize "plug-in-like" modules for adding/removing memory interfaces.
  13:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   *           - Error management
  14:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   *           
  15:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   *  @verbatim
  16:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   *      
  17:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   *          ===================================================================      
  18:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   *                                DFU Class Driver Description
  19:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   *          =================================================================== 
  20:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   *           This driver manages the DFU class V1.1 following the "Device Class Specification for 
  21:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   *           Device Firmware Upgrade Version 1.1 Aug 5, 2004".
  22:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   *           This driver implements the following aspects of the specification:
  23:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   *             - Device descriptor management
  24:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   *             - Configuration descriptor management
  25:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   *             - Enumeration as DFU device (in DFU mode only)
  26:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   *             - Requests management (supporting ST DFU sub-protocol)
  27:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   *             - Memory operations management (Download/Upload/Erase/Detach/GetState/GetStatus)
  28:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   *             - DFU state machine implementation.
  29:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   *          
  30:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   *           @note
  31:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   *            ST DFU sub-protocol is compliant with DFU protocol and use sub-requests to manage
  32:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   *            memory addressing, commands processing, specific memories operations (ie. Erase) ...
  33:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   *            As required by the DFU specification, only endpoint 0 is used in this application.
  34:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   *            Other endpoints and functions may be added to the application (ie. DFU ...)
  35:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * 
  36:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   *           These aspects may be enriched or modified for a specific user application.
  37:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   *          
  38:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   *           This driver doesn't implement the following aspects of the specification 
  39:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   *           (but it is possible to manage these features with some modifications on this driver):
  40:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   *             - Manifestation Tolerant mode
  41:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   *      
  42:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   *  @endverbatim
  43:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   *                                  
  44:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   ******************************************************************************
  45:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * @attention
  46:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   *
  47:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
  48:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   *
  49:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  50:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * You may not use this file except in compliance with the License.
  51:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * You may obtain a copy of the License at:
  52:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   *
  53:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  54:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   *
  55:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * Unless required by applicable law or agreed to in writing, software 
  56:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  57:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  58:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * See the License for the specific language governing permissions and
  59:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * limitations under the License.
  60:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   *
  61:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   ******************************************************************************
  62:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   */
  63:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
  64:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** /* Includes ------------------------------------------------------------------*/
  65:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** #include "usbd_dfu_core.h"
  66:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** #include "usbd_desc.h"
  67:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** #include "usbd_req.h"
  68:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** #include "usb_bsp.h"
  69:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
  70:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
  71:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** /** @addtogroup STM32_USB_OTG_DEVICE_LIBRARY
  72:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * @{
  73:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   */
  74:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
  75:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
  76:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** /** @defgroup usbd_dfu 
  77:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * @brief usbd core module
  78:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * @{
  79:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   */ 
  80:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
  81:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** /** @defgroup usbd_dfu_Private_TypesDefinitions
  82:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * @{
  83:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   */ 
  84:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** /**
  85:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * @}
  86:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   */ 
  87:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
  88:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
  89:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** /** @defgroup usbd_dfu_Private_Defines
  90:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * @{
  91:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   */ 
  92:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** /**
  93:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * @}
  94:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   */ 
  95:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
  96:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
  97:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** /** @defgroup usbd_dfu_Private_Macros
  98:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * @{
  99:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   */ 
 100:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** /**
 101:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * @}
 102:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   */ 
 103:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 104:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 105:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** /** @defgroup usbd_dfu_Private_FunctionPrototypes
 106:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * @{
 107:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   */
 108:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 109:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** /*********************************************
 110:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****    DFU Device library callbacks
 111:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****  *********************************************/
 112:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** static uint8_t  usbd_dfu_Init     (void  *pdev, 
 113:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****                                   uint8_t cfgidx);
 114:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 115:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** static uint8_t  usbd_dfu_DeInit   (void  *pdev, 
 116:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****                                   uint8_t cfgidx);
 117:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 118:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** static uint8_t  usbd_dfu_Setup    (void  *pdev, 
 119:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****                                   USB_SETUP_REQ *req);
 120:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 121:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** static uint8_t  EP0_TxSent        (void  *pdev);
 122:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 123:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** static uint8_t  EP0_RxReady       (void  *pdev);
 124:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 125:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 126:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** static uint8_t  *USBD_DFU_GetCfgDesc (uint8_t speed, 
 127:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****                                       uint16_t *length);
 128:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 129:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 130:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** #ifdef USB_OTG_HS_CORE
 131:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** static uint8_t  *USBD_DFU_GetOtherCfgDesc (uint8_t speed, 
 132:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****                                       uint16_t *length);
 133:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** #endif
 134:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 135:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** static uint8_t* USBD_DFU_GetUsrStringDesc (uint8_t speed, 
 136:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****                                            uint8_t index ,
 137:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****                                            uint16_t *length);
 138:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 139:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** /*********************************************
 140:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****    DFU Requests management functions
 141:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****  *********************************************/
 142:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** static void DFU_Req_DETACH    (void *pdev, 
 143:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****                                USB_SETUP_REQ *req);
 144:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 145:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** static void DFU_Req_DNLOAD    (void *pdev,
 146:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****                                USB_SETUP_REQ *req);
 147:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 148:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** static void DFU_Req_UPLOAD    (void *pdev,
 149:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****                                USB_SETUP_REQ *req);
 150:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 151:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** static void DFU_Req_GETSTATUS (void *pdev);
 152:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 153:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** static void DFU_Req_CLRSTATUS (void *pdev);
 154:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 155:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** static void DFU_Req_GETSTATE  (void *pdev);
 156:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 157:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** static void DFU_Req_ABORT     (void *pdev);
 158:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 159:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** static void DFU_LeaveDFUMode  (void *pdev); 
 160:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 161:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** /**
 162:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * @}
 163:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   */ 
 164:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 165:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** /** @defgroup usbd_dfu_Private_Variables
 166:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * @{
 167:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   */ 
 168:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** #ifdef USB_OTG_HS_INTERNAL_DMA_ENABLED
 169:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   #if defined ( __ICCARM__ ) /*!< IAR Compiler */
 170:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     #pragma data_alignment=4   
 171:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   #endif
 172:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** #endif /* USB_OTG_HS_INTERNAL_DMA_ENABLED */
 173:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** __ALIGN_BEGIN uint8_t usbd_dfu_CfgDesc[USB_DFU_CONFIG_DESC_SIZ] __ALIGN_END ;
 174:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 175:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 176:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** #ifdef USB_OTG_HS_INTERNAL_DMA_ENABLED
 177:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   #if defined ( __ICCARM__ ) /*!< IAR Compiler */
 178:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     #pragma data_alignment=4   
 179:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   #endif
 180:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** #endif /* USB_OTG_HS_INTERNAL_DMA_ENABLED */
 181:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** __ALIGN_BEGIN uint8_t usbd_dfu_OtherCfgDesc[USB_DFU_CONFIG_DESC_SIZ] __ALIGN_END ;
 182:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 183:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** /* The list of Interface String descriptor pointers is defined in usbd_dfu_mal.c 
 184:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   file. This list can be updated whenever a memory has to be added or removed */
 185:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** extern const uint8_t* usbd_dfu_StringDesc[];
 186:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 187:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** /* State Machine variables */
 188:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** uint8_t DeviceState;
 189:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** uint8_t DeviceStatus[6];
 190:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** uint32_t Manifest_State = Manifest_complete;
 191:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** /* Data Management variables */
 192:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** static uint32_t wBlockNum = 0, wlength = 0;
 193:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** static uint32_t Pointer = APP_DEFAULT_ADD;  /* Base Address to Erase, Program or Read */
 194:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** static __IO uint32_t  usbd_dfu_AltSet = 0;
 195:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 196:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** extern uint8_t MAL_Buffer[];
 197:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 198:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** /* DFU interface class callbacks structure */
 199:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** USBD_Class_cb_TypeDef  DFU_cb = 
 200:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** {
 201:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   usbd_dfu_Init,
 202:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   usbd_dfu_DeInit,
 203:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   usbd_dfu_Setup,
 204:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   EP0_TxSent,
 205:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   EP0_RxReady,
 206:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   NULL, /* DataIn, */
 207:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   NULL, /* DataOut, */
 208:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   NULL, /*SOF */
 209:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   NULL,
 210:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   NULL,     
 211:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   USBD_DFU_GetCfgDesc,
 212:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** #ifdef USB_OTG_HS_CORE  
 213:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   USBD_DFU_GetOtherCfgDesc, /* use same cobfig as per FS */
 214:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** #endif  
 215:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   USBD_DFU_GetUsrStringDesc,
 216:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** };
 217:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 218:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** #ifdef USB_OTG_HS_INTERNAL_DMA_ENABLED
 219:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   #if defined ( __ICCARM__ ) /*!< IAR Compiler */
 220:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     #pragma data_alignment=4   
 221:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   #endif
 222:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** #endif /* USB_OTG_HS_INTERNAL_DMA_ENABLED */
 223:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** /* USB DFU device Configuration Descriptor */
 224:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** __ALIGN_BEGIN uint8_t usbd_dfu_CfgDesc[USB_DFU_CONFIG_DESC_SIZ] __ALIGN_END =
 225:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** {
 226:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   0x09, /* bLength: Configuation Descriptor size */
 227:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   USB_CONFIGURATION_DESCRIPTOR_TYPE, /* bDescriptorType: Configuration */
 228:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   USB_DFU_CONFIG_DESC_SIZ,
 229:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   /* wTotalLength: Bytes returned */
 230:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   0x00,
 231:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   0x01,         /*bNumInterfaces: 1 interface*/
 232:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   0x01,         /*bConfigurationValue: Configuration value*/
 233:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   0x02,         /*iConfiguration: Index of string descriptor describing the configuration*/
 234:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   0xC0,         /*bmAttributes: bus powered and Supprts Remote Wakeup */
 235:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   0x32,         /*MaxPower 100 mA: this current is used for detecting Vbus*/
 236:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   /* 09 */
 237:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   
 238:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   /**********  Descriptor of DFU interface 0 Alternate setting 0 **************/  
 239:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   USBD_DFU_IF_DESC(0), /* This interface is mandatory for all devices */
 240:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   
 241:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** #if (USBD_ITF_MAX_NUM > 1)
 242:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   /**********  Descriptor of DFU interface 0 Alternate setting 1 **************/ 
 243:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   USBD_DFU_IF_DESC(1),
 244:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** #endif /* (USBD_ITF_MAX_NUM > 1) */
 245:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 246:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** #if (USBD_ITF_MAX_NUM > 2)
 247:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   /**********  Descriptor of DFU interface 0 Alternate setting 2 **************/ 
 248:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   USBD_DFU_IF_DESC(2),
 249:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** #endif /* (USBD_ITF_MAX_NUM > 2) */
 250:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 251:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** #if (USBD_ITF_MAX_NUM > 3)
 252:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   /**********  Descriptor of DFU interface 0 Alternate setting 3 **************/ 
 253:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   USBD_DFU_IF_DESC(3),
 254:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** #endif /* (USBD_ITF_MAX_NUM > 3) */
 255:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 256:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** #if (USBD_ITF_MAX_NUM > 4)
 257:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   /**********  Descriptor of DFU interface 0 Alternate setting 4 **************/ 
 258:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   USBD_DFU_IF_DESC(4),
 259:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** #endif /* (USBD_ITF_MAX_NUM > 4) */
 260:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 261:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** #if (USBD_ITF_MAX_NUM > 5)
 262:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   /**********  Descriptor of DFU interface 0 Alternate setting 5 **************/ 
 263:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   USBD_DFU_IF_DESC(5),
 264:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** #endif /* (USBD_ITF_MAX_NUM > 5) */
 265:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 266:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** #if (USBD_ITF_MAX_NUM > 6)
 267:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** #error "ERROR: usbd_dfu_core.c: Modify the file to support more descriptors!"
 268:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** #endif /* (USBD_ITF_MAX_NUM > 6) */
 269:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 270:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   /******************** DFU Functional Descriptor********************/
 271:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   0x09,   /*blength = 9 Bytes*/
 272:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   DFU_DESCRIPTOR_TYPE,   /* DFU Functional Descriptor*/
 273:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   0x0B,   /*bmAttribute
 274:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****                 bitCanDnload             = 1      (bit 0)
 275:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****                 bitCanUpload             = 1      (bit 1)
 276:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****                 bitManifestationTolerant = 0      (bit 2)
 277:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****                 bitWillDetach            = 1      (bit 3)
 278:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****                 Reserved                          (bit4-6)
 279:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****                 bitAcceleratedST         = 0      (bit 7)*/
 280:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   0xFF,   /*DetachTimeOut= 255 ms*/
 281:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   0x00,
 282:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   /*WARNING: In DMA mode the multiple MPS packets feature is still not supported
 283:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****    ==> In this case, when using DMA XFERSIZE should be set to 64 in usbd_conf.h */
 284:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   TRANSFER_SIZE_BYTES(XFERSIZE),       /* TransferSize = 1024 Byte*/         
 285:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   0x1A,                                /* bcdDFUVersion*/
 286:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   0x01
 287:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   /***********************************************************/
 288:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   /* 9*/
 289:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** } ;
 290:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 291:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** #ifdef USE_USB_OTG_HS
 292:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** #ifdef USB_OTG_HS_INTERNAL_DMA_ENABLED
 293:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   #if defined ( __ICCARM__ ) /*!< IAR Compiler */
 294:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     #pragma data_alignment=4   
 295:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   #endif
 296:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** #endif /* USB_OTG_HS_INTERNAL_DMA_ENABLED */
 297:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 298:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** __ALIGN_BEGIN uint8_t usbd_dfu_OtherCfgDesc[USB_DFU_CONFIG_DESC_SIZ] __ALIGN_END =
 299:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** {
 300:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   0x09, /* bLength: Configuation Descriptor size */
 301:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   USB_DESC_TYPE_OTHER_SPEED_CONFIGURATION, /* bDescriptorType: Configuration */
 302:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   USB_DFU_CONFIG_DESC_SIZ,
 303:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   /* wTotalLength: Bytes returned */
 304:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   0x00,
 305:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   0x01,         /*bNumInterfaces: 1 interface*/
 306:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   0x01,         /*bConfigurationValue: Configuration value*/
 307:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   0x02,         /*iConfiguration: Index of string descriptor describing the configuration*/
 308:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   0xC0,         /*bmAttributes: bus powered and Supprts Remote Wakeup */
 309:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   0x32,         /*MaxPower 100 mA: this current is used for detecting Vbus*/
 310:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   /* 09 */
 311:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   
 312:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   /**********  Descriptor of DFU interface 0 Alternate setting 0 **************/  
 313:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   USBD_DFU_IF_DESC(0), /* This interface is mandatory for all devices */
 314:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   
 315:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** #if (USBD_ITF_MAX_NUM > 1)
 316:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   /**********  Descriptor of DFU interface 0 Alternate setting 1 **************/ 
 317:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   USBD_DFU_IF_DESC(1),
 318:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** #endif /* (USBD_ITF_MAX_NUM > 1) */
 319:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 320:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** #if (USBD_ITF_MAX_NUM > 2)
 321:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   /**********  Descriptor of DFU interface 0 Alternate setting 2 **************/ 
 322:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   USBD_DFU_IF_DESC(2),
 323:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** #endif /* (USBD_ITF_MAX_NUM > 2) */
 324:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 325:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** #if (USBD_ITF_MAX_NUM > 3)
 326:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   /**********  Descriptor of DFU interface 0 Alternate setting 3 **************/ 
 327:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   USBD_DFU_IF_DESC(3),
 328:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** #endif /* (USBD_ITF_MAX_NUM > 3) */
 329:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 330:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** #if (USBD_ITF_MAX_NUM > 4)
 331:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   /**********  Descriptor of DFU interface 0 Alternate setting 4 **************/ 
 332:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   USBD_DFU_IF_DESC(4),
 333:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** #endif /* (USBD_ITF_MAX_NUM > 4) */
 334:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 335:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** #if (USBD_ITF_MAX_NUM > 5)
 336:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   /**********  Descriptor of DFU interface 0 Alternate setting 5 **************/ 
 337:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   USBD_DFU_IF_DESC(5),
 338:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** #endif /* (USBD_ITF_MAX_NUM > 5) */
 339:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 340:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** #if (USBD_ITF_MAX_NUM > 6)
 341:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** #error "ERROR: usbd_dfu_core.c: Modify the file to support more descriptors!"
 342:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** #endif /* (USBD_ITF_MAX_NUM > 6) */
 343:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 344:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   /******************** DFU Functional Descriptor********************/
 345:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   0x09,   /*blength = 9 Bytes*/
 346:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   DFU_DESCRIPTOR_TYPE,   /* DFU Functional Descriptor*/
 347:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   0x0B,   /*bmAttribute
 348:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****                 bitCanDnload             = 1      (bit 0)
 349:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****                 bitCanUpload             = 1      (bit 1)
 350:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****                 bitManifestationTolerant = 0      (bit 2)
 351:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****                 bitWillDetach            = 1      (bit 3)
 352:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****                 Reserved                          (bit4-6)
 353:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****                 bitAcceleratedST         = 0      (bit 7)*/
 354:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   0xFF,   /*DetachTimeOut= 255 ms*/
 355:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   0x00,
 356:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   /*WARNING: In DMA mode the multiple MPS packets feature is still not supported
 357:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****    ==> In this case, when using DMA XFERSIZE should be set to 64 in usbd_conf.h */
 358:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   TRANSFER_SIZE_BYTES(XFERSIZE),       /* TransferSize = 1024 Byte*/         
 359:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   0x1A,                                /* bcdDFUVersion*/
 360:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   0x01
 361:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   /***********************************************************/
 362:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   /* 9*/
 363:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** };
 364:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** #endif /* USE_USB_OTG_HS */
 365:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 366:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** #ifdef USB_OTG_HS_INTERNAL_DMA_ENABLED
 367:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   #if defined ( __ICCARM__ ) /*!< IAR Compiler */
 368:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     #pragma data_alignment=4   
 369:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   #endif
 370:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 371:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** __ALIGN_BEGIN static uint8_t usbd_dfu_Desc[USB_DFU_DESC_SIZ] __ALIGN_END =
 372:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** {
 373:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   0x09,   /*blength = 9 Bytes*/
 374:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   DFU_DESCRIPTOR_TYPE,   /* DFU Functional Descriptor*/
 375:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   0x0B,   /*bmAttribute
 376:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****                 bitCanDnload             = 1      (bit 0)
 377:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****                 bitCanUpload             = 1      (bit 1)
 378:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****                 bitManifestationTolerant = 0      (bit 2)
 379:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****                 bitWillDetach            = 1      (bit 3)
 380:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****                 Reserved                          (bit4-6)
 381:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****                 bitAcceleratedST         = 0      (bit 7)*/
 382:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   0xFF,   /*DetachTimeOut= 255 ms*/
 383:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   0x00,
 384:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   /*WARNING: In DMA mode the multiple MPS packets feature is still not supported
 385:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****    ==> In this case, when using DMA XFERSIZE should be set to 64 in usbd_conf.h */
 386:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   TRANSFER_SIZE_BYTES(XFERSIZE),  /* TransferSize = 1024 Byte*/
 387:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   0x1A,                     /* bcdDFUVersion*/
 388:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   0x01
 389:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** };
 390:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** #endif /* USB_OTG_HS_INTERNAL_DMA_ENABLED */
 391:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 392:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** /**
 393:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * @}
 394:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   */ 
 395:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 396:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** /** @defgroup usbd_dfu_Private_Functions
 397:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * @{
 398:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   */ 
 399:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 400:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** /**
 401:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * @brief  usbd_dfu_Init
 402:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   *         Initializes the DFU interface.
 403:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * @param  pdev: device instance
 404:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * @param  cfgidx: Configuration index
 405:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * @retval status
 406:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   */
 407:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** static uint8_t  usbd_dfu_Init (void  *pdev, 
 408:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****                                uint8_t cfgidx)
 409:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** {
 410:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   /* Initilialize the MAL(Media Access Layer) */
 411:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   MAL_Init();
 412:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   
 413:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   /* Initialize the state of the DFU interface */
 414:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   DeviceState = STATE_dfuIDLE;
 415:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   DeviceStatus[0] = STATUS_OK;
 416:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   DeviceStatus[4] = DeviceState;
 417:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   
 418:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   return USBD_OK;
 419:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** }
 420:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 421:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** /**
 422:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * @brief  usbd_dfu_Init
 423:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   *         De-initializes the DFU layer.
 424:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * @param  pdev: device instance
 425:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * @param  cfgidx: Configuration index
 426:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * @retval status
 427:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   */
 428:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** static uint8_t  usbd_dfu_DeInit (void  *pdev, 
 429:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****                                  uint8_t cfgidx)
 430:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** {
 431:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   /* Restore default state */
 432:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   DeviceState = STATE_dfuIDLE;
 433:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   DeviceStatus[0] = STATUS_OK;
 434:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   DeviceStatus[4] = DeviceState;
 435:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   wBlockNum = 0;
 436:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   wlength = 0;
 437:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 438:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   /* DeInitilialize the MAL(Media Access Layer) */
 439:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   MAL_DeInit();
 440:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   
 441:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   return USBD_OK;
 442:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** }
 443:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 444:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** /**
 445:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * @brief  usbd_dfu_Setup
 446:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   *         Handles the DFU request parsing.
 447:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * @param  pdev: instance
 448:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * @param  req: usb requests
 449:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * @retval status
 450:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   */
 451:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** static uint8_t  usbd_dfu_Setup (void  *pdev, 
 452:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****                                 USB_SETUP_REQ *req)
 453:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** {
 454:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   uint16_t len = 0;
 455:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   uint8_t  *pbuf = NULL;
 456:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   
 457:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   switch (req->bmRequest & USB_REQ_TYPE_MASK)
 458:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   {
 459:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     /* DFU Class Requests -------------------------------*/
 460:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   case USB_REQ_TYPE_CLASS :  
 461:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     switch (req->bRequest)
 462:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     {
 463:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     case DFU_DNLOAD:
 464:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       DFU_Req_DNLOAD(pdev, req);
 465:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       break;
 466:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       
 467:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     case DFU_UPLOAD:
 468:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       DFU_Req_UPLOAD(pdev, req);   
 469:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       break;
 470:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       
 471:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     case DFU_GETSTATUS:
 472:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       DFU_Req_GETSTATUS(pdev);
 473:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       break;
 474:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       
 475:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     case DFU_CLRSTATUS:
 476:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       DFU_Req_CLRSTATUS(pdev);
 477:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       break;      
 478:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 479:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     case DFU_GETSTATE:
 480:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       DFU_Req_GETSTATE(pdev);
 481:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       break;  
 482:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 483:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     case DFU_ABORT:
 484:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       DFU_Req_ABORT(pdev);
 485:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       break;
 486:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 487:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     case DFU_DETACH:
 488:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       DFU_Req_DETACH(pdev, req);
 489:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       break;
 490:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 491:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     default:
 492:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       USBD_CtlError (pdev, req);
 493:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       return USBD_FAIL;
 494:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     }
 495:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     break;
 496:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     
 497:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     /* Standard Requests -------------------------------*/
 498:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   case USB_REQ_TYPE_STANDARD:
 499:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     switch (req->bRequest)
 500:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     {
 501:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     case USB_REQ_GET_DESCRIPTOR: 
 502:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       if( (req->wValue >> 8) == DFU_DESCRIPTOR_TYPE)
 503:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       {
 504:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** #ifdef USB_OTG_HS_INTERNAL_DMA_ENABLED
 505:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         pbuf = usbd_dfu_Desc;   
 506:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** #else
 507:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         pbuf = usbd_dfu_CfgDesc + 9 + (9 * USBD_ITF_MAX_NUM);
 508:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** #endif 
 509:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         len = MIN(USB_DFU_DESC_SIZ , req->wLength);
 510:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       }
 511:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       
 512:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       USBD_CtlSendData (pdev, 
 513:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****                         pbuf,
 514:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****                         len);
 515:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       break;
 516:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       
 517:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     case USB_REQ_GET_INTERFACE :
 518:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       USBD_CtlSendData (pdev,
 519:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****                         (uint8_t *)&usbd_dfu_AltSet,
 520:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****                         1);
 521:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       break;
 522:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       
 523:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     case USB_REQ_SET_INTERFACE :
 524:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       if ((uint8_t)(req->wValue) < USBD_ITF_MAX_NUM)
 525:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       {
 526:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         usbd_dfu_AltSet = (uint8_t)(req->wValue);
 527:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       }
 528:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       else
 529:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       {
 530:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         /* Call the error management function (command will be nacked */
 531:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         USBD_CtlError (pdev, req);
 532:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       }
 533:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       break;
 534:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     }
 535:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   }
 536:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   return USBD_OK;
 537:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** }
 538:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 539:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** /**
 540:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * @brief  EP0_TxSent
 541:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   *         Handles the DFU control endpoint data IN stage.
 542:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * @param  pdev: device instance
 543:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * @retval status
 544:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   */
 545:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** static uint8_t  EP0_TxSent (void  *pdev)
 546:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** {
 547:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   uint32_t Addr;
 548:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   USB_SETUP_REQ req;  
 549:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   
 550:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   if (DeviceState == STATE_dfuDNBUSY)
 551:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   {
 552:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     /* Decode the Special Command*/
 553:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     if (wBlockNum == 0)   
 554:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     {
 555:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       if ((MAL_Buffer[0] ==  CMD_GETCOMMANDS) && (wlength == 1))
 556:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       {}
 557:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       else if  (( MAL_Buffer[0] ==  CMD_SETADDRESSPOINTER ) && (wlength == 5))
 558:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       {
 559:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         Pointer  = MAL_Buffer[1];
 560:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         Pointer += MAL_Buffer[2] << 8;
 561:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         Pointer += MAL_Buffer[3] << 16;
 562:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         Pointer += MAL_Buffer[4] << 24;
 563:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       }
 564:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       else if (( MAL_Buffer[0] ==  CMD_ERASE ) && (wlength == 5))
 565:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       {
 566:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         Pointer  = MAL_Buffer[1];
 567:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         Pointer += MAL_Buffer[2] << 8;
 568:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         Pointer += MAL_Buffer[3] << 16;
 569:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         Pointer += MAL_Buffer[4] << 24;
 570:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         MAL_Erase(Pointer);
 571:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       }
 572:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       else
 573:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       {
 574:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         /* Reset the global length and block number */
 575:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         wlength = 0;
 576:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         wBlockNum = 0;     
 577:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         /* Call the error management function (command will be nacked) */
 578:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         req.bmRequest = 0;
 579:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         req.wLength = 1;
 580:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         USBD_CtlError (pdev, &req);
 581:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       }
 582:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     }
 583:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     /* Regular Download Command */
 584:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     else if (wBlockNum > 1)  
 585:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     {
 586:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       /* Decode the required address */
 587:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       Addr = ((wBlockNum - 2) * XFERSIZE) + Pointer;
 588:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       
 589:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       /* Preform the write operation */
 590:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       MAL_Write(Addr, wlength);
 591:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     }
 592:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     /* Reset the global lenght and block number */
 593:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     wlength = 0;
 594:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     wBlockNum = 0;
 595:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     
 596:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     /* Update the state machine */
 597:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceState =  STATE_dfuDNLOAD_SYNC;
 598:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[4] = DeviceState;
 599:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[1] = 0;
 600:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[2] = 0;
 601:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[3] = 0;
 602:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     return USBD_OK;
 603:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   }
 604:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   else if (DeviceState == STATE_dfuMANIFEST)/* Manifestation in progress*/
 605:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   {
 606:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     /* Start leaving DFU mode */
 607:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DFU_LeaveDFUMode(pdev);
 608:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   }
 609:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   
 610:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   return USBD_OK;
 611:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** }
 612:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 613:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** /**
 614:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * @brief  EP0_RxReady
 615:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   *         Handles the DFU control endpoint data OUT stage.
 616:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * @param  pdev: device instance
 617:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * @retval status
 618:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   */
 619:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** static uint8_t  EP0_RxReady (void  *pdev)
 620:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** { 
  27              		.loc 1 620 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
 621:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   return USBD_OK;
 622:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** }
  33              		.loc 1 622 0
  34 0000 0020     		movs	r0, #0
  35              	.LVL1:
  36 0002 7047     		bx	lr
  37              		.cfi_endproc
  38              	.LFE114:
  40              		.section	.text.USBD_DFU_GetCfgDesc,"ax",%progbits
  41              		.align	1
  42              		.thumb
  43              		.thumb_func
  45              	USBD_DFU_GetCfgDesc:
  46              	.LFB123:
 623:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 624:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 625:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** /******************************************************************************
 626:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****      DFU Class requests management
 627:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** ******************************************************************************/
 628:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** /**
 629:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * @brief  DFU_Req_DETACH
 630:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   *         Handles the DFU DETACH request.
 631:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * @param  pdev: device instance
 632:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * @param  req: pointer to the request structure.
 633:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * @retval None.
 634:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   */
 635:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** static void DFU_Req_DETACH(void *pdev, USB_SETUP_REQ *req)
 636:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** {
 637:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   if (DeviceState == STATE_dfuIDLE || DeviceState == STATE_dfuDNLOAD_SYNC
 638:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       || DeviceState == STATE_dfuDNLOAD_IDLE || DeviceState == STATE_dfuMANIFEST_SYNC
 639:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         || DeviceState == STATE_dfuUPLOAD_IDLE )
 640:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   {
 641:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     /* Update the state machine */
 642:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceState = STATE_dfuIDLE;
 643:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[0] = STATUS_OK;
 644:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[1] = 0;
 645:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[2] = 0;
 646:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[3] = 0; /*bwPollTimeout=0ms*/
 647:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[4] = DeviceState;
 648:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[5] = 0; /*iString*/
 649:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     wBlockNum = 0;
 650:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     wlength = 0;
 651:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   } 
 652:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   
 653:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   /* Check the detach capability in the DFU functional descriptor */
 654:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   if ((usbd_dfu_CfgDesc[12 + (9 * USBD_ITF_MAX_NUM)]) & DFU_DETACH_MASK)
 655:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   {
 656:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     /* Perform an Attach-Detach operation on USB bus */
 657:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DCD_DevDisconnect (pdev);
 658:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DCD_DevConnect (pdev);  
 659:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   }
 660:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   else
 661:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   {
 662:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     /* Wait for the period of time specified in Detach request */
 663:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     USB_OTG_BSP_mDelay (req->wValue);  
 664:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   }
 665:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** }
 666:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 667:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** /**
 668:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * @brief  DFU_Req_DNLOAD
 669:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   *         Handles the DFU DNLOAD request.
 670:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * @param  pdev: device instance
 671:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * @param  req: pointer to the request structure
 672:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * @retval None
 673:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   */
 674:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** static void DFU_Req_DNLOAD(void *pdev, USB_SETUP_REQ *req)
 675:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** {
 676:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   /* Data setup request */
 677:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   if (req->wLength > 0)
 678:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   {
 679:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     if ((DeviceState == STATE_dfuIDLE) || (DeviceState == STATE_dfuDNLOAD_IDLE))
 680:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     {
 681:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       /* Update the global length and block number */
 682:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       wBlockNum = req->wValue;
 683:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       wlength = req->wLength;
 684:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       
 685:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       /* Update the state machine */
 686:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       DeviceState = STATE_dfuDNLOAD_SYNC;
 687:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       DeviceStatus[4] = DeviceState;
 688:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       
 689:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       /* Prepare the reception of the buffer over EP0 */
 690:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       USBD_CtlPrepareRx (pdev,
 691:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****                          (uint8_t*)MAL_Buffer,                                  
 692:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****                          wlength);
 693:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     }
 694:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     /* Unsupported state */
 695:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     else
 696:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     {
 697:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       /* Call the error management function (command will be nacked */
 698:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       USBD_CtlError (pdev, req);
 699:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     }
 700:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   }
 701:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   /* 0 Data DNLOAD request */
 702:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   else
 703:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   {
 704:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     /* End of DNLOAD operation*/
 705:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     if (DeviceState == STATE_dfuDNLOAD_IDLE || DeviceState == STATE_dfuIDLE )
 706:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     {
 707:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       Manifest_State = Manifest_In_Progress;
 708:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       DeviceState = STATE_dfuMANIFEST_SYNC;
 709:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       DeviceStatus[1] = 0;
 710:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       DeviceStatus[2] = 0;
 711:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       DeviceStatus[3] = 0;
 712:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       DeviceStatus[4] = DeviceState;
 713:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     }
 714:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     else
 715:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     {
 716:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       /* Call the error management function (command will be nacked */
 717:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       USBD_CtlError (pdev, req);
 718:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     }
 719:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   }  
 720:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** }
 721:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 722:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** /**
 723:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * @brief  DFU_Req_UPLOAD
 724:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   *         Handles the DFU UPLOAD request.
 725:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * @param  pdev: instance
 726:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * @param  req: pointer to the request structure
 727:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * @retval status
 728:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   */
 729:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** static void DFU_Req_UPLOAD(void *pdev, USB_SETUP_REQ *req)
 730:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** {
 731:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   uint8_t *Phy_Addr = NULL;
 732:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   uint32_t Addr = 0;
 733:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   
 734:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   /* Data setup request */
 735:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   if (req->wLength > 0)
 736:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   {
 737:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     if ((DeviceState == STATE_dfuIDLE) || (DeviceState == STATE_dfuUPLOAD_IDLE))
 738:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     {
 739:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       /* Update the global langth and block number */
 740:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       wBlockNum = req->wValue;
 741:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       wlength = req->wLength;
 742:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       
 743:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       /* DFU Get Command */
 744:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       if (wBlockNum == 0)
 745:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       {
 746:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         /* Update the state machine */
 747:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         DeviceState = (wlength > 3)? STATE_dfuIDLE:STATE_dfuUPLOAD_IDLE;
 748:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         DeviceStatus[4] = DeviceState;
 749:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         DeviceStatus[1] = 0;
 750:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         DeviceStatus[2] = 0;
 751:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         DeviceStatus[3] = 0;
 752:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 753:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         /* Store the values of all supported commands */
 754:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         MAL_Buffer[0] = CMD_GETCOMMANDS;
 755:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         MAL_Buffer[1] = CMD_SETADDRESSPOINTER;
 756:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         MAL_Buffer[2] = CMD_ERASE;
 757:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 758:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         /* Send the status data over EP0 */
 759:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         USBD_CtlSendData (pdev,
 760:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****                           (uint8_t *)(&(MAL_Buffer[0])),
 761:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****                           3);
 762:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       }
 763:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       else if (wBlockNum > 1)
 764:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       {
 765:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         DeviceState = STATE_dfuUPLOAD_IDLE ;
 766:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         DeviceStatus[4] = DeviceState;
 767:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         DeviceStatus[1] = 0;
 768:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         DeviceStatus[2] = 0;
 769:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         DeviceStatus[3] = 0;
 770:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         Addr = ((wBlockNum - 2) * XFERSIZE) + Pointer;  /* Change is Accelerated*/
 771:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         
 772:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         /* Return the physical address where data are stored */
 773:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         Phy_Addr = MAL_Read(Addr, wlength);
 774:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         
 775:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         /* Send the status data over EP0 */
 776:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         USBD_CtlSendData (pdev,
 777:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****                           Phy_Addr,
 778:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****                           wlength);
 779:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       }
 780:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       else  /* unsupported wBlockNum */
 781:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       {
 782:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         DeviceState = STATUS_ERRSTALLEDPKT;
 783:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         DeviceStatus[4] = DeviceState;
 784:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         DeviceStatus[1] = 0;
 785:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         DeviceStatus[2] = 0;
 786:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         DeviceStatus[3] = 0;
 787:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         
 788:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         /* Call the error management function (command will be nacked */
 789:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         USBD_CtlError (pdev, req); 
 790:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       }
 791:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     }
 792:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     /* Unsupported state */
 793:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     else
 794:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     {
 795:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       wlength = 0;
 796:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       wBlockNum = 0;   
 797:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       /* Call the error management function (command will be nacked */
 798:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       USBD_CtlError (pdev, req);
 799:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     }
 800:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   }
 801:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   /* No Data setup request */
 802:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   else
 803:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   {
 804:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceState = STATE_dfuIDLE;
 805:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[1] = 0;
 806:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[2] = 0;
 807:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[3] = 0;
 808:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[4] = DeviceState;
 809:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   }
 810:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** }
 811:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 812:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** /**
 813:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * @brief  DFU_Req_GETSTATUS
 814:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   *         Handles the DFU GETSTATUS request.
 815:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * @param  pdev: instance
 816:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * @retval status
 817:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   */
 818:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** static void DFU_Req_GETSTATUS(void *pdev)
 819:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** {
 820:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   switch (DeviceState)
 821:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   {
 822:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   case   STATE_dfuDNLOAD_SYNC:
 823:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     if (wlength != 0)
 824:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     {
 825:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       DeviceState = STATE_dfuDNBUSY;
 826:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       DeviceStatus[4] = DeviceState;
 827:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       if ((wBlockNum == 0) && (MAL_Buffer[0] == CMD_ERASE))
 828:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       {
 829:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         MAL_GetStatus(Pointer, 0, DeviceStatus);
 830:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       }
 831:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       else
 832:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       {
 833:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         MAL_GetStatus(Pointer, 1, DeviceStatus);
 834:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       }
 835:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     }
 836:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     else  /* (wlength==0)*/
 837:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     {
 838:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       DeviceState = STATE_dfuDNLOAD_IDLE;
 839:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       DeviceStatus[4] = DeviceState;
 840:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       DeviceStatus[1] = 0;
 841:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       DeviceStatus[2] = 0;
 842:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       DeviceStatus[3] = 0;
 843:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     }
 844:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     break;
 845:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     
 846:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   case   STATE_dfuMANIFEST_SYNC :
 847:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     if (Manifest_State == Manifest_In_Progress)
 848:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     {
 849:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       DeviceState = STATE_dfuMANIFEST;
 850:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       DeviceStatus[4] = DeviceState;
 851:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       DeviceStatus[1] = 1;             /*bwPollTimeout = 1ms*/
 852:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       DeviceStatus[2] = 0;
 853:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       DeviceStatus[3] = 0;
 854:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       //break;
 855:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     }
 856:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     else if ((Manifest_State == Manifest_complete) && \
 857:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       ((usbd_dfu_CfgDesc[(11 + (9 * USBD_ITF_MAX_NUM))]) & 0x04))
 858:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     {
 859:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       DeviceState = STATE_dfuIDLE;
 860:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       DeviceStatus[4] = DeviceState;
 861:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       DeviceStatus[1] = 0;
 862:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       DeviceStatus[2] = 0;
 863:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       DeviceStatus[3] = 0;
 864:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       //break;
 865:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     }
 866:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     break;
 867:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     
 868:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   default :
 869:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     break;
 870:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   }
 871:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   
 872:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   /* Send the status data over EP0 */
 873:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   USBD_CtlSendData (pdev,
 874:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****                     (uint8_t *)(&(DeviceStatus[0])),
 875:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****                     6);
 876:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** }
 877:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 878:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** /**
 879:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * @brief  DFU_Req_CLRSTATUS 
 880:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   *         Handles the DFU CLRSTATUS request.
 881:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * @param  pdev: device instance
 882:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * @retval status
 883:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   */
 884:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** static void DFU_Req_CLRSTATUS(void *pdev)
 885:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** {
 886:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   if (DeviceState == STATE_dfuERROR)
 887:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   {
 888:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceState = STATE_dfuIDLE;
 889:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[0] = STATUS_OK;/*bStatus*/
 890:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[1] = 0;
 891:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[2] = 0;
 892:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[3] = 0; /*bwPollTimeout=0ms*/
 893:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[4] = DeviceState;/*bState*/
 894:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[5] = 0;/*iString*/
 895:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   }
 896:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   else
 897:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   {   /*State Error*/
 898:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceState = STATE_dfuERROR;
 899:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[0] = STATUS_ERRUNKNOWN;/*bStatus*/
 900:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[1] = 0;
 901:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[2] = 0;
 902:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[3] = 0; /*bwPollTimeout=0ms*/
 903:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[4] = DeviceState;/*bState*/
 904:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[5] = 0;/*iString*/
 905:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   }
 906:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** }
 907:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 908:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** /**
 909:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * @brief  DFU_Req_GETSTATE
 910:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   *         Handles the DFU GETSTATE request.
 911:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * @param  pdev: device instance
 912:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * @retval None
 913:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   */
 914:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** static void DFU_Req_GETSTATE(void *pdev)
 915:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** {
 916:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   /* Return the current state of the DFU interface */
 917:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   USBD_CtlSendData (pdev, 
 918:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****                     &DeviceState,
 919:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****                     1);  
 920:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** }
 921:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 922:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** /**
 923:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * @brief  DFU_Req_ABORT
 924:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   *         Handles the DFU ABORT request.
 925:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * @param  pdev: device instance
 926:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * @retval None
 927:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   */
 928:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** static void DFU_Req_ABORT(void *pdev)
 929:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** {
 930:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   if (DeviceState == STATE_dfuIDLE || DeviceState == STATE_dfuDNLOAD_SYNC
 931:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       || DeviceState == STATE_dfuDNLOAD_IDLE || DeviceState == STATE_dfuMANIFEST_SYNC
 932:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         || DeviceState == STATE_dfuUPLOAD_IDLE )
 933:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   {
 934:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceState = STATE_dfuIDLE;
 935:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[0] = STATUS_OK;
 936:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[1] = 0;
 937:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[2] = 0;
 938:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[3] = 0; /*bwPollTimeout=0ms*/
 939:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[4] = DeviceState;
 940:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[5] = 0; /*iString*/
 941:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     wBlockNum = 0;
 942:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     wlength = 0;
 943:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   }  
 944:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** }
 945:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 946:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** /**
 947:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * @brief  DFU_LeaveDFUMode
 948:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   *         Handles the sub-protocol DFU leave DFU mode request (leaves DFU mode
 949:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   *         and resets device to jump to user loaded code).
 950:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * @param  pdev: device instance
 951:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * @retval None
 952:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   */
 953:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** void DFU_LeaveDFUMode(void *pdev)
 954:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** {
 955:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****  Manifest_State = Manifest_complete;
 956:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 957:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   if ((usbd_dfu_CfgDesc[(11 + (9 * USBD_ITF_MAX_NUM))]) & 0x04)
 958:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   {
 959:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceState = STATE_dfuMANIFEST_SYNC;
 960:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[4] = DeviceState;
 961:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[1] = 0;
 962:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[2] = 0;
 963:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[3] = 0;
 964:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     return;
 965:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   }
 966:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   else
 967:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   {
 968:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceState = STATE_dfuMANIFEST_WAIT_RESET;
 969:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[4] = DeviceState;
 970:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[1] = 0;
 971:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[2] = 0;
 972:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[3] = 0;
 973:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 974:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     /* Disconnect the USB device */
 975:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DCD_DevDisconnect (pdev);
 976:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 977:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     /* DeInitilialize the MAL(Media Access Layer) */
 978:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     MAL_DeInit();
 979:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     
 980:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     /* Generate system reset to allow jumping to the user code */
 981:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     NVIC_SystemReset();
 982:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****    
 983:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     /* This instruction will not be reached (system reset) */
 984:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     return;
 985:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   }  
 986:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** }
 987:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** 
 988:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** /**
 989:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * @brief  USBD_DFU_GetCfgDesc 
 990:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   *         Returns configuration descriptor
 991:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * @param  speed : current device speed
 992:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * @param  length : pointer data length
 993:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   * @retval pointer to descriptor buffer
 994:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   */
 995:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** static uint8_t  *USBD_DFU_GetCfgDesc (uint8_t speed, uint16_t *length)
 996:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** {
  47              		.loc 1 996 0
  48              		.cfi_startproc
  49              		@ args = 0, pretend = 0, frame = 0
  50              		@ frame_needed = 0, uses_anonymous_args = 0
  51              		@ link register save eliminated.
  52              	.LVL2:
 997:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   *length = sizeof (usbd_dfu_CfgDesc);
  53              		.loc 1 997 0
  54 0000 1B23     		movs	r3, #27
  55 0002 0B80     		strh	r3, [r1, #0]	@ movhi
 998:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   return usbd_dfu_CfgDesc;
 999:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** }
  56              		.loc 1 999 0
  57 0004 0048     		ldr	r0, .L3
  58              	.LVL3:
  59 0006 7047     		bx	lr
  60              	.L4:
  61              		.align	2
  62              	.L3:
  63 0008 00000000 		.word	.LANCHOR0
  64              		.cfi_endproc
  65              	.LFE123:
  67              		.section	.text.usbd_dfu_DeInit,"ax",%progbits
  68              		.align	1
  69              		.thumb
  70              		.thumb_func
  72              	usbd_dfu_DeInit:
  73              	.LFB111:
 430:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** {
  74              		.loc 1 430 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              	.LVL4:
 432:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   DeviceState = STATE_dfuIDLE;
  79              		.loc 1 432 0
  80 0000 074B     		ldr	r3, .L6
  81 0002 0222     		movs	r2, #2
 430:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** {
  82              		.loc 1 430 0
  83 0004 10B5     		push	{r4, lr}
  84              	.LCFI0:
  85              		.cfi_def_cfa_offset 8
  86              		.cfi_offset 14, -4
  87              		.cfi_offset 4, -8
 432:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   DeviceState = STATE_dfuIDLE;
  88              		.loc 1 432 0
  89 0006 1A70     		strb	r2, [r3, #0]
 433:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   DeviceStatus[0] = STATUS_OK;
  90              		.loc 1 433 0
  91 0008 064B     		ldr	r3, .L6+4
  92 000a 0024     		movs	r4, #0
  93 000c 1C70     		strb	r4, [r3, #0]
 434:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   DeviceStatus[4] = DeviceState;
  94              		.loc 1 434 0
  95 000e 1A71     		strb	r2, [r3, #4]
 435:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   wBlockNum = 0;
  96              		.loc 1 435 0
  97 0010 054B     		ldr	r3, .L6+8
  98 0012 1C60     		str	r4, [r3, #0]
 436:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   wlength = 0;
  99              		.loc 1 436 0
 100 0014 054B     		ldr	r3, .L6+12
 101 0016 1C60     		str	r4, [r3, #0]
 439:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   MAL_DeInit();
 102              		.loc 1 439 0
 103 0018 FFF7FEFF 		bl	MAL_DeInit
 104              	.LVL5:
 442:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** }
 105              		.loc 1 442 0
 106 001c 2046     		mov	r0, r4
 107 001e 10BD     		pop	{r4, pc}
 108              	.L7:
 109              		.align	2
 110              	.L6:
 111 0020 00000000 		.word	DeviceState
 112 0024 00000000 		.word	DeviceStatus
 113 0028 00000000 		.word	.LANCHOR1
 114 002c 00000000 		.word	.LANCHOR2
 115              		.cfi_endproc
 116              	.LFE111:
 118              		.section	.text.usbd_dfu_Setup,"ax",%progbits
 119              		.align	1
 120              		.thumb
 121              		.thumb_func
 123              	usbd_dfu_Setup:
 124              	.LFB112:
 453:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** {
 125              		.loc 1 453 0
 126              		.cfi_startproc
 127              		@ args = 0, pretend = 0, frame = 0
 128              		@ frame_needed = 0, uses_anonymous_args = 0
 129              	.LVL6:
 130 0000 70B5     		push	{r4, r5, r6, lr}
 131              	.LCFI1:
 132              		.cfi_def_cfa_offset 16
 133              		.cfi_offset 14, -4
 134              		.cfi_offset 6, -8
 135              		.cfi_offset 5, -12
 136              		.cfi_offset 4, -16
 457:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   switch (req->bmRequest & USB_REQ_TYPE_MASK)
 137              		.loc 1 457 0
 138 0002 0D78     		ldrb	r5, [r1, #0]	@ zero_extendqisi2
 139 0004 15F06005 		ands	r5, r5, #96
 453:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** {
 140              		.loc 1 453 0
 141 0008 0446     		mov	r4, r0
 457:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   switch (req->bmRequest & USB_REQ_TYPE_MASK)
 142              		.loc 1 457 0
 143 000a 00F02E81 		beq	.L10
 144 000e 202D     		cmp	r5, #32
 145 0010 40F06681 		bne	.L50
 461:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     switch (req->bRequest)
 146              		.loc 1 461 0
 147 0014 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 148 0016 062B     		cmp	r3, #6
 149 0018 00F22381 		bhi	.L12
 150 001c DFE813F0 		tbh	[pc, r3, lsl #1]
 151              	.L20:
 152 0020 F700     		.2byte	(.L13-.L20)/2
 153 0022 0700     		.2byte	(.L14-.L20)/2
 154 0024 3400     		.2byte	(.L15-.L20)/2
 155 0026 8500     		.2byte	(.L16-.L20)/2
 156 0028 C100     		.2byte	(.L17-.L20)/2
 157 002a D600     		.2byte	(.L18-.L20)/2
 158 002c DB00     		.2byte	(.L19-.L20)/2
 159              	.L14:
 160              	.LVL7:
 161              	.LBB50:
 162              	.LBB51:
 677:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   if (req->wLength > 0)
 163              		.loc 1 677 0
 164 002e CD88     		ldrh	r5, [r1, #6]
 165 0030 9B4B     		ldr	r3, .L63
 166 0032 BDB1     		cbz	r5, .L21
 679:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     if ((DeviceState == STATE_dfuIDLE) || (DeviceState == STATE_dfuDNLOAD_IDLE))
 167              		.loc 1 679 0
 168 0034 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 169 0036 022B     		cmp	r3, #2
 170 0038 01D0     		beq	.L22
 171 003a 052B     		cmp	r3, #5
 172 003c 0FD1     		bne	.L23
 173              	.L22:
 682:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       wBlockNum = req->wValue;
 174              		.loc 1 682 0
 175 003e 4A88     		ldrh	r2, [r1, #2]
 176 0040 984B     		ldr	r3, .L63+4
 690:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       USBD_CtlPrepareRx (pdev,
 177              		.loc 1 690 0
 178 0042 9949     		ldr	r1, .L63+8
 179              	.LVL8:
 682:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       wBlockNum = req->wValue;
 180              		.loc 1 682 0
 181 0044 1A60     		str	r2, [r3, #0]
 683:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       wlength = req->wLength;
 182              		.loc 1 683 0
 183 0046 994B     		ldr	r3, .L63+12
 686:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       DeviceState = STATE_dfuDNLOAD_SYNC;
 184              		.loc 1 686 0
 185 0048 954A     		ldr	r2, .L63
 683:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       wlength = req->wLength;
 186              		.loc 1 683 0
 187 004a 1D60     		str	r5, [r3, #0]
 686:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       DeviceState = STATE_dfuDNLOAD_SYNC;
 188              		.loc 1 686 0
 189 004c 0323     		movs	r3, #3
 190 004e 1370     		strb	r3, [r2, #0]
 687:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       DeviceStatus[4] = DeviceState;
 191              		.loc 1 687 0
 192 0050 974A     		ldr	r2, .L63+16
 690:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       USBD_CtlPrepareRx (pdev,
 193              		.loc 1 690 0
 194 0052 2046     		mov	r0, r4
 195              	.LVL9:
 687:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       DeviceStatus[4] = DeviceState;
 196              		.loc 1 687 0
 197 0054 1371     		strb	r3, [r2, #4]
 690:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       USBD_CtlPrepareRx (pdev,
 198              		.loc 1 690 0
 199 0056 2A46     		mov	r2, r5
 200 0058 FFF7FEFF 		bl	USBD_CtlPrepareRx
 201 005c 40E1     		b	.L50
 202              	.LVL10:
 203              	.L23:
 698:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       USBD_CtlError (pdev, req);
 204              		.loc 1 698 0
 205 005e FFF7FEFF 		bl	USBD_CtlError
 206              	.LVL11:
 207 0062 3DE1     		b	.L50
 208              	.LVL12:
 209              	.L21:
 705:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     if (DeviceState == STATE_dfuDNLOAD_IDLE || DeviceState == STATE_dfuIDLE )
 210              		.loc 1 705 0
 211 0064 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 212 0066 052A     		cmp	r2, #5
 213 0068 02D0     		beq	.L24
 214 006a 022A     		cmp	r2, #2
 215 006c 40F03481 		bne	.L47
 216              	.L24:
 707:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       Manifest_State = Manifest_In_Progress;
 217              		.loc 1 707 0
 218 0070 904A     		ldr	r2, .L63+20
 219 0072 0121     		movs	r1, #1
 220              	.LVL13:
 221 0074 1160     		str	r1, [r2, #0]
 708:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       DeviceState = STATE_dfuMANIFEST_SYNC;
 222              		.loc 1 708 0
 223 0076 0622     		movs	r2, #6
 224 0078 1A70     		strb	r2, [r3, #0]
 709:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       DeviceStatus[1] = 0;
 225              		.loc 1 709 0
 226 007a 8D4B     		ldr	r3, .L63+16
 227 007c 0025     		movs	r5, #0
 228 007e 5D70     		strb	r5, [r3, #1]
 710:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       DeviceStatus[2] = 0;
 229              		.loc 1 710 0
 230 0080 9D70     		strb	r5, [r3, #2]
 711:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       DeviceStatus[3] = 0;
 231              		.loc 1 711 0
 232 0082 DD70     		strb	r5, [r3, #3]
 712:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       DeviceStatus[4] = DeviceState;
 233              		.loc 1 712 0
 234 0084 1A71     		strb	r2, [r3, #4]
 235 0086 2CE1     		b	.L9
 236              	.LVL14:
 237              	.L15:
 238              	.LBE51:
 239              	.LBE50:
 240              	.LBB52:
 241              	.LBB53:
 735:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   if (req->wLength > 0)
 242              		.loc 1 735 0
 243 0088 CB88     		ldrh	r3, [r1, #6]
 244 008a 854A     		ldr	r2, .L63
 245 008c 002B     		cmp	r3, #0
 246 008e 44D0     		beq	.L26
 737:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     if ((DeviceState == STATE_dfuIDLE) || (DeviceState == STATE_dfuUPLOAD_IDLE))
 247              		.loc 1 737 0
 248 0090 1578     		ldrb	r5, [r2, #0]	@ zero_extendqisi2
 249 0092 8648     		ldr	r0, .L63+12
 250 0094 834A     		ldr	r2, .L63+4
 251 0096 022D     		cmp	r5, #2
 252 0098 01D0     		beq	.L27
 253 009a 092D     		cmp	r5, #9
 254 009c 39D1     		bne	.L28
 255              	.L27:
 740:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       wBlockNum = req->wValue;
 256              		.loc 1 740 0
 257 009e 4D88     		ldrh	r5, [r1, #2]
 741:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       wlength = req->wLength;
 258              		.loc 1 741 0
 259 00a0 0360     		str	r3, [r0, #0]
 740:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       wBlockNum = req->wValue;
 260              		.loc 1 740 0
 261 00a2 1560     		str	r5, [r2, #0]
 262 00a4 7E48     		ldr	r0, .L63
 263 00a6 824A     		ldr	r2, .L63+16
 744:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       if (wBlockNum == 0)
 264              		.loc 1 744 0
 265 00a8 8DB9     		cbnz	r5, .L29
 747:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         DeviceState = (wlength > 3)? STATE_dfuIDLE:STATE_dfuUPLOAD_IDLE;
 266              		.loc 1 747 0
 267 00aa 032B     		cmp	r3, #3
 268 00ac 94BF     		ite	ls
 269 00ae 0923     		movls	r3, #9
 270 00b0 0223     		movhi	r3, #2
 754:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         MAL_Buffer[0] = CMD_GETCOMMANDS;
 271              		.loc 1 754 0
 272 00b2 7D49     		ldr	r1, .L63+8
 273              	.LVL15:
 747:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         DeviceState = (wlength > 3)? STATE_dfuIDLE:STATE_dfuUPLOAD_IDLE;
 274              		.loc 1 747 0
 275 00b4 0370     		strb	r3, [r0, #0]
 748:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         DeviceStatus[4] = DeviceState;
 276              		.loc 1 748 0
 277 00b6 1371     		strb	r3, [r2, #4]
 755:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         MAL_Buffer[1] = CMD_SETADDRESSPOINTER;
 278              		.loc 1 755 0
 279 00b8 2123     		movs	r3, #33
 280 00ba 4B70     		strb	r3, [r1, #1]
 756:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         MAL_Buffer[2] = CMD_ERASE;
 281              		.loc 1 756 0
 282 00bc 4123     		movs	r3, #65
 749:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         DeviceStatus[1] = 0;
 283              		.loc 1 749 0
 284 00be 5570     		strb	r5, [r2, #1]
 750:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         DeviceStatus[2] = 0;
 285              		.loc 1 750 0
 286 00c0 9570     		strb	r5, [r2, #2]
 751:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         DeviceStatus[3] = 0;
 287              		.loc 1 751 0
 288 00c2 D570     		strb	r5, [r2, #3]
 754:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         MAL_Buffer[0] = CMD_GETCOMMANDS;
 289              		.loc 1 754 0
 290 00c4 0D70     		strb	r5, [r1, #0]
 756:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         MAL_Buffer[2] = CMD_ERASE;
 291              		.loc 1 756 0
 292 00c6 8B70     		strb	r3, [r1, #2]
 759:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         USBD_CtlSendData (pdev,
 293              		.loc 1 759 0
 294 00c8 2046     		mov	r0, r4
 295 00ca 0322     		movs	r2, #3
 296 00cc E4E0     		b	.L57
 297              	.LVL16:
 298              	.L29:
 763:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       else if (wBlockNum > 1)
 299              		.loc 1 763 0
 300 00ce 012D     		cmp	r5, #1
 301 00d0 17D0     		beq	.L31
 765:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         DeviceState = STATE_dfuUPLOAD_IDLE ;
 302              		.loc 1 765 0
 303 00d2 0921     		movs	r1, #9
 304              	.LVL17:
 767:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         DeviceStatus[1] = 0;
 305              		.loc 1 767 0
 306 00d4 0026     		movs	r6, #0
 765:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         DeviceState = STATE_dfuUPLOAD_IDLE ;
 307              		.loc 1 765 0
 308 00d6 0170     		strb	r1, [r0, #0]
 766:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         DeviceStatus[4] = DeviceState;
 309              		.loc 1 766 0
 310 00d8 1171     		strb	r1, [r2, #4]
 770:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         Addr = ((wBlockNum - 2) * XFERSIZE) + Pointer;  /* Change is Accelerated*/
 311              		.loc 1 770 0
 312 00da 7749     		ldr	r1, .L63+24
 767:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         DeviceStatus[1] = 0;
 313              		.loc 1 767 0
 314 00dc 5670     		strb	r6, [r2, #1]
 768:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         DeviceStatus[2] = 0;
 315              		.loc 1 768 0
 316 00de 9670     		strb	r6, [r2, #2]
 769:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         DeviceStatus[3] = 0;
 317              		.loc 1 769 0
 318 00e0 D670     		strb	r6, [r2, #3]
 319              	.LVL18:
 770:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         Addr = ((wBlockNum - 2) * XFERSIZE) + Pointer;  /* Change is Accelerated*/
 320              		.loc 1 770 0
 321 00e2 764A     		ldr	r2, .L63+28
 322 00e4 0868     		ldr	r0, [r1, #0]
 323 00e6 AA18     		adds	r2, r5, r2
 773:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         Phy_Addr = MAL_Read(Addr, wlength);
 324              		.loc 1 773 0
 325 00e8 1946     		mov	r1, r3
 770:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         Addr = ((wBlockNum - 2) * XFERSIZE) + Pointer;  /* Change is Accelerated*/
 326              		.loc 1 770 0
 327 00ea 00EB8220 		add	r0, r0, r2, lsl #10
 773:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         Phy_Addr = MAL_Read(Addr, wlength);
 328              		.loc 1 773 0
 329 00ee FFF7FEFF 		bl	MAL_Read
 330              	.LVL19:
 776:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         USBD_CtlSendData (pdev,
 331              		.loc 1 776 0
 332 00f2 6E4B     		ldr	r3, .L63+12
 773:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         Phy_Addr = MAL_Read(Addr, wlength);
 333              		.loc 1 773 0
 334 00f4 0146     		mov	r1, r0
 335              	.LVL20:
 776:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         USBD_CtlSendData (pdev,
 336              		.loc 1 776 0
 337 00f6 1A88     		ldrh	r2, [r3, #0]
 338 00f8 2046     		mov	r0, r4
 339              	.LVL21:
 340 00fa FFF7FEFF 		bl	USBD_CtlSendData
 341              	.LVL22:
 536:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   return USBD_OK;
 342              		.loc 1 536 0
 343 00fe 3546     		mov	r5, r6
 344 0100 EFE0     		b	.L9
 345              	.LVL23:
 346              	.L31:
 784:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         DeviceStatus[1] = 0;
 347              		.loc 1 784 0
 348 0102 0025     		movs	r5, #0
 782:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         DeviceState = STATUS_ERRSTALLEDPKT;
 349              		.loc 1 782 0
 350 0104 0F23     		movs	r3, #15
 351 0106 0370     		strb	r3, [r0, #0]
 783:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         DeviceStatus[4] = DeviceState;
 352              		.loc 1 783 0
 353 0108 1371     		strb	r3, [r2, #4]
 784:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         DeviceStatus[1] = 0;
 354              		.loc 1 784 0
 355 010a 5570     		strb	r5, [r2, #1]
 785:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         DeviceStatus[2] = 0;
 356              		.loc 1 785 0
 357 010c 9570     		strb	r5, [r2, #2]
 786:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         DeviceStatus[3] = 0;
 358              		.loc 1 786 0
 359 010e D570     		strb	r5, [r2, #3]
 360 0110 E2E0     		b	.L47
 361              	.L28:
 795:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       wlength = 0;
 362              		.loc 1 795 0
 363 0112 0025     		movs	r5, #0
 364 0114 0560     		str	r5, [r0, #0]
 796:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       wBlockNum = 0;   
 365              		.loc 1 796 0
 366 0116 1560     		str	r5, [r2, #0]
 367 0118 DEE0     		b	.L47
 368              	.L26:
 804:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceState = STATE_dfuIDLE;
 369              		.loc 1 804 0
 370 011a 0221     		movs	r1, #2
 371              	.LVL24:
 372 011c 1170     		strb	r1, [r2, #0]
 805:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[1] = 0;
 373              		.loc 1 805 0
 374 011e 644A     		ldr	r2, .L63+16
 375 0120 5370     		strb	r3, [r2, #1]
 806:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[2] = 0;
 376              		.loc 1 806 0
 377 0122 9370     		strb	r3, [r2, #2]
 807:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[3] = 0;
 378              		.loc 1 807 0
 379 0124 D370     		strb	r3, [r2, #3]
 808:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[4] = DeviceState;
 380              		.loc 1 808 0
 381 0126 1171     		strb	r1, [r2, #4]
 382 0128 D4E0     		b	.L58
 383              	.LVL25:
 384              	.L16:
 385              	.LBE53:
 386              	.LBE52:
 387              	.LBB54:
 388              	.LBB55:
 820:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   switch (DeviceState)
 389              		.loc 1 820 0
 390 012a 5D49     		ldr	r1, .L63
 391              	.LVL26:
 392 012c 0B78     		ldrb	r3, [r1, #0]	@ zero_extendqisi2
 393 012e 032B     		cmp	r3, #3
 394 0130 02D0     		beq	.L33
 395 0132 062B     		cmp	r3, #6
 396 0134 31D1     		bne	.L32
 397 0136 19E0     		b	.L62
 398              	.L33:
 823:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     if (wlength != 0)
 399              		.loc 1 823 0
 400 0138 5C4B     		ldr	r3, .L63+12
 401 013a 5D4A     		ldr	r2, .L63+16
 402 013c 1B68     		ldr	r3, [r3, #0]
 403 013e 93B1     		cbz	r3, .L35
 825:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       DeviceState = STATE_dfuDNBUSY;
 404              		.loc 1 825 0
 405 0140 0423     		movs	r3, #4
 406 0142 0B70     		strb	r3, [r1, #0]
 826:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       DeviceStatus[4] = DeviceState;
 407              		.loc 1 826 0
 408 0144 1371     		strb	r3, [r2, #4]
 827:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       if ((wBlockNum == 0) && (MAL_Buffer[0] == CMD_ERASE))
 409              		.loc 1 827 0
 410 0146 574B     		ldr	r3, .L63+4
 411 0148 1968     		ldr	r1, [r3, #0]
 412 014a 5B4B     		ldr	r3, .L63+24
 413 014c 29B9     		cbnz	r1, .L36
 414 014e 5648     		ldr	r0, .L63+8
 415 0150 0078     		ldrb	r0, [r0, #0]	@ zero_extendqisi2
 416 0152 4128     		cmp	r0, #65
 417 0154 01D1     		bne	.L36
 829:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         MAL_GetStatus(Pointer, 0, DeviceStatus);
 418              		.loc 1 829 0
 419 0156 1868     		ldr	r0, [r3, #0]
 420 0158 02E0     		b	.L55
 421              	.L36:
 833:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         MAL_GetStatus(Pointer, 1, DeviceStatus);
 422              		.loc 1 833 0
 423 015a 1868     		ldr	r0, [r3, #0]
 424 015c 544A     		ldr	r2, .L63+16
 425 015e 0121     		movs	r1, #1
 426              	.L55:
 427 0160 FFF7FEFF 		bl	MAL_GetStatus
 428 0164 19E0     		b	.L32
 429              	.L35:
 838:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       DeviceState = STATE_dfuDNLOAD_IDLE;
 430              		.loc 1 838 0
 431 0166 0520     		movs	r0, #5
 432 0168 0870     		strb	r0, [r1, #0]
 433 016a 12E0     		b	.L60
 434              	.L62:
 847:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     if (Manifest_State == Manifest_In_Progress)
 435              		.loc 1 847 0
 436 016c 514B     		ldr	r3, .L63+20
 437 016e 1B68     		ldr	r3, [r3, #0]
 438 0170 012B     		cmp	r3, #1
 439 0172 06D1     		bne	.L37
 850:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       DeviceStatus[4] = DeviceState;
 440              		.loc 1 850 0
 441 0174 4E4A     		ldr	r2, .L63+16
 849:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       DeviceState = STATE_dfuMANIFEST;
 442              		.loc 1 849 0
 443 0176 0720     		movs	r0, #7
 851:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       DeviceStatus[1] = 1;             /*bwPollTimeout = 1ms*/
 444              		.loc 1 851 0
 445 0178 5370     		strb	r3, [r2, #1]
 849:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       DeviceState = STATE_dfuMANIFEST;
 446              		.loc 1 849 0
 447 017a 0870     		strb	r0, [r1, #0]
 850:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       DeviceStatus[4] = DeviceState;
 448              		.loc 1 850 0
 449 017c 1071     		strb	r0, [r2, #4]
 852:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       DeviceStatus[2] = 0;
 450              		.loc 1 852 0
 451 017e 0023     		movs	r3, #0
 452 0180 09E0     		b	.L56
 453              	.L37:
 856:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     else if ((Manifest_State == Manifest_complete) && \
 454              		.loc 1 856 0
 455 0182 53B9     		cbnz	r3, .L32
 857:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       ((usbd_dfu_CfgDesc[(11 + (9 * USBD_ITF_MAX_NUM))]) & 0x04))
 456              		.loc 1 857 0
 457 0184 4E4A     		ldr	r2, .L63+32
 458 0186 127D     		ldrb	r2, [r2, #20]	@ zero_extendqisi2
 856:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     else if ((Manifest_State == Manifest_complete) && \
 459              		.loc 1 856 0
 460 0188 5207     		lsls	r2, r2, #29
 461 018a 06D5     		bpl	.L32
 859:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       DeviceState = STATE_dfuIDLE;
 462              		.loc 1 859 0
 463 018c 0220     		movs	r0, #2
 860:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       DeviceStatus[4] = DeviceState;
 464              		.loc 1 860 0
 465 018e 484A     		ldr	r2, .L63+16
 859:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       DeviceState = STATE_dfuIDLE;
 466              		.loc 1 859 0
 467 0190 0870     		strb	r0, [r1, #0]
 468              	.L60:
 860:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       DeviceStatus[4] = DeviceState;
 469              		.loc 1 860 0
 470 0192 1071     		strb	r0, [r2, #4]
 861:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       DeviceStatus[1] = 0;
 471              		.loc 1 861 0
 472 0194 5370     		strb	r3, [r2, #1]
 473              	.L56:
 862:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       DeviceStatus[2] = 0;
 474              		.loc 1 862 0
 475 0196 9370     		strb	r3, [r2, #2]
 863:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       DeviceStatus[3] = 0;
 476              		.loc 1 863 0
 477 0198 D370     		strb	r3, [r2, #3]
 478              	.L32:
 873:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   USBD_CtlSendData (pdev,
 479              		.loc 1 873 0
 480 019a 2046     		mov	r0, r4
 481 019c 4449     		ldr	r1, .L63+16
 482 019e 0622     		movs	r2, #6
 483 01a0 16E0     		b	.L61
 484              	.LVL27:
 485              	.L17:
 486              	.LBE55:
 487              	.LBE54:
 488              	.LBB56:
 489              	.LBB57:
 886:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   if (DeviceState == STATE_dfuERROR)
 490              		.loc 1 886 0
 491 01a2 3F4B     		ldr	r3, .L63
 492 01a4 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 493 01a6 0A2A     		cmp	r2, #10
 494 01a8 414A     		ldr	r2, .L63+16
 495 01aa 04D1     		bne	.L38
 888:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceState = STATE_dfuIDLE;
 496              		.loc 1 888 0
 497 01ac 0221     		movs	r1, #2
 498              	.LVL28:
 889:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[0] = STATUS_OK;/*bStatus*/
 499              		.loc 1 889 0
 500 01ae 0025     		movs	r5, #0
 888:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceState = STATE_dfuIDLE;
 501              		.loc 1 888 0
 502 01b0 1970     		strb	r1, [r3, #0]
 889:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[0] = STATUS_OK;/*bStatus*/
 503              		.loc 1 889 0
 504 01b2 1570     		strb	r5, [r2, #0]
 505 01b4 04E0     		b	.L59
 506              	.LVL29:
 507              	.L38:
 898:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceState = STATE_dfuERROR;
 508              		.loc 1 898 0
 509 01b6 0A21     		movs	r1, #10
 510              	.LVL30:
 511 01b8 1970     		strb	r1, [r3, #0]
 899:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[0] = STATUS_ERRUNKNOWN;/*bStatus*/
 512              		.loc 1 899 0
 513 01ba 0E23     		movs	r3, #14
 514 01bc 1370     		strb	r3, [r2, #0]
 900:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[1] = 0;
 515              		.loc 1 900 0
 516 01be 0025     		movs	r5, #0
 517              	.L59:
 518 01c0 5570     		strb	r5, [r2, #1]
 901:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[2] = 0;
 519              		.loc 1 901 0
 520 01c2 9570     		strb	r5, [r2, #2]
 902:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[3] = 0; /*bwPollTimeout=0ms*/
 521              		.loc 1 902 0
 522 01c4 D570     		strb	r5, [r2, #3]
 903:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[4] = DeviceState;/*bState*/
 523              		.loc 1 903 0
 524 01c6 1171     		strb	r1, [r2, #4]
 904:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[5] = 0;/*iString*/
 525              		.loc 1 904 0
 526 01c8 5571     		strb	r5, [r2, #5]
 527 01ca 8AE0     		b	.L9
 528              	.LVL31:
 529              	.L18:
 530              	.LBE57:
 531              	.LBE56:
 532              	.LBB58:
 533              	.LBB59:
 917:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   USBD_CtlSendData (pdev, 
 534              		.loc 1 917 0
 535 01cc 3449     		ldr	r1, .L63
 536              	.LVL32:
 537 01ce 0122     		movs	r2, #1
 538              	.LVL33:
 539              	.L61:
 540 01d0 FFF7FEFF 		bl	USBD_CtlSendData
 541 01d4 84E0     		b	.L50
 542              	.LVL34:
 543              	.L19:
 544              	.LBE59:
 545              	.LBE58:
 546              	.LBB60:
 547              	.LBB61:
 930:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   if (DeviceState == STATE_dfuIDLE || DeviceState == STATE_dfuDNLOAD_SYNC
 548              		.loc 1 930 0
 549 01d6 324A     		ldr	r2, .L63
 550 01d8 1378     		ldrb	r3, [r2, #0]	@ zero_extendqisi2
 551 01da 991E     		subs	r1, r3, #2
 552              	.LVL35:
 553 01dc C9B2     		uxtb	r1, r1
 554 01de 0129     		cmp	r1, #1
 555 01e0 1146     		mov	r1, r2
 556 01e2 05D9     		bls	.L39
 931:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       || DeviceState == STATE_dfuDNLOAD_IDLE || DeviceState == STATE_dfuMANIFEST_SYNC
 557              		.loc 1 931 0
 558 01e4 052B     		cmp	r3, #5
 559 01e6 03D0     		beq	.L39
 560 01e8 062B     		cmp	r3, #6
 561 01ea 01D0     		beq	.L39
 932:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         || DeviceState == STATE_dfuUPLOAD_IDLE )
 562              		.loc 1 932 0
 563 01ec 092B     		cmp	r3, #9
 564 01ee 77D1     		bne	.L50
 565              	.L39:
 935:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[0] = STATUS_OK;
 566              		.loc 1 935 0
 567 01f0 2F4B     		ldr	r3, .L63+16
 568 01f2 0025     		movs	r5, #0
 934:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceState = STATE_dfuIDLE;
 569              		.loc 1 934 0
 570 01f4 0222     		movs	r2, #2
 935:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[0] = STATUS_OK;
 571              		.loc 1 935 0
 572 01f6 1D70     		strb	r5, [r3, #0]
 936:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[1] = 0;
 573              		.loc 1 936 0
 574 01f8 5D70     		strb	r5, [r3, #1]
 937:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[2] = 0;
 575              		.loc 1 937 0
 576 01fa 9D70     		strb	r5, [r3, #2]
 938:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[3] = 0; /*bwPollTimeout=0ms*/
 577              		.loc 1 938 0
 578 01fc DD70     		strb	r5, [r3, #3]
 939:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[4] = DeviceState;
 579              		.loc 1 939 0
 580 01fe 1A71     		strb	r2, [r3, #4]
 940:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[5] = 0; /*iString*/
 581              		.loc 1 940 0
 582 0200 5D71     		strb	r5, [r3, #5]
 941:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     wBlockNum = 0;
 583              		.loc 1 941 0
 584 0202 284B     		ldr	r3, .L63+4
 934:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceState = STATE_dfuIDLE;
 585              		.loc 1 934 0
 586 0204 0A70     		strb	r2, [r1, #0]
 941:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     wBlockNum = 0;
 587              		.loc 1 941 0
 588 0206 1D60     		str	r5, [r3, #0]
 942:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     wlength = 0;
 589              		.loc 1 942 0
 590 0208 284B     		ldr	r3, .L63+12
 591 020a 1D60     		str	r5, [r3, #0]
 592 020c 69E0     		b	.L9
 593              	.LVL36:
 594              	.L13:
 595              	.LBE61:
 596              	.LBE60:
 597              	.LBB63:
 598              	.LBB64:
 637:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   if (DeviceState == STATE_dfuIDLE || DeviceState == STATE_dfuDNLOAD_SYNC
 599              		.loc 1 637 0
 600 020e 244A     		ldr	r2, .L63
 601 0210 1378     		ldrb	r3, [r2, #0]	@ zero_extendqisi2
 602 0212 981E     		subs	r0, r3, #2
 603 0214 C0B2     		uxtb	r0, r0
 604 0216 0128     		cmp	r0, #1
 605 0218 05D9     		bls	.L40
 638:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       || DeviceState == STATE_dfuDNLOAD_IDLE || DeviceState == STATE_dfuMANIFEST_SYNC
 606              		.loc 1 638 0
 607 021a 052B     		cmp	r3, #5
 608 021c 03D0     		beq	.L40
 609 021e 062B     		cmp	r3, #6
 610 0220 01D0     		beq	.L40
 639:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         || DeviceState == STATE_dfuUPLOAD_IDLE )
 611              		.loc 1 639 0
 612 0222 092B     		cmp	r3, #9
 613 0224 0DD1     		bne	.L41
 614              	.L40:
 642:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceState = STATE_dfuIDLE;
 615              		.loc 1 642 0
 616 0226 0220     		movs	r0, #2
 617 0228 1070     		strb	r0, [r2, #0]
 643:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[0] = STATUS_OK;
 618              		.loc 1 643 0
 619 022a 214A     		ldr	r2, .L63+16
 620 022c 0023     		movs	r3, #0
 621 022e 1370     		strb	r3, [r2, #0]
 644:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[1] = 0;
 622              		.loc 1 644 0
 623 0230 5370     		strb	r3, [r2, #1]
 645:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[2] = 0;
 624              		.loc 1 645 0
 625 0232 9370     		strb	r3, [r2, #2]
 646:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[3] = 0; /*bwPollTimeout=0ms*/
 626              		.loc 1 646 0
 627 0234 D370     		strb	r3, [r2, #3]
 647:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[4] = DeviceState;
 628              		.loc 1 647 0
 629 0236 1071     		strb	r0, [r2, #4]
 648:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[5] = 0; /*iString*/
 630              		.loc 1 648 0
 631 0238 5371     		strb	r3, [r2, #5]
 649:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     wBlockNum = 0;
 632              		.loc 1 649 0
 633 023a 1A4A     		ldr	r2, .L63+4
 634 023c 1360     		str	r3, [r2, #0]
 650:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     wlength = 0;
 635              		.loc 1 650 0
 636 023e 1B4A     		ldr	r2, .L63+12
 637 0240 1360     		str	r3, [r2, #0]
 638              	.L41:
 654:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   if ((usbd_dfu_CfgDesc[12 + (9 * USBD_ITF_MAX_NUM)]) & DFU_DETACH_MASK)
 639              		.loc 1 654 0
 640 0242 1F4B     		ldr	r3, .L63+32
 641 0244 5D7D     		ldrb	r5, [r3, #21]	@ zero_extendqisi2
 642 0246 15F01005 		ands	r5, r5, #16
 643 024a 06D0     		beq	.L42
 657:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DCD_DevDisconnect (pdev);
 644              		.loc 1 657 0
 645 024c 2046     		mov	r0, r4
 646 024e FFF7FEFF 		bl	DCD_DevDisconnect
 647              	.LVL37:
 658:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DCD_DevConnect (pdev);  
 648              		.loc 1 658 0
 649 0252 2046     		mov	r0, r4
 650 0254 FFF7FEFF 		bl	DCD_DevConnect
 651 0258 42E0     		b	.L50
 652              	.LVL38:
 653              	.L42:
 663:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     USB_OTG_BSP_mDelay (req->wValue);  
 654              		.loc 1 663 0
 655 025a 4888     		ldrh	r0, [r1, #2]
 656 025c FFF7FEFF 		bl	USB_OTG_BSP_mDelay
 657              	.LVL39:
 658 0260 3FE0     		b	.L9
 659              	.LVL40:
 660              	.L12:
 661              	.LBE64:
 662              	.LBE63:
 492:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       USBD_CtlError (pdev, req);
 663              		.loc 1 492 0
 664 0262 FFF7FEFF 		bl	USBD_CtlError
 665              	.LVL41:
 493:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       return USBD_FAIL;
 666              		.loc 1 493 0
 667 0266 0225     		movs	r5, #2
 668 0268 3BE0     		b	.L9
 669              	.LVL42:
 670              	.L10:
 499:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     switch (req->bRequest)
 671              		.loc 1 499 0
 672 026a 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 673 026c 0A2B     		cmp	r3, #10
 674 026e 11D0     		beq	.L44
 675 0270 0B2B     		cmp	r3, #11
 676 0272 2BD0     		beq	.L45
 677 0274 062B     		cmp	r3, #6
 678 0276 34D1     		bne	.L9
 502:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       if( (req->wValue >> 8) == DFU_DESCRIPTOR_TYPE)
 679              		.loc 1 502 0
 680 0278 4B88     		ldrh	r3, [r1, #2]
 681 027a 1B0A     		lsrs	r3, r3, #8
 682 027c 212B     		cmp	r3, #33
 683 027e 05D1     		bne	.L52
 684              	.LVL43:
 509:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         len = MIN(USB_DFU_DESC_SIZ , req->wLength);
 685              		.loc 1 509 0
 686 0280 CA88     		ldrh	r2, [r1, #6]
 507:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         pbuf = usbd_dfu_CfgDesc + 9 + (9 * USBD_ITF_MAX_NUM);
 687              		.loc 1 507 0
 688 0282 1049     		ldr	r1, .L63+36
 689              	.LVL44:
 509:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         len = MIN(USB_DFU_DESC_SIZ , req->wLength);
 690              		.loc 1 509 0
 691 0284 092A     		cmp	r2, #9
 692 0286 28BF     		it	cs
 693 0288 0922     		movcs	r2, #9
 694              	.LVL45:
 695 028a 01E0     		b	.L46
 696              	.LVL46:
 697              	.L52:
 455:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   uint8_t  *pbuf = NULL;
 698              		.loc 1 455 0
 699 028c 2946     		mov	r1, r5
 700              	.LVL47:
 454:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   uint16_t len = 0;
 701              		.loc 1 454 0
 702 028e 2A46     		mov	r2, r5
 703              	.LVL48:
 704              	.L46:
 512:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       USBD_CtlSendData (pdev, 
 705              		.loc 1 512 0
 706 0290 2046     		mov	r0, r4
 707 0292 9DE7     		b	.L61
 708              	.LVL49:
 709              	.L44:
 518:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       USBD_CtlSendData (pdev,
 710              		.loc 1 518 0
 711 0294 0C49     		ldr	r1, .L63+40
 712              	.LVL50:
 713 0296 0122     		movs	r2, #1
 714              	.L57:
 715 0298 FFF7FEFF 		bl	USBD_CtlSendData
 521:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       break;
 716              		.loc 1 521 0
 717 029c 21E0     		b	.L9
 718              	.L64:
 719 029e 00BF     		.align	2
 720              	.L63:
 721 02a0 00000000 		.word	DeviceState
 722 02a4 00000000 		.word	.LANCHOR1
 723 02a8 00000000 		.word	MAL_Buffer
 724 02ac 00000000 		.word	.LANCHOR2
 725 02b0 00000000 		.word	DeviceStatus
 726 02b4 00000000 		.word	.LANCHOR3
 727 02b8 00000000 		.word	.LANCHOR4
 728 02bc FEFF3F00 		.word	4194302
 729 02c0 00000000 		.word	.LANCHOR0
 730 02c4 12000000 		.word	.LANCHOR0+18
 731 02c8 00000000 		.word	.LANCHOR5
 732              	.LVL51:
 733              	.L45:
 524:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       if ((uint8_t)(req->wValue) < USBD_ITF_MAX_NUM)
 734              		.loc 1 524 0
 735 02cc 8B78     		ldrb	r3, [r1, #2]	@ zero_extendqisi2
 736 02ce 1BB9     		cbnz	r3, .L47
 526:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         usbd_dfu_AltSet = (uint8_t)(req->wValue);
 737              		.loc 1 526 0
 738 02d0 054A     		ldr	r2, .L65
 739 02d2 1360     		str	r3, [r2, #0]
 740              	.LVL52:
 741              	.L58:
 536:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   return USBD_OK;
 742              		.loc 1 536 0
 743 02d4 1D46     		mov	r5, r3
 744 02d6 04E0     		b	.L9
 745              	.LVL53:
 746              	.L47:
 531:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         USBD_CtlError (pdev, req);
 747              		.loc 1 531 0
 748 02d8 2046     		mov	r0, r4
 749 02da FFF7FEFF 		bl	USBD_CtlError
 750              	.LVL54:
 751 02de 00E0     		b	.L9
 752              	.LVL55:
 753              	.L50:
 754              	.LBB65:
 755              	.LBB62:
 536:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   return USBD_OK;
 756              		.loc 1 536 0
 757 02e0 0025     		movs	r5, #0
 758              	.L9:
 759              	.LBE62:
 760              	.LBE65:
 537:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** }
 761              		.loc 1 537 0
 762 02e2 2846     		mov	r0, r5
 763 02e4 70BD     		pop	{r4, r5, r6, pc}
 764              	.L66:
 765 02e6 00BF     		.align	2
 766              	.L65:
 767 02e8 00000000 		.word	.LANCHOR5
 768              		.cfi_endproc
 769              	.LFE112:
 771              		.section	.text.usbd_dfu_Init,"ax",%progbits
 772              		.align	1
 773              		.thumb
 774              		.thumb_func
 776              	usbd_dfu_Init:
 777              	.LFB110:
 409:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** {
 778              		.loc 1 409 0
 779              		.cfi_startproc
 780              		@ args = 0, pretend = 0, frame = 0
 781              		@ frame_needed = 0, uses_anonymous_args = 0
 782              	.LVL56:
 783 0000 08B5     		push	{r3, lr}
 784              	.LCFI2:
 785              		.cfi_def_cfa_offset 8
 786              		.cfi_offset 14, -4
 787              		.cfi_offset 3, -8
 411:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   MAL_Init();
 788              		.loc 1 411 0
 789 0002 FFF7FEFF 		bl	MAL_Init
 790              	.LVL57:
 414:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   DeviceState = STATE_dfuIDLE;
 791              		.loc 1 414 0
 792 0006 044B     		ldr	r3, .L68
 793 0008 0222     		movs	r2, #2
 794 000a 1A70     		strb	r2, [r3, #0]
 415:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   DeviceStatus[0] = STATUS_OK;
 795              		.loc 1 415 0
 796 000c 034B     		ldr	r3, .L68+4
 797 000e 0020     		movs	r0, #0
 798 0010 1870     		strb	r0, [r3, #0]
 416:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   DeviceStatus[4] = DeviceState;
 799              		.loc 1 416 0
 800 0012 1A71     		strb	r2, [r3, #4]
 419:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** }
 801              		.loc 1 419 0
 802 0014 08BD     		pop	{r3, pc}
 803              	.L69:
 804 0016 00BF     		.align	2
 805              	.L68:
 806 0018 00000000 		.word	DeviceState
 807 001c 00000000 		.word	DeviceStatus
 808              		.cfi_endproc
 809              	.LFE110:
 811              		.section	.text.EP0_TxSent,"ax",%progbits
 812              		.align	1
 813              		.thumb
 814              		.thumb_func
 816              	EP0_TxSent:
 817              	.LFB113:
 546:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** {
 818              		.loc 1 546 0
 819              		.cfi_startproc
 820              		@ args = 0, pretend = 0, frame = 8
 821              		@ frame_needed = 0, uses_anonymous_args = 0
 822              	.LVL58:
 823 0000 13B5     		push	{r0, r1, r4, lr}
 824              	.LCFI3:
 825              		.cfi_def_cfa_offset 16
 826              		.cfi_offset 14, -4
 827              		.cfi_offset 4, -8
 828              		.cfi_offset 1, -12
 829              		.cfi_offset 0, -16
 550:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   if (DeviceState == STATE_dfuDNBUSY)
 830              		.loc 1 550 0
 831 0002 434C     		ldr	r4, .L80
 832 0004 2378     		ldrb	r3, [r4, #0]	@ zero_extendqisi2
 833 0006 042B     		cmp	r3, #4
 834 0008 58D1     		bne	.L71
 835              	.LVL59:
 836              	.LBB84:
 837              	.LBB85:
 553:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     if (wBlockNum == 0)   
 838              		.loc 1 553 0
 839 000a 424B     		ldr	r3, .L80+4
 840 000c 1A68     		ldr	r2, [r3, #0]
 841 000e 424B     		ldr	r3, .L80+8
 842 0010 002A     		cmp	r2, #0
 843 0012 3AD1     		bne	.L72
 555:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       if ((MAL_Buffer[0] ==  CMD_GETCOMMANDS) && (wlength == 1))
 844              		.loc 1 555 0
 845 0014 414A     		ldr	r2, .L80+12
 846 0016 1178     		ldrb	r1, [r2, #0]	@ zero_extendqisi2
 847 0018 1C46     		mov	r4, r3
 848 001a 19B9     		cbnz	r1, .L73
 849 001c 1B68     		ldr	r3, [r3, #0]
 850 001e 012B     		cmp	r3, #1
 851 0020 26D1     		bne	.L75
 852 0022 3DE0     		b	.L74
 853              	.L73:
 557:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       else if  (( MAL_Buffer[0] ==  CMD_SETADDRESSPOINTER ) && (wlength == 5))
 854              		.loc 1 557 0
 855 0024 2129     		cmp	r1, #33
 856 0026 0FD1     		bne	.L76
 857 0028 1B68     		ldr	r3, [r3, #0]
 858 002a 052B     		cmp	r3, #5
 859 002c 20D1     		bne	.L75
 561:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         Pointer += MAL_Buffer[3] << 16;
 860              		.loc 1 561 0
 861 002e D378     		ldrb	r3, [r2, #3]	@ zero_extendqisi2
 560:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         Pointer += MAL_Buffer[2] << 8;
 862              		.loc 1 560 0
 863 0030 9178     		ldrb	r1, [r2, #2]	@ zero_extendqisi2
 561:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         Pointer += MAL_Buffer[3] << 16;
 864              		.loc 1 561 0
 865 0032 1B04     		lsls	r3, r3, #16
 560:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         Pointer += MAL_Buffer[2] << 8;
 866              		.loc 1 560 0
 867 0034 03EB0123 		add	r3, r3, r1, lsl #8
 559:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         Pointer  = MAL_Buffer[1];
 868              		.loc 1 559 0
 869 0038 5178     		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 562:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         Pointer += MAL_Buffer[4] << 24;
 870              		.loc 1 562 0
 871 003a 1279     		ldrb	r2, [r2, #4]	@ zero_extendqisi2
 561:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         Pointer += MAL_Buffer[3] << 16;
 872              		.loc 1 561 0
 873 003c 5B18     		adds	r3, r3, r1
 562:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         Pointer += MAL_Buffer[4] << 24;
 874              		.loc 1 562 0
 875 003e 03EB0262 		add	r2, r3, r2, lsl #24
 876 0042 374B     		ldr	r3, .L80+16
 877 0044 1A60     		str	r2, [r3, #0]
 878 0046 2BE0     		b	.L74
 879              	.L76:
 564:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       else if (( MAL_Buffer[0] ==  CMD_ERASE ) && (wlength == 5))
 880              		.loc 1 564 0
 881 0048 4129     		cmp	r1, #65
 882 004a 11D1     		bne	.L75
 883 004c 1B68     		ldr	r3, [r3, #0]
 884 004e 052B     		cmp	r3, #5
 885 0050 0ED1     		bne	.L75
 568:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         Pointer += MAL_Buffer[3] << 16;
 886              		.loc 1 568 0
 887 0052 D078     		ldrb	r0, [r2, #3]	@ zero_extendqisi2
 888              	.LVL60:
 567:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         Pointer += MAL_Buffer[2] << 8;
 889              		.loc 1 567 0
 890 0054 9378     		ldrb	r3, [r2, #2]	@ zero_extendqisi2
 568:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         Pointer += MAL_Buffer[3] << 16;
 891              		.loc 1 568 0
 892 0056 0004     		lsls	r0, r0, #16
 567:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         Pointer += MAL_Buffer[2] << 8;
 893              		.loc 1 567 0
 894 0058 00EB0320 		add	r0, r0, r3, lsl #8
 566:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         Pointer  = MAL_Buffer[1];
 895              		.loc 1 566 0
 896 005c 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 568:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         Pointer += MAL_Buffer[3] << 16;
 897              		.loc 1 568 0
 898 005e C018     		adds	r0, r0, r3
 569:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         Pointer += MAL_Buffer[4] << 24;
 899              		.loc 1 569 0
 900 0060 1379     		ldrb	r3, [r2, #4]	@ zero_extendqisi2
 901 0062 00EB0360 		add	r0, r0, r3, lsl #24
 902 0066 2E4B     		ldr	r3, .L80+16
 903 0068 1860     		str	r0, [r3, #0]
 570:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         MAL_Erase(Pointer);
 904              		.loc 1 570 0
 905 006a FFF7FEFF 		bl	MAL_Erase
 906 006e 17E0     		b	.L74
 907              	.LVL61:
 908              	.L75:
 576:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         wBlockNum = 0;     
 909              		.loc 1 576 0
 910 0070 284A     		ldr	r2, .L80+4
 575:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         wlength = 0;
 911              		.loc 1 575 0
 912 0072 0023     		movs	r3, #0
 913 0074 2360     		str	r3, [r4, #0]
 576:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         wBlockNum = 0;     
 914              		.loc 1 576 0
 915 0076 1360     		str	r3, [r2, #0]
 578:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         req.bmRequest = 0;
 916              		.loc 1 578 0
 917 0078 8DF80030 		strb	r3, [sp, #0]
 580:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         USBD_CtlError (pdev, &req);
 918              		.loc 1 580 0
 919 007c 6946     		mov	r1, sp
 579:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         req.wLength = 1;
 920              		.loc 1 579 0
 921 007e 0123     		movs	r3, #1
 922 0080 ADF80630 		strh	r3, [sp, #6]	@ movhi
 580:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****         USBD_CtlError (pdev, &req);
 923              		.loc 1 580 0
 924 0084 FFF7FEFF 		bl	USBD_CtlError
 925              	.LVL62:
 926 0088 0AE0     		b	.L74
 927              	.LVL63:
 928              	.L72:
 584:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     else if (wBlockNum > 1)  
 929              		.loc 1 584 0
 930 008a 012A     		cmp	r2, #1
 931 008c 08D9     		bls	.L74
 932              	.LVL64:
 587:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       Addr = ((wBlockNum - 2) * XFERSIZE) + Pointer;
 933              		.loc 1 587 0
 934 008e 2549     		ldr	r1, .L80+20
 935 0090 5118     		adds	r1, r2, r1
 936 0092 234A     		ldr	r2, .L80+16
 937              	.LVL65:
 938 0094 1068     		ldr	r0, [r2, #0]
 939              	.LVL66:
 940 0096 00EB8120 		add	r0, r0, r1, lsl #10
 590:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****       MAL_Write(Addr, wlength);
 941              		.loc 1 590 0
 942 009a 1968     		ldr	r1, [r3, #0]
 943 009c FFF7FEFF 		bl	MAL_Write
 944              	.LVL67:
 945              	.L74:
 593:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     wlength = 0;
 946              		.loc 1 593 0
 947 00a0 1D4A     		ldr	r2, .L80+8
 948 00a2 0023     		movs	r3, #0
 949 00a4 1360     		str	r3, [r2, #0]
 594:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     wBlockNum = 0;
 950              		.loc 1 594 0
 951 00a6 1B4A     		ldr	r2, .L80+4
 952 00a8 1360     		str	r3, [r2, #0]
 597:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceState =  STATE_dfuDNLOAD_SYNC;
 953              		.loc 1 597 0
 954 00aa 194A     		ldr	r2, .L80
 955 00ac 0321     		movs	r1, #3
 956 00ae 1170     		strb	r1, [r2, #0]
 598:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[4] = DeviceState;
 957              		.loc 1 598 0
 958 00b0 1D4A     		ldr	r2, .L80+24
 959 00b2 1171     		strb	r1, [r2, #4]
 599:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[1] = 0;
 960              		.loc 1 599 0
 961 00b4 5370     		strb	r3, [r2, #1]
 600:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[2] = 0;
 962              		.loc 1 600 0
 963 00b6 9370     		strb	r3, [r2, #2]
 601:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[3] = 0;
 964              		.loc 1 601 0
 965 00b8 D370     		strb	r3, [r2, #3]
 966 00ba 27E0     		b	.L77
 967              	.LVL68:
 968              	.L71:
 969              	.LBE85:
 970              	.LBE84:
 604:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   else if (DeviceState == STATE_dfuMANIFEST)/* Manifestation in progress*/
 971              		.loc 1 604 0
 972 00bc 072B     		cmp	r3, #7
 973 00be 25D1     		bne	.L77
 974              	.LVL69:
 975              	.LBB86:
 976              	.LBB87:
 955:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****  Manifest_State = Manifest_complete;
 977              		.loc 1 955 0
 978 00c0 1A4B     		ldr	r3, .L80+28
 979 00c2 0022     		movs	r2, #0
 980 00c4 1A60     		str	r2, [r3, #0]
 957:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****   if ((usbd_dfu_CfgDesc[(11 + (9 * USBD_ITF_MAX_NUM))]) & 0x04)
 981              		.loc 1 957 0
 982 00c6 1A4B     		ldr	r3, .L80+32
 983 00c8 197D     		ldrb	r1, [r3, #20]	@ zero_extendqisi2
 984 00ca 174B     		ldr	r3, .L80+24
 985 00cc 11F00401 		ands	r1, r1, #4
 986 00d0 06D0     		beq	.L78
 959:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceState = STATE_dfuMANIFEST_SYNC;
 987              		.loc 1 959 0
 988 00d2 0621     		movs	r1, #6
 989 00d4 2170     		strb	r1, [r4, #0]
 960:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[4] = DeviceState;
 990              		.loc 1 960 0
 991 00d6 1971     		strb	r1, [r3, #4]
 961:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[1] = 0;
 992              		.loc 1 961 0
 993 00d8 5A70     		strb	r2, [r3, #1]
 962:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[2] = 0;
 994              		.loc 1 962 0
 995 00da 9A70     		strb	r2, [r3, #2]
 963:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[3] = 0;
 996              		.loc 1 963 0
 997 00dc DA70     		strb	r2, [r3, #3]
 998 00de 15E0     		b	.L77
 999              	.L78:
 968:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceState = STATE_dfuMANIFEST_WAIT_RESET;
 1000              		.loc 1 968 0
 1001 00e0 0822     		movs	r2, #8
 1002 00e2 2270     		strb	r2, [r4, #0]
 969:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[4] = DeviceState;
 1003              		.loc 1 969 0
 1004 00e4 1A71     		strb	r2, [r3, #4]
 970:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[1] = 0;
 1005              		.loc 1 970 0
 1006 00e6 5970     		strb	r1, [r3, #1]
 971:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[2] = 0;
 1007              		.loc 1 971 0
 1008 00e8 9970     		strb	r1, [r3, #2]
 972:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DeviceStatus[3] = 0;
 1009              		.loc 1 972 0
 1010 00ea D970     		strb	r1, [r3, #3]
 975:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     DCD_DevDisconnect (pdev);
 1011              		.loc 1 975 0
 1012 00ec FFF7FEFF 		bl	DCD_DevDisconnect
 1013              	.LVL70:
 978:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c ****     MAL_DeInit();
 1014              		.loc 1 978 0
 1015 00f0 FFF7FEFF 		bl	MAL_DeInit
 1016              	.LBB88:
 1017              	.LBB89:
 1018              	.LBB90:
 1019              	.LBB91:
 1020              		.file 2 "./Libraries/CMSIS//Include/core_cmInstr.h"
   1:./Libraries/CMSIS//Include/core_cmInstr.h **** /**************************************************************************//**
   2:./Libraries/CMSIS//Include/core_cmInstr.h ****  * @file     core_cmInstr.h
   3:./Libraries/CMSIS//Include/core_cmInstr.h ****  * @brief    CMSIS Cortex-M Core Instruction Access Header File
   4:./Libraries/CMSIS//Include/core_cmInstr.h ****  * @version  V2.10
   5:./Libraries/CMSIS//Include/core_cmInstr.h ****  * @date     19. July 2011
   6:./Libraries/CMSIS//Include/core_cmInstr.h ****  *
   7:./Libraries/CMSIS//Include/core_cmInstr.h ****  * @note
   8:./Libraries/CMSIS//Include/core_cmInstr.h ****  * Copyright (C) 2009-2011 ARM Limited. All rights reserved.
   9:./Libraries/CMSIS//Include/core_cmInstr.h ****  *
  10:./Libraries/CMSIS//Include/core_cmInstr.h ****  * @par
  11:./Libraries/CMSIS//Include/core_cmInstr.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M 
  12:./Libraries/CMSIS//Include/core_cmInstr.h ****  * processor based microcontrollers.  This file can be freely distributed 
  13:./Libraries/CMSIS//Include/core_cmInstr.h ****  * within development tools that are supporting such ARM based processors. 
  14:./Libraries/CMSIS//Include/core_cmInstr.h ****  *
  15:./Libraries/CMSIS//Include/core_cmInstr.h ****  * @par
  16:./Libraries/CMSIS//Include/core_cmInstr.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:./Libraries/CMSIS//Include/core_cmInstr.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:./Libraries/CMSIS//Include/core_cmInstr.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:./Libraries/CMSIS//Include/core_cmInstr.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:./Libraries/CMSIS//Include/core_cmInstr.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:./Libraries/CMSIS//Include/core_cmInstr.h ****  *
  22:./Libraries/CMSIS//Include/core_cmInstr.h ****  ******************************************************************************/
  23:./Libraries/CMSIS//Include/core_cmInstr.h **** 
  24:./Libraries/CMSIS//Include/core_cmInstr.h **** #ifndef __CORE_CMINSTR_H
  25:./Libraries/CMSIS//Include/core_cmInstr.h **** #define __CORE_CMINSTR_H
  26:./Libraries/CMSIS//Include/core_cmInstr.h **** 
  27:./Libraries/CMSIS//Include/core_cmInstr.h **** 
  28:./Libraries/CMSIS//Include/core_cmInstr.h **** /* ##########################  Core Instruction Access  ######################### */
  29:./Libraries/CMSIS//Include/core_cmInstr.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
  30:./Libraries/CMSIS//Include/core_cmInstr.h ****   Access to dedicated instructions
  31:./Libraries/CMSIS//Include/core_cmInstr.h ****   @{
  32:./Libraries/CMSIS//Include/core_cmInstr.h **** */
  33:./Libraries/CMSIS//Include/core_cmInstr.h **** 
  34:./Libraries/CMSIS//Include/core_cmInstr.h **** #if   defined ( __CC_ARM ) /*------------------RealView Compiler -----------------*/
  35:./Libraries/CMSIS//Include/core_cmInstr.h **** /* ARM armcc specific functions */
  36:./Libraries/CMSIS//Include/core_cmInstr.h **** 
  37:./Libraries/CMSIS//Include/core_cmInstr.h **** #if (__ARMCC_VERSION < 400677)
  38:./Libraries/CMSIS//Include/core_cmInstr.h ****   #error "Please use ARM Compiler Toolchain V4.0.677 or later!"
  39:./Libraries/CMSIS//Include/core_cmInstr.h **** #endif
  40:./Libraries/CMSIS//Include/core_cmInstr.h **** 
  41:./Libraries/CMSIS//Include/core_cmInstr.h **** 
  42:./Libraries/CMSIS//Include/core_cmInstr.h **** /** \brief  No Operation
  43:./Libraries/CMSIS//Include/core_cmInstr.h **** 
  44:./Libraries/CMSIS//Include/core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
  45:./Libraries/CMSIS//Include/core_cmInstr.h ****  */
  46:./Libraries/CMSIS//Include/core_cmInstr.h **** #define __NOP                             __nop
  47:./Libraries/CMSIS//Include/core_cmInstr.h **** 
  48:./Libraries/CMSIS//Include/core_cmInstr.h **** 
  49:./Libraries/CMSIS//Include/core_cmInstr.h **** /** \brief  Wait For Interrupt
  50:./Libraries/CMSIS//Include/core_cmInstr.h **** 
  51:./Libraries/CMSIS//Include/core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
  52:./Libraries/CMSIS//Include/core_cmInstr.h ****     until one of a number of events occurs.
  53:./Libraries/CMSIS//Include/core_cmInstr.h ****  */
  54:./Libraries/CMSIS//Include/core_cmInstr.h **** #define __WFI                             __wfi
  55:./Libraries/CMSIS//Include/core_cmInstr.h **** 
  56:./Libraries/CMSIS//Include/core_cmInstr.h **** 
  57:./Libraries/CMSIS//Include/core_cmInstr.h **** /** \brief  Wait For Event
  58:./Libraries/CMSIS//Include/core_cmInstr.h **** 
  59:./Libraries/CMSIS//Include/core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
  60:./Libraries/CMSIS//Include/core_cmInstr.h ****     a low-power state until one of a number of events occurs.
  61:./Libraries/CMSIS//Include/core_cmInstr.h ****  */
  62:./Libraries/CMSIS//Include/core_cmInstr.h **** #define __WFE                             __wfe
  63:./Libraries/CMSIS//Include/core_cmInstr.h **** 
  64:./Libraries/CMSIS//Include/core_cmInstr.h **** 
  65:./Libraries/CMSIS//Include/core_cmInstr.h **** /** \brief  Send Event
  66:./Libraries/CMSIS//Include/core_cmInstr.h **** 
  67:./Libraries/CMSIS//Include/core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
  68:./Libraries/CMSIS//Include/core_cmInstr.h ****  */
  69:./Libraries/CMSIS//Include/core_cmInstr.h **** #define __SEV                             __sev
  70:./Libraries/CMSIS//Include/core_cmInstr.h **** 
  71:./Libraries/CMSIS//Include/core_cmInstr.h **** 
  72:./Libraries/CMSIS//Include/core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
  73:./Libraries/CMSIS//Include/core_cmInstr.h **** 
  74:./Libraries/CMSIS//Include/core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor, 
  75:./Libraries/CMSIS//Include/core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or 
  76:./Libraries/CMSIS//Include/core_cmInstr.h ****     memory, after the instruction has been completed.
  77:./Libraries/CMSIS//Include/core_cmInstr.h ****  */
  78:./Libraries/CMSIS//Include/core_cmInstr.h **** #define __ISB()                           __isb(0xF)
  79:./Libraries/CMSIS//Include/core_cmInstr.h **** 
  80:./Libraries/CMSIS//Include/core_cmInstr.h **** 
  81:./Libraries/CMSIS//Include/core_cmInstr.h **** /** \brief  Data Synchronization Barrier
  82:./Libraries/CMSIS//Include/core_cmInstr.h **** 
  83:./Libraries/CMSIS//Include/core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier. 
  84:./Libraries/CMSIS//Include/core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
  85:./Libraries/CMSIS//Include/core_cmInstr.h ****  */
  86:./Libraries/CMSIS//Include/core_cmInstr.h **** #define __DSB()                           __dsb(0xF)
  87:./Libraries/CMSIS//Include/core_cmInstr.h **** 
  88:./Libraries/CMSIS//Include/core_cmInstr.h **** 
  89:./Libraries/CMSIS//Include/core_cmInstr.h **** /** \brief  Data Memory Barrier
  90:./Libraries/CMSIS//Include/core_cmInstr.h **** 
  91:./Libraries/CMSIS//Include/core_cmInstr.h ****     This function ensures the apparent order of the explicit memory operations before 
  92:./Libraries/CMSIS//Include/core_cmInstr.h ****     and after the instruction, without ensuring their completion.
  93:./Libraries/CMSIS//Include/core_cmInstr.h ****  */
  94:./Libraries/CMSIS//Include/core_cmInstr.h **** #define __DMB()                           __dmb(0xF)
  95:./Libraries/CMSIS//Include/core_cmInstr.h **** 
  96:./Libraries/CMSIS//Include/core_cmInstr.h **** 
  97:./Libraries/CMSIS//Include/core_cmInstr.h **** /** \brief  Reverse byte order (32 bit)
  98:./Libraries/CMSIS//Include/core_cmInstr.h **** 
  99:./Libraries/CMSIS//Include/core_cmInstr.h ****     This function reverses the byte order in integer value.
 100:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 101:./Libraries/CMSIS//Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 102:./Libraries/CMSIS//Include/core_cmInstr.h ****     \return               Reversed value
 103:./Libraries/CMSIS//Include/core_cmInstr.h ****  */
 104:./Libraries/CMSIS//Include/core_cmInstr.h **** #define __REV                             __rev
 105:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 106:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 107:./Libraries/CMSIS//Include/core_cmInstr.h **** /** \brief  Reverse byte order (16 bit)
 108:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 109:./Libraries/CMSIS//Include/core_cmInstr.h ****     This function reverses the byte order in two unsigned short values.
 110:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 111:./Libraries/CMSIS//Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 112:./Libraries/CMSIS//Include/core_cmInstr.h ****     \return               Reversed value
 113:./Libraries/CMSIS//Include/core_cmInstr.h ****  */
 114:./Libraries/CMSIS//Include/core_cmInstr.h **** static __INLINE __ASM uint32_t __REV16(uint32_t value)
 115:./Libraries/CMSIS//Include/core_cmInstr.h **** {
 116:./Libraries/CMSIS//Include/core_cmInstr.h ****   rev16 r0, r0
 117:./Libraries/CMSIS//Include/core_cmInstr.h ****   bx lr
 118:./Libraries/CMSIS//Include/core_cmInstr.h **** }
 119:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 120:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 121:./Libraries/CMSIS//Include/core_cmInstr.h **** /** \brief  Reverse byte order in signed short value
 122:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 123:./Libraries/CMSIS//Include/core_cmInstr.h ****     This function reverses the byte order in a signed short value with sign extension to integer.
 124:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 125:./Libraries/CMSIS//Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 126:./Libraries/CMSIS//Include/core_cmInstr.h ****     \return               Reversed value
 127:./Libraries/CMSIS//Include/core_cmInstr.h ****  */
 128:./Libraries/CMSIS//Include/core_cmInstr.h **** static __INLINE __ASM int32_t __REVSH(int32_t value)
 129:./Libraries/CMSIS//Include/core_cmInstr.h **** {
 130:./Libraries/CMSIS//Include/core_cmInstr.h ****   revsh r0, r0
 131:./Libraries/CMSIS//Include/core_cmInstr.h ****   bx lr
 132:./Libraries/CMSIS//Include/core_cmInstr.h **** }
 133:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 134:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 135:./Libraries/CMSIS//Include/core_cmInstr.h **** #if       (__CORTEX_M >= 0x03)
 136:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 137:./Libraries/CMSIS//Include/core_cmInstr.h **** /** \brief  Reverse bit order of value
 138:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 139:./Libraries/CMSIS//Include/core_cmInstr.h ****     This function reverses the bit order of the given value.
 140:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 141:./Libraries/CMSIS//Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 142:./Libraries/CMSIS//Include/core_cmInstr.h ****     \return               Reversed value
 143:./Libraries/CMSIS//Include/core_cmInstr.h ****  */
 144:./Libraries/CMSIS//Include/core_cmInstr.h **** #define __RBIT                            __rbit
 145:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 146:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 147:./Libraries/CMSIS//Include/core_cmInstr.h **** /** \brief  LDR Exclusive (8 bit)
 148:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 149:./Libraries/CMSIS//Include/core_cmInstr.h ****     This function performs a exclusive LDR command for 8 bit value.
 150:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 151:./Libraries/CMSIS//Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 152:./Libraries/CMSIS//Include/core_cmInstr.h ****     \return             value of type uint8_t at (*ptr)
 153:./Libraries/CMSIS//Include/core_cmInstr.h ****  */
 154:./Libraries/CMSIS//Include/core_cmInstr.h **** #define __LDREXB(ptr)                     ((uint8_t ) __ldrex(ptr))
 155:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 156:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 157:./Libraries/CMSIS//Include/core_cmInstr.h **** /** \brief  LDR Exclusive (16 bit)
 158:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 159:./Libraries/CMSIS//Include/core_cmInstr.h ****     This function performs a exclusive LDR command for 16 bit values.
 160:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 161:./Libraries/CMSIS//Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 162:./Libraries/CMSIS//Include/core_cmInstr.h ****     \return        value of type uint16_t at (*ptr)
 163:./Libraries/CMSIS//Include/core_cmInstr.h ****  */
 164:./Libraries/CMSIS//Include/core_cmInstr.h **** #define __LDREXH(ptr)                     ((uint16_t) __ldrex(ptr))
 165:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 166:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 167:./Libraries/CMSIS//Include/core_cmInstr.h **** /** \brief  LDR Exclusive (32 bit)
 168:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 169:./Libraries/CMSIS//Include/core_cmInstr.h ****     This function performs a exclusive LDR command for 32 bit values.
 170:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 171:./Libraries/CMSIS//Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 172:./Libraries/CMSIS//Include/core_cmInstr.h ****     \return        value of type uint32_t at (*ptr)
 173:./Libraries/CMSIS//Include/core_cmInstr.h ****  */
 174:./Libraries/CMSIS//Include/core_cmInstr.h **** #define __LDREXW(ptr)                     ((uint32_t ) __ldrex(ptr))
 175:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 176:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 177:./Libraries/CMSIS//Include/core_cmInstr.h **** /** \brief  STR Exclusive (8 bit)
 178:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 179:./Libraries/CMSIS//Include/core_cmInstr.h ****     This function performs a exclusive STR command for 8 bit values.
 180:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 181:./Libraries/CMSIS//Include/core_cmInstr.h ****     \param [in]  value  Value to store
 182:./Libraries/CMSIS//Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 183:./Libraries/CMSIS//Include/core_cmInstr.h ****     \return          0  Function succeeded
 184:./Libraries/CMSIS//Include/core_cmInstr.h ****     \return          1  Function failed
 185:./Libraries/CMSIS//Include/core_cmInstr.h ****  */
 186:./Libraries/CMSIS//Include/core_cmInstr.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 187:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 188:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 189:./Libraries/CMSIS//Include/core_cmInstr.h **** /** \brief  STR Exclusive (16 bit)
 190:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 191:./Libraries/CMSIS//Include/core_cmInstr.h ****     This function performs a exclusive STR command for 16 bit values.
 192:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 193:./Libraries/CMSIS//Include/core_cmInstr.h ****     \param [in]  value  Value to store
 194:./Libraries/CMSIS//Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 195:./Libraries/CMSIS//Include/core_cmInstr.h ****     \return          0  Function succeeded
 196:./Libraries/CMSIS//Include/core_cmInstr.h ****     \return          1  Function failed
 197:./Libraries/CMSIS//Include/core_cmInstr.h ****  */
 198:./Libraries/CMSIS//Include/core_cmInstr.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 199:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 200:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 201:./Libraries/CMSIS//Include/core_cmInstr.h **** /** \brief  STR Exclusive (32 bit)
 202:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 203:./Libraries/CMSIS//Include/core_cmInstr.h ****     This function performs a exclusive STR command for 32 bit values.
 204:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 205:./Libraries/CMSIS//Include/core_cmInstr.h ****     \param [in]  value  Value to store
 206:./Libraries/CMSIS//Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 207:./Libraries/CMSIS//Include/core_cmInstr.h ****     \return          0  Function succeeded
 208:./Libraries/CMSIS//Include/core_cmInstr.h ****     \return          1  Function failed
 209:./Libraries/CMSIS//Include/core_cmInstr.h ****  */
 210:./Libraries/CMSIS//Include/core_cmInstr.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 211:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 212:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 213:./Libraries/CMSIS//Include/core_cmInstr.h **** /** \brief  Remove the exclusive lock
 214:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 215:./Libraries/CMSIS//Include/core_cmInstr.h ****     This function removes the exclusive lock which is created by LDREX.
 216:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 217:./Libraries/CMSIS//Include/core_cmInstr.h ****  */
 218:./Libraries/CMSIS//Include/core_cmInstr.h **** #define __CLREX                           __clrex
 219:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 220:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 221:./Libraries/CMSIS//Include/core_cmInstr.h **** /** \brief  Signed Saturate
 222:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 223:./Libraries/CMSIS//Include/core_cmInstr.h ****     This function saturates a signed value.
 224:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 225:./Libraries/CMSIS//Include/core_cmInstr.h ****     \param [in]  value  Value to be saturated
 226:./Libraries/CMSIS//Include/core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (1..32)
 227:./Libraries/CMSIS//Include/core_cmInstr.h ****     \return             Saturated value
 228:./Libraries/CMSIS//Include/core_cmInstr.h ****  */
 229:./Libraries/CMSIS//Include/core_cmInstr.h **** #define __SSAT                            __ssat
 230:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 231:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 232:./Libraries/CMSIS//Include/core_cmInstr.h **** /** \brief  Unsigned Saturate
 233:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 234:./Libraries/CMSIS//Include/core_cmInstr.h ****     This function saturates an unsigned value.
 235:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 236:./Libraries/CMSIS//Include/core_cmInstr.h ****     \param [in]  value  Value to be saturated
 237:./Libraries/CMSIS//Include/core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (0..31)
 238:./Libraries/CMSIS//Include/core_cmInstr.h ****     \return             Saturated value
 239:./Libraries/CMSIS//Include/core_cmInstr.h ****  */
 240:./Libraries/CMSIS//Include/core_cmInstr.h **** #define __USAT                            __usat
 241:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 242:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 243:./Libraries/CMSIS//Include/core_cmInstr.h **** /** \brief  Count leading zeros
 244:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 245:./Libraries/CMSIS//Include/core_cmInstr.h ****     This function counts the number of leading zeros of a data value.
 246:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 247:./Libraries/CMSIS//Include/core_cmInstr.h ****     \param [in]  value  Value to count the leading zeros
 248:./Libraries/CMSIS//Include/core_cmInstr.h ****     \return             number of leading zeros in value
 249:./Libraries/CMSIS//Include/core_cmInstr.h ****  */
 250:./Libraries/CMSIS//Include/core_cmInstr.h **** #define __CLZ                             __clz 
 251:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 252:./Libraries/CMSIS//Include/core_cmInstr.h **** #endif /* (__CORTEX_M >= 0x03) */
 253:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 254:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 255:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 256:./Libraries/CMSIS//Include/core_cmInstr.h **** #elif defined ( __ICCARM__ ) /*------------------ ICC Compiler -------------------*/
 257:./Libraries/CMSIS//Include/core_cmInstr.h **** /* IAR iccarm specific functions */
 258:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 259:./Libraries/CMSIS//Include/core_cmInstr.h **** #include <cmsis_iar.h>
 260:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 261:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 262:./Libraries/CMSIS//Include/core_cmInstr.h **** #elif defined ( __GNUC__ ) /*------------------ GNU Compiler ---------------------*/
 263:./Libraries/CMSIS//Include/core_cmInstr.h **** /* GNU gcc specific functions */
 264:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 265:./Libraries/CMSIS//Include/core_cmInstr.h **** /** \brief  No Operation
 266:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 267:./Libraries/CMSIS//Include/core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
 268:./Libraries/CMSIS//Include/core_cmInstr.h ****  */
 269:./Libraries/CMSIS//Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __NOP(void)
 270:./Libraries/CMSIS//Include/core_cmInstr.h **** {
 271:./Libraries/CMSIS//Include/core_cmInstr.h ****   __ASM volatile ("nop");
 272:./Libraries/CMSIS//Include/core_cmInstr.h **** }
 273:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 274:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 275:./Libraries/CMSIS//Include/core_cmInstr.h **** /** \brief  Wait For Interrupt
 276:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 277:./Libraries/CMSIS//Include/core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
 278:./Libraries/CMSIS//Include/core_cmInstr.h ****     until one of a number of events occurs.
 279:./Libraries/CMSIS//Include/core_cmInstr.h ****  */
 280:./Libraries/CMSIS//Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __WFI(void)
 281:./Libraries/CMSIS//Include/core_cmInstr.h **** {
 282:./Libraries/CMSIS//Include/core_cmInstr.h ****   __ASM volatile ("wfi");
 283:./Libraries/CMSIS//Include/core_cmInstr.h **** }
 284:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 285:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 286:./Libraries/CMSIS//Include/core_cmInstr.h **** /** \brief  Wait For Event
 287:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 288:./Libraries/CMSIS//Include/core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
 289:./Libraries/CMSIS//Include/core_cmInstr.h ****     a low-power state until one of a number of events occurs.
 290:./Libraries/CMSIS//Include/core_cmInstr.h ****  */
 291:./Libraries/CMSIS//Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __WFE(void)
 292:./Libraries/CMSIS//Include/core_cmInstr.h **** {
 293:./Libraries/CMSIS//Include/core_cmInstr.h ****   __ASM volatile ("wfe");
 294:./Libraries/CMSIS//Include/core_cmInstr.h **** }
 295:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 296:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 297:./Libraries/CMSIS//Include/core_cmInstr.h **** /** \brief  Send Event
 298:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 299:./Libraries/CMSIS//Include/core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 300:./Libraries/CMSIS//Include/core_cmInstr.h ****  */
 301:./Libraries/CMSIS//Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __SEV(void)
 302:./Libraries/CMSIS//Include/core_cmInstr.h **** {
 303:./Libraries/CMSIS//Include/core_cmInstr.h ****   __ASM volatile ("sev");
 304:./Libraries/CMSIS//Include/core_cmInstr.h **** }
 305:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 306:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 307:./Libraries/CMSIS//Include/core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
 308:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 309:./Libraries/CMSIS//Include/core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor, 
 310:./Libraries/CMSIS//Include/core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or 
 311:./Libraries/CMSIS//Include/core_cmInstr.h ****     memory, after the instruction has been completed.
 312:./Libraries/CMSIS//Include/core_cmInstr.h ****  */
 313:./Libraries/CMSIS//Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __ISB(void)
 314:./Libraries/CMSIS//Include/core_cmInstr.h **** {
 315:./Libraries/CMSIS//Include/core_cmInstr.h ****   __ASM volatile ("isb");
 316:./Libraries/CMSIS//Include/core_cmInstr.h **** }
 317:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 318:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 319:./Libraries/CMSIS//Include/core_cmInstr.h **** /** \brief  Data Synchronization Barrier
 320:./Libraries/CMSIS//Include/core_cmInstr.h **** 
 321:./Libraries/CMSIS//Include/core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier. 
 322:./Libraries/CMSIS//Include/core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
 323:./Libraries/CMSIS//Include/core_cmInstr.h ****  */
 324:./Libraries/CMSIS//Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __DSB(void)
 325:./Libraries/CMSIS//Include/core_cmInstr.h **** {
 326:./Libraries/CMSIS//Include/core_cmInstr.h ****   __ASM volatile ("dsb");
 1021              		.loc 2 326 0
 1022              	@ 326 "./Libraries/CMSIS//Include/core_cmInstr.h" 1
 1023 00f4 BFF34F8F 		dsb
 1024              	@ 0 "" 2
 1025              		.thumb
 1026              	.LBE91:
 1027              	.LBE90:
 1028              		.file 3 "./Libraries/CMSIS//Include/core_cm4.h"
   1:./Libraries/CMSIS//Include/core_cm4.h **** /**************************************************************************//**
   2:./Libraries/CMSIS//Include/core_cm4.h ****  * @file     core_cm4.h
   3:./Libraries/CMSIS//Include/core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:./Libraries/CMSIS//Include/core_cm4.h ****  * @version  V2.10
   5:./Libraries/CMSIS//Include/core_cm4.h ****  * @date     19. July 2011
   6:./Libraries/CMSIS//Include/core_cm4.h ****  *
   7:./Libraries/CMSIS//Include/core_cm4.h ****  * @note
   8:./Libraries/CMSIS//Include/core_cm4.h ****  * Copyright (C) 2009-2011 ARM Limited. All rights reserved.
   9:./Libraries/CMSIS//Include/core_cm4.h ****  *
  10:./Libraries/CMSIS//Include/core_cm4.h ****  * @par
  11:./Libraries/CMSIS//Include/core_cm4.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M
  12:./Libraries/CMSIS//Include/core_cm4.h ****  * processor based microcontrollers.  This file can be freely distributed
  13:./Libraries/CMSIS//Include/core_cm4.h ****  * within development tools that are supporting such ARM based processors.
  14:./Libraries/CMSIS//Include/core_cm4.h ****  *
  15:./Libraries/CMSIS//Include/core_cm4.h ****  * @par
  16:./Libraries/CMSIS//Include/core_cm4.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:./Libraries/CMSIS//Include/core_cm4.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:./Libraries/CMSIS//Include/core_cm4.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:./Libraries/CMSIS//Include/core_cm4.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:./Libraries/CMSIS//Include/core_cm4.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:./Libraries/CMSIS//Include/core_cm4.h ****  *
  22:./Libraries/CMSIS//Include/core_cm4.h ****  ******************************************************************************/
  23:./Libraries/CMSIS//Include/core_cm4.h **** #if defined ( __ICCARM__ )
  24:./Libraries/CMSIS//Include/core_cm4.h ****  #pragma system_include  /* treat file as system include file for MISRA check */
  25:./Libraries/CMSIS//Include/core_cm4.h **** #endif
  26:./Libraries/CMSIS//Include/core_cm4.h **** 
  27:./Libraries/CMSIS//Include/core_cm4.h **** #ifdef __cplusplus
  28:./Libraries/CMSIS//Include/core_cm4.h ****  extern "C" {
  29:./Libraries/CMSIS//Include/core_cm4.h **** #endif
  30:./Libraries/CMSIS//Include/core_cm4.h **** 
  31:./Libraries/CMSIS//Include/core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  32:./Libraries/CMSIS//Include/core_cm4.h **** #define __CORE_CM4_H_GENERIC
  33:./Libraries/CMSIS//Include/core_cm4.h **** 
  34:./Libraries/CMSIS//Include/core_cm4.h **** 
  35:./Libraries/CMSIS//Include/core_cm4.h **** /** \mainpage CMSIS Cortex-M4
  36:./Libraries/CMSIS//Include/core_cm4.h **** 
  37:./Libraries/CMSIS//Include/core_cm4.h ****   This documentation describes the CMSIS Cortex-M Core Peripheral Access Layer.
  38:./Libraries/CMSIS//Include/core_cm4.h ****   It consists of:
  39:./Libraries/CMSIS//Include/core_cm4.h **** 
  40:./Libraries/CMSIS//Include/core_cm4.h ****      - Cortex-M Core Register Definitions
  41:./Libraries/CMSIS//Include/core_cm4.h ****      - Cortex-M functions
  42:./Libraries/CMSIS//Include/core_cm4.h ****      - Cortex-M instructions
  43:./Libraries/CMSIS//Include/core_cm4.h ****      - Cortex-M SIMD instructions
  44:./Libraries/CMSIS//Include/core_cm4.h **** 
  45:./Libraries/CMSIS//Include/core_cm4.h ****   The CMSIS Cortex-M4 Core Peripheral Access Layer contains C and assembly functions that ease
  46:./Libraries/CMSIS//Include/core_cm4.h ****   access to the Cortex-M Core
  47:./Libraries/CMSIS//Include/core_cm4.h ****  */
  48:./Libraries/CMSIS//Include/core_cm4.h **** 
  49:./Libraries/CMSIS//Include/core_cm4.h **** /** \defgroup CMSIS_MISRA_Exceptions  CMSIS MISRA-C:2004 Compliance Exceptions
  50:./Libraries/CMSIS//Include/core_cm4.h ****   CMSIS violates following MISRA-C2004 Rules:
  51:./Libraries/CMSIS//Include/core_cm4.h ****   
  52:./Libraries/CMSIS//Include/core_cm4.h ****    - Violates MISRA 2004 Required Rule 8.5, object/function definition in header file.<br>
  53:./Libraries/CMSIS//Include/core_cm4.h ****      Function definitions in header files are used to allow 'inlining'. 
  54:./Libraries/CMSIS//Include/core_cm4.h **** 
  55:./Libraries/CMSIS//Include/core_cm4.h ****    - Violates MISRA 2004 Required Rule 18.4, declaration of union type or object of union type: '{.
  56:./Libraries/CMSIS//Include/core_cm4.h ****      Unions are used for effective representation of core registers.
  57:./Libraries/CMSIS//Include/core_cm4.h ****    
  58:./Libraries/CMSIS//Include/core_cm4.h ****    - Violates MISRA 2004 Advisory Rule 19.7, Function-like macro defined.<br>
  59:./Libraries/CMSIS//Include/core_cm4.h ****      Function-like macros are used to allow more efficient code. 
  60:./Libraries/CMSIS//Include/core_cm4.h **** 
  61:./Libraries/CMSIS//Include/core_cm4.h ****  */
  62:./Libraries/CMSIS//Include/core_cm4.h **** 
  63:./Libraries/CMSIS//Include/core_cm4.h **** 
  64:./Libraries/CMSIS//Include/core_cm4.h **** /*******************************************************************************
  65:./Libraries/CMSIS//Include/core_cm4.h ****  *                 CMSIS definitions
  66:./Libraries/CMSIS//Include/core_cm4.h ****  ******************************************************************************/
  67:./Libraries/CMSIS//Include/core_cm4.h **** /** \defgroup CMSIS_core_definitions CMSIS Core Definitions
  68:./Libraries/CMSIS//Include/core_cm4.h ****   This file defines all structures and symbols for CMSIS core:
  69:./Libraries/CMSIS//Include/core_cm4.h ****    - CMSIS version number
  70:./Libraries/CMSIS//Include/core_cm4.h ****    - Cortex-M core
  71:./Libraries/CMSIS//Include/core_cm4.h ****    - Cortex-M core Revision Number
  72:./Libraries/CMSIS//Include/core_cm4.h ****   @{
  73:./Libraries/CMSIS//Include/core_cm4.h ****  */
  74:./Libraries/CMSIS//Include/core_cm4.h **** 
  75:./Libraries/CMSIS//Include/core_cm4.h **** /*  CMSIS CM4 definitions */
  76:./Libraries/CMSIS//Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (0x02)                                                       /*!<
  77:./Libraries/CMSIS//Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (0x10)                                                       /*!<
  78:./Libraries/CMSIS//Include/core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16) | __CM4_CMSIS_VERSION_SUB) /*!<
  79:./Libraries/CMSIS//Include/core_cm4.h **** 
  80:./Libraries/CMSIS//Include/core_cm4.h **** #define __CORTEX_M                (0x04)                                                       /*!<
  81:./Libraries/CMSIS//Include/core_cm4.h **** 
  82:./Libraries/CMSIS//Include/core_cm4.h **** 
  83:./Libraries/CMSIS//Include/core_cm4.h **** #if   defined ( __CC_ARM )
  84:./Libraries/CMSIS//Include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  85:./Libraries/CMSIS//Include/core_cm4.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  86:./Libraries/CMSIS//Include/core_cm4.h **** 
  87:./Libraries/CMSIS//Include/core_cm4.h **** #elif defined ( __ICCARM__ )
  88:./Libraries/CMSIS//Include/core_cm4.h ****   #define __ASM           __asm                                       /*!< asm keyword for IAR Comp
  89:./Libraries/CMSIS//Include/core_cm4.h ****   #define __INLINE        inline                                      /*!< inline keyword for IAR C
  90:./Libraries/CMSIS//Include/core_cm4.h **** 
  91:./Libraries/CMSIS//Include/core_cm4.h **** #elif defined ( __GNUC__ )
  92:./Libraries/CMSIS//Include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
  93:./Libraries/CMSIS//Include/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
  94:./Libraries/CMSIS//Include/core_cm4.h **** 
  95:./Libraries/CMSIS//Include/core_cm4.h **** #elif defined ( __TASKING__ )
  96:./Libraries/CMSIS//Include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
  97:./Libraries/CMSIS//Include/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
  98:./Libraries/CMSIS//Include/core_cm4.h **** 
  99:./Libraries/CMSIS//Include/core_cm4.h **** #endif
 100:./Libraries/CMSIS//Include/core_cm4.h **** 
 101:./Libraries/CMSIS//Include/core_cm4.h **** /*!< __FPU_USED to be checked prior to making use of FPU specific registers and functions */
 102:./Libraries/CMSIS//Include/core_cm4.h **** #if defined ( __CC_ARM )
 103:./Libraries/CMSIS//Include/core_cm4.h ****   #if defined __TARGET_FPU_VFP
 104:./Libraries/CMSIS//Include/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 105:./Libraries/CMSIS//Include/core_cm4.h ****       #define __FPU_USED       1
 106:./Libraries/CMSIS//Include/core_cm4.h ****     #else
 107:./Libraries/CMSIS//Include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 108:./Libraries/CMSIS//Include/core_cm4.h ****       #define __FPU_USED       0
 109:./Libraries/CMSIS//Include/core_cm4.h ****     #endif
 110:./Libraries/CMSIS//Include/core_cm4.h ****   #else
 111:./Libraries/CMSIS//Include/core_cm4.h ****     #define __FPU_USED         0
 112:./Libraries/CMSIS//Include/core_cm4.h ****   #endif
 113:./Libraries/CMSIS//Include/core_cm4.h **** 
 114:./Libraries/CMSIS//Include/core_cm4.h **** #elif defined ( __ICCARM__ )
 115:./Libraries/CMSIS//Include/core_cm4.h ****   #if defined __ARMVFP__
 116:./Libraries/CMSIS//Include/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 117:./Libraries/CMSIS//Include/core_cm4.h ****       #define __FPU_USED       1
 118:./Libraries/CMSIS//Include/core_cm4.h ****     #else
 119:./Libraries/CMSIS//Include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 120:./Libraries/CMSIS//Include/core_cm4.h ****       #define __FPU_USED       0
 121:./Libraries/CMSIS//Include/core_cm4.h ****     #endif
 122:./Libraries/CMSIS//Include/core_cm4.h ****   #else
 123:./Libraries/CMSIS//Include/core_cm4.h ****     #define __FPU_USED         0
 124:./Libraries/CMSIS//Include/core_cm4.h ****   #endif
 125:./Libraries/CMSIS//Include/core_cm4.h **** 
 126:./Libraries/CMSIS//Include/core_cm4.h **** #elif defined ( __GNUC__ )
 127:./Libraries/CMSIS//Include/core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 128:./Libraries/CMSIS//Include/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 129:./Libraries/CMSIS//Include/core_cm4.h ****       #define __FPU_USED       1
 130:./Libraries/CMSIS//Include/core_cm4.h ****     #else
 131:./Libraries/CMSIS//Include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 132:./Libraries/CMSIS//Include/core_cm4.h ****       #define __FPU_USED       0
 133:./Libraries/CMSIS//Include/core_cm4.h ****     #endif
 134:./Libraries/CMSIS//Include/core_cm4.h ****   #else
 135:./Libraries/CMSIS//Include/core_cm4.h ****     #define __FPU_USED         0
 136:./Libraries/CMSIS//Include/core_cm4.h ****   #endif
 137:./Libraries/CMSIS//Include/core_cm4.h **** 
 138:./Libraries/CMSIS//Include/core_cm4.h **** #elif defined ( __TASKING__ )
 139:./Libraries/CMSIS//Include/core_cm4.h ****     /* add preprocessor checks to define __FPU_USED */
 140:./Libraries/CMSIS//Include/core_cm4.h ****     #define __FPU_USED         0
 141:./Libraries/CMSIS//Include/core_cm4.h **** #endif
 142:./Libraries/CMSIS//Include/core_cm4.h **** 
 143:./Libraries/CMSIS//Include/core_cm4.h **** #include <stdint.h>                      /*!< standard types definitions                      */
 144:./Libraries/CMSIS//Include/core_cm4.h **** #include <core_cmInstr.h>                /*!< Core Instruction Access                         */
 145:./Libraries/CMSIS//Include/core_cm4.h **** #include <core_cmFunc.h>                 /*!< Core Function Access                            */
 146:./Libraries/CMSIS//Include/core_cm4.h **** #include <core_cm4_simd.h>               /*!< Compiler specific SIMD Intrinsics               */
 147:./Libraries/CMSIS//Include/core_cm4.h **** 
 148:./Libraries/CMSIS//Include/core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 149:./Libraries/CMSIS//Include/core_cm4.h **** 
 150:./Libraries/CMSIS//Include/core_cm4.h **** #ifndef __CMSIS_GENERIC
 151:./Libraries/CMSIS//Include/core_cm4.h **** 
 152:./Libraries/CMSIS//Include/core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 153:./Libraries/CMSIS//Include/core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 154:./Libraries/CMSIS//Include/core_cm4.h **** 
 155:./Libraries/CMSIS//Include/core_cm4.h **** /* check device defines and use defaults */
 156:./Libraries/CMSIS//Include/core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 157:./Libraries/CMSIS//Include/core_cm4.h ****   #ifndef __CM4_REV
 158:./Libraries/CMSIS//Include/core_cm4.h ****     #define __CM4_REV               0x0000
 159:./Libraries/CMSIS//Include/core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 160:./Libraries/CMSIS//Include/core_cm4.h ****   #endif
 161:./Libraries/CMSIS//Include/core_cm4.h **** 
 162:./Libraries/CMSIS//Include/core_cm4.h ****   #ifndef __FPU_PRESENT
 163:./Libraries/CMSIS//Include/core_cm4.h ****     #define __FPU_PRESENT             0
 164:./Libraries/CMSIS//Include/core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 165:./Libraries/CMSIS//Include/core_cm4.h ****   #endif
 166:./Libraries/CMSIS//Include/core_cm4.h **** 
 167:./Libraries/CMSIS//Include/core_cm4.h ****   #ifndef __MPU_PRESENT
 168:./Libraries/CMSIS//Include/core_cm4.h ****     #define __MPU_PRESENT             0
 169:./Libraries/CMSIS//Include/core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 170:./Libraries/CMSIS//Include/core_cm4.h ****   #endif
 171:./Libraries/CMSIS//Include/core_cm4.h **** 
 172:./Libraries/CMSIS//Include/core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 173:./Libraries/CMSIS//Include/core_cm4.h ****     #define __NVIC_PRIO_BITS          4
 174:./Libraries/CMSIS//Include/core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 175:./Libraries/CMSIS//Include/core_cm4.h ****   #endif
 176:./Libraries/CMSIS//Include/core_cm4.h **** 
 177:./Libraries/CMSIS//Include/core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 178:./Libraries/CMSIS//Include/core_cm4.h ****     #define __Vendor_SysTickConfig    0
 179:./Libraries/CMSIS//Include/core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 180:./Libraries/CMSIS//Include/core_cm4.h ****   #endif
 181:./Libraries/CMSIS//Include/core_cm4.h **** #endif
 182:./Libraries/CMSIS//Include/core_cm4.h **** 
 183:./Libraries/CMSIS//Include/core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 184:./Libraries/CMSIS//Include/core_cm4.h **** #ifdef __cplusplus
 185:./Libraries/CMSIS//Include/core_cm4.h ****   #define   __I     volatile             /*!< defines 'read only' permissions                 */
 186:./Libraries/CMSIS//Include/core_cm4.h **** #else
 187:./Libraries/CMSIS//Include/core_cm4.h ****   #define   __I     volatile const       /*!< defines 'read only' permissions                 */
 188:./Libraries/CMSIS//Include/core_cm4.h **** #endif
 189:./Libraries/CMSIS//Include/core_cm4.h **** #define     __O     volatile             /*!< defines 'write only' permissions                */
 190:./Libraries/CMSIS//Include/core_cm4.h **** #define     __IO    volatile             /*!< defines 'read / write' permissions              */
 191:./Libraries/CMSIS//Include/core_cm4.h **** 
 192:./Libraries/CMSIS//Include/core_cm4.h **** /*@} end of group CMSIS_core_definitions */
 193:./Libraries/CMSIS//Include/core_cm4.h **** 
 194:./Libraries/CMSIS//Include/core_cm4.h **** 
 195:./Libraries/CMSIS//Include/core_cm4.h **** 
 196:./Libraries/CMSIS//Include/core_cm4.h **** /*******************************************************************************
 197:./Libraries/CMSIS//Include/core_cm4.h ****  *                 Register Abstraction
 198:./Libraries/CMSIS//Include/core_cm4.h ****  ******************************************************************************/
 199:./Libraries/CMSIS//Include/core_cm4.h **** /** \defgroup CMSIS_core_register CMSIS Core Register
 200:./Libraries/CMSIS//Include/core_cm4.h ****   Core Register contain:
 201:./Libraries/CMSIS//Include/core_cm4.h ****   - Core Register
 202:./Libraries/CMSIS//Include/core_cm4.h ****   - Core NVIC Register
 203:./Libraries/CMSIS//Include/core_cm4.h ****   - Core SCB Register
 204:./Libraries/CMSIS//Include/core_cm4.h ****   - Core SysTick Register
 205:./Libraries/CMSIS//Include/core_cm4.h ****   - Core Debug Register
 206:./Libraries/CMSIS//Include/core_cm4.h ****   - Core MPU Register
 207:./Libraries/CMSIS//Include/core_cm4.h ****   - Core FPU Register
 208:./Libraries/CMSIS//Include/core_cm4.h **** */
 209:./Libraries/CMSIS//Include/core_cm4.h **** 
 210:./Libraries/CMSIS//Include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 211:./Libraries/CMSIS//Include/core_cm4.h ****     \defgroup CMSIS_CORE CMSIS Core
 212:./Libraries/CMSIS//Include/core_cm4.h ****   Type definitions for the Cortex-M Core Registers
 213:./Libraries/CMSIS//Include/core_cm4.h ****   @{
 214:./Libraries/CMSIS//Include/core_cm4.h ****  */
 215:./Libraries/CMSIS//Include/core_cm4.h **** 
 216:./Libraries/CMSIS//Include/core_cm4.h **** /** \brief  Union type to access the Application Program Status Register (APSR).
 217:./Libraries/CMSIS//Include/core_cm4.h ****  */
 218:./Libraries/CMSIS//Include/core_cm4.h **** typedef union
 219:./Libraries/CMSIS//Include/core_cm4.h **** {
 220:./Libraries/CMSIS//Include/core_cm4.h ****   struct
 221:./Libraries/CMSIS//Include/core_cm4.h ****   {
 222:./Libraries/CMSIS//Include/core_cm4.h **** #if (__CORTEX_M != 0x04)
 223:./Libraries/CMSIS//Include/core_cm4.h ****     uint32_t _reserved0:27;              /*!< bit:  0..26  Reserved                           */
 224:./Libraries/CMSIS//Include/core_cm4.h **** #else
 225:./Libraries/CMSIS//Include/core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved                           */
 226:./Libraries/CMSIS//Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags        */
 227:./Libraries/CMSIS//Include/core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved                           */
 228:./Libraries/CMSIS//Include/core_cm4.h **** #endif
 229:./Libraries/CMSIS//Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag          */
 230:./Libraries/CMSIS//Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag       */
 231:./Libraries/CMSIS//Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag          */
 232:./Libraries/CMSIS//Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag           */
 233:./Libraries/CMSIS//Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag       */
 234:./Libraries/CMSIS//Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 235:./Libraries/CMSIS//Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 236:./Libraries/CMSIS//Include/core_cm4.h **** } APSR_Type;
 237:./Libraries/CMSIS//Include/core_cm4.h **** 
 238:./Libraries/CMSIS//Include/core_cm4.h **** 
 239:./Libraries/CMSIS//Include/core_cm4.h **** /** \brief  Union type to access the Interrupt Program Status Register (IPSR).
 240:./Libraries/CMSIS//Include/core_cm4.h ****  */
 241:./Libraries/CMSIS//Include/core_cm4.h **** typedef union
 242:./Libraries/CMSIS//Include/core_cm4.h **** {
 243:./Libraries/CMSIS//Include/core_cm4.h ****   struct
 244:./Libraries/CMSIS//Include/core_cm4.h ****   {
 245:./Libraries/CMSIS//Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number                   */
 246:./Libraries/CMSIS//Include/core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved                           */
 247:./Libraries/CMSIS//Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 248:./Libraries/CMSIS//Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 249:./Libraries/CMSIS//Include/core_cm4.h **** } IPSR_Type;
 250:./Libraries/CMSIS//Include/core_cm4.h **** 
 251:./Libraries/CMSIS//Include/core_cm4.h **** 
 252:./Libraries/CMSIS//Include/core_cm4.h **** /** \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 253:./Libraries/CMSIS//Include/core_cm4.h ****  */
 254:./Libraries/CMSIS//Include/core_cm4.h **** typedef union
 255:./Libraries/CMSIS//Include/core_cm4.h **** {
 256:./Libraries/CMSIS//Include/core_cm4.h ****   struct
 257:./Libraries/CMSIS//Include/core_cm4.h ****   {
 258:./Libraries/CMSIS//Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number                   */
 259:./Libraries/CMSIS//Include/core_cm4.h **** #if (__CORTEX_M != 0x04)
 260:./Libraries/CMSIS//Include/core_cm4.h ****     uint32_t _reserved0:15;              /*!< bit:  9..23  Reserved                           */
 261:./Libraries/CMSIS//Include/core_cm4.h **** #else
 262:./Libraries/CMSIS//Include/core_cm4.h ****     uint32_t _reserved0:7;               /*!< bit:  9..15  Reserved                           */
 263:./Libraries/CMSIS//Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags        */
 264:./Libraries/CMSIS//Include/core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved                           */
 265:./Libraries/CMSIS//Include/core_cm4.h **** #endif
 266:./Libraries/CMSIS//Include/core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0)          */
 267:./Libraries/CMSIS//Include/core_cm4.h ****     uint32_t IT:2;                       /*!< bit: 25..26  saved IT state   (read 0)          */
 268:./Libraries/CMSIS//Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag          */
 269:./Libraries/CMSIS//Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag       */
 270:./Libraries/CMSIS//Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag          */
 271:./Libraries/CMSIS//Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag           */
 272:./Libraries/CMSIS//Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag       */
 273:./Libraries/CMSIS//Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 274:./Libraries/CMSIS//Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 275:./Libraries/CMSIS//Include/core_cm4.h **** } xPSR_Type;
 276:./Libraries/CMSIS//Include/core_cm4.h **** 
 277:./Libraries/CMSIS//Include/core_cm4.h **** 
 278:./Libraries/CMSIS//Include/core_cm4.h **** /** \brief  Union type to access the Control Registers (CONTROL).
 279:./Libraries/CMSIS//Include/core_cm4.h ****  */
 280:./Libraries/CMSIS//Include/core_cm4.h **** typedef union
 281:./Libraries/CMSIS//Include/core_cm4.h **** {
 282:./Libraries/CMSIS//Include/core_cm4.h ****   struct
 283:./Libraries/CMSIS//Include/core_cm4.h ****   {
 284:./Libraries/CMSIS//Include/core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 285:./Libraries/CMSIS//Include/core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used                   */
 286:./Libraries/CMSIS//Include/core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag           */
 287:./Libraries/CMSIS//Include/core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved                           */
 288:./Libraries/CMSIS//Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 289:./Libraries/CMSIS//Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 290:./Libraries/CMSIS//Include/core_cm4.h **** } CONTROL_Type;
 291:./Libraries/CMSIS//Include/core_cm4.h **** 
 292:./Libraries/CMSIS//Include/core_cm4.h **** /*@} end of group CMSIS_CORE */
 293:./Libraries/CMSIS//Include/core_cm4.h **** 
 294:./Libraries/CMSIS//Include/core_cm4.h **** 
 295:./Libraries/CMSIS//Include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 296:./Libraries/CMSIS//Include/core_cm4.h ****     \defgroup CMSIS_NVIC CMSIS NVIC
 297:./Libraries/CMSIS//Include/core_cm4.h ****   Type definitions for the Cortex-M NVIC Registers
 298:./Libraries/CMSIS//Include/core_cm4.h ****   @{
 299:./Libraries/CMSIS//Include/core_cm4.h ****  */
 300:./Libraries/CMSIS//Include/core_cm4.h **** 
 301:./Libraries/CMSIS//Include/core_cm4.h **** /** \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 302:./Libraries/CMSIS//Include/core_cm4.h ****  */
 303:./Libraries/CMSIS//Include/core_cm4.h **** typedef struct
 304:./Libraries/CMSIS//Include/core_cm4.h **** {
 305:./Libraries/CMSIS//Include/core_cm4.h ****   __IO uint32_t ISER[8];                 /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register   
 306:./Libraries/CMSIS//Include/core_cm4.h ****        uint32_t RESERVED0[24];
 307:./Libraries/CMSIS//Include/core_cm4.h ****   __IO uint32_t ICER[8];                 /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 308:./Libraries/CMSIS//Include/core_cm4.h ****        uint32_t RSERVED1[24];
 309:./Libraries/CMSIS//Include/core_cm4.h ****   __IO uint32_t ISPR[8];                 /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register  
 310:./Libraries/CMSIS//Include/core_cm4.h ****        uint32_t RESERVED2[24];
 311:./Libraries/CMSIS//Include/core_cm4.h ****   __IO uint32_t ICPR[8];                 /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 312:./Libraries/CMSIS//Include/core_cm4.h ****        uint32_t RESERVED3[24];
 313:./Libraries/CMSIS//Include/core_cm4.h ****   __IO uint32_t IABR[8];                 /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register   
 314:./Libraries/CMSIS//Include/core_cm4.h ****        uint32_t RESERVED4[56];
 315:./Libraries/CMSIS//Include/core_cm4.h ****   __IO uint8_t  IP[240];                 /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 316:./Libraries/CMSIS//Include/core_cm4.h ****        uint32_t RESERVED5[644];
 317:./Libraries/CMSIS//Include/core_cm4.h ****   __O  uint32_t STIR;                    /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 318:./Libraries/CMSIS//Include/core_cm4.h **** }  NVIC_Type;
 319:./Libraries/CMSIS//Include/core_cm4.h **** 
 320:./Libraries/CMSIS//Include/core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 321:./Libraries/CMSIS//Include/core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0                                          /*!< STIR: I
 322:./Libraries/CMSIS//Include/core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL << NVIC_STIR_INTID_Pos)            /*!< STIR: I
 323:./Libraries/CMSIS//Include/core_cm4.h **** 
 324:./Libraries/CMSIS//Include/core_cm4.h **** /*@} end of group CMSIS_NVIC */
 325:./Libraries/CMSIS//Include/core_cm4.h **** 
 326:./Libraries/CMSIS//Include/core_cm4.h **** 
 327:./Libraries/CMSIS//Include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 328:./Libraries/CMSIS//Include/core_cm4.h ****     \defgroup CMSIS_SCB CMSIS SCB
 329:./Libraries/CMSIS//Include/core_cm4.h ****   Type definitions for the Cortex-M System Control Block Registers
 330:./Libraries/CMSIS//Include/core_cm4.h ****   @{
 331:./Libraries/CMSIS//Include/core_cm4.h ****  */
 332:./Libraries/CMSIS//Include/core_cm4.h **** 
 333:./Libraries/CMSIS//Include/core_cm4.h **** /** \brief  Structure type to access the System Control Block (SCB).
 334:./Libraries/CMSIS//Include/core_cm4.h ****  */
 335:./Libraries/CMSIS//Include/core_cm4.h **** typedef struct
 336:./Libraries/CMSIS//Include/core_cm4.h **** {
 337:./Libraries/CMSIS//Include/core_cm4.h ****   __I  uint32_t CPUID;                   /*!< Offset: 0x000 (R/ )  CPUID Base Register             
 338:./Libraries/CMSIS//Include/core_cm4.h ****   __IO uint32_t ICSR;                    /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 339:./Libraries/CMSIS//Include/core_cm4.h ****   __IO uint32_t VTOR;                    /*!< Offset: 0x008 (R/W)  Vector Table Offset Register    
 340:./Libraries/CMSIS//Include/core_cm4.h ****   __IO uint32_t AIRCR;                   /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 341:./Libraries/CMSIS//Include/core_cm4.h ****   __IO uint32_t SCR;                     /*!< Offset: 0x010 (R/W)  System Control Register         
 342:./Libraries/CMSIS//Include/core_cm4.h ****   __IO uint32_t CCR;                     /*!< Offset: 0x014 (R/W)  Configuration Control Register  
 343:./Libraries/CMSIS//Include/core_cm4.h ****   __IO uint8_t  SHP[12];                 /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 344:./Libraries/CMSIS//Include/core_cm4.h ****   __IO uint32_t SHCSR;                   /*!< Offset: 0x024 (R/W)  System Handler Control and State
 345:./Libraries/CMSIS//Include/core_cm4.h ****   __IO uint32_t CFSR;                    /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 346:./Libraries/CMSIS//Include/core_cm4.h ****   __IO uint32_t HFSR;                    /*!< Offset: 0x02C (R/W)  HardFault Status Register       
 347:./Libraries/CMSIS//Include/core_cm4.h ****   __IO uint32_t DFSR;                    /*!< Offset: 0x030 (R/W)  Debug Fault Status Register     
 348:./Libraries/CMSIS//Include/core_cm4.h ****   __IO uint32_t MMFAR;                   /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 349:./Libraries/CMSIS//Include/core_cm4.h ****   __IO uint32_t BFAR;                    /*!< Offset: 0x038 (R/W)  BusFault Address Register       
 350:./Libraries/CMSIS//Include/core_cm4.h ****   __IO uint32_t AFSR;                    /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 351:./Libraries/CMSIS//Include/core_cm4.h ****   __I  uint32_t PFR[2];                  /*!< Offset: 0x040 (R/ )  Processor Feature Register      
 352:./Libraries/CMSIS//Include/core_cm4.h ****   __I  uint32_t DFR;                     /*!< Offset: 0x048 (R/ )  Debug Feature Register          
 353:./Libraries/CMSIS//Include/core_cm4.h ****   __I  uint32_t ADR;                     /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register      
 354:./Libraries/CMSIS//Include/core_cm4.h ****   __I  uint32_t MMFR[4];                 /*!< Offset: 0x050 (R/ )  Memory Model Feature Register   
 355:./Libraries/CMSIS//Include/core_cm4.h ****   __I  uint32_t ISAR[5];                 /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 356:./Libraries/CMSIS//Include/core_cm4.h ****        uint32_t RESERVED0[5];
 357:./Libraries/CMSIS//Include/core_cm4.h ****   __IO uint32_t CPACR;                   /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 358:./Libraries/CMSIS//Include/core_cm4.h **** } SCB_Type;
 359:./Libraries/CMSIS//Include/core_cm4.h **** 
 360:./Libraries/CMSIS//Include/core_cm4.h **** /* SCB CPUID Register Definitions */
 361:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 362:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 363:./Libraries/CMSIS//Include/core_cm4.h **** 
 364:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 365:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 366:./Libraries/CMSIS//Include/core_cm4.h **** 
 367:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16                                             /*!< SCB 
 368:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 369:./Libraries/CMSIS//Include/core_cm4.h **** 
 370:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
 371:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 372:./Libraries/CMSIS//Include/core_cm4.h **** 
 373:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
 374:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL << SCB_CPUID_REVISION_Pos)              /*!< SCB 
 375:./Libraries/CMSIS//Include/core_cm4.h **** 
 376:./Libraries/CMSIS//Include/core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 377:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 378:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 379:./Libraries/CMSIS//Include/core_cm4.h **** 
 380:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 381:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 382:./Libraries/CMSIS//Include/core_cm4.h **** 
 383:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 384:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 385:./Libraries/CMSIS//Include/core_cm4.h **** 
 386:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 387:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 388:./Libraries/CMSIS//Include/core_cm4.h **** 
 389:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
 390:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 391:./Libraries/CMSIS//Include/core_cm4.h **** 
 392:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 393:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 394:./Libraries/CMSIS//Include/core_cm4.h **** 
 395:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
 396:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 397:./Libraries/CMSIS//Include/core_cm4.h **** 
 398:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 399:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 400:./Libraries/CMSIS//Include/core_cm4.h **** 
 401:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11                                             /*!< SCB 
 402:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 403:./Libraries/CMSIS//Include/core_cm4.h **** 
 404:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 405:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL << SCB_ICSR_VECTACTIVE_Pos)           /*!< SCB 
 406:./Libraries/CMSIS//Include/core_cm4.h **** 
 407:./Libraries/CMSIS//Include/core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 408:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7                                             /*!< SCB 
 409:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 410:./Libraries/CMSIS//Include/core_cm4.h **** 
 411:./Libraries/CMSIS//Include/core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 412:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 413:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 414:./Libraries/CMSIS//Include/core_cm4.h **** 
 415:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 416:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 417:./Libraries/CMSIS//Include/core_cm4.h **** 
 418:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 419:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 420:./Libraries/CMSIS//Include/core_cm4.h **** 
 421:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8                                             /*!< SCB 
 422:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 423:./Libraries/CMSIS//Include/core_cm4.h **** 
 424:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
 425:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 426:./Libraries/CMSIS//Include/core_cm4.h **** 
 427:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 428:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 429:./Libraries/CMSIS//Include/core_cm4.h **** 
 430:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0                                             /*!< SCB 
 431:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL << SCB_AIRCR_VECTRESET_Pos)               /*!< SCB 
 432:./Libraries/CMSIS//Include/core_cm4.h **** 
 433:./Libraries/CMSIS//Include/core_cm4.h **** /* SCB System Control Register Definitions */
 434:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 435:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 436:./Libraries/CMSIS//Include/core_cm4.h **** 
 437:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 438:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 439:./Libraries/CMSIS//Include/core_cm4.h **** 
 440:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 441:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 442:./Libraries/CMSIS//Include/core_cm4.h **** 
 443:./Libraries/CMSIS//Include/core_cm4.h **** /* SCB Configuration Control Register Definitions */
 444:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
 445:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 446:./Libraries/CMSIS//Include/core_cm4.h **** 
 447:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8                                             /*!< SCB 
 448:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 449:./Libraries/CMSIS//Include/core_cm4.h **** 
 450:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4                                             /*!< SCB 
 451:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 452:./Libraries/CMSIS//Include/core_cm4.h **** 
 453:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 454:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 455:./Libraries/CMSIS//Include/core_cm4.h **** 
 456:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1                                             /*!< SCB 
 457:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 458:./Libraries/CMSIS//Include/core_cm4.h **** 
 459:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0                                             /*!< SCB 
 460:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL << SCB_CCR_NONBASETHRDENA_Pos)            /*!< SCB 
 461:./Libraries/CMSIS//Include/core_cm4.h **** 
 462:./Libraries/CMSIS//Include/core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 463:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18                                             /*!< SCB 
 464:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 465:./Libraries/CMSIS//Include/core_cm4.h **** 
 466:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17                                             /*!< SCB 
 467:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 468:./Libraries/CMSIS//Include/core_cm4.h **** 
 469:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16                                             /*!< SCB 
 470:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 471:./Libraries/CMSIS//Include/core_cm4.h **** 
 472:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 473:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 474:./Libraries/CMSIS//Include/core_cm4.h **** 
 475:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14                                             /*!< SCB 
 476:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 477:./Libraries/CMSIS//Include/core_cm4.h **** 
 478:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13                                             /*!< SCB 
 479:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 480:./Libraries/CMSIS//Include/core_cm4.h **** 
 481:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12                                             /*!< SCB 
 482:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 483:./Libraries/CMSIS//Include/core_cm4.h **** 
 484:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11                                             /*!< SCB 
 485:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 486:./Libraries/CMSIS//Include/core_cm4.h **** 
 487:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10                                             /*!< SCB 
 488:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 489:./Libraries/CMSIS//Include/core_cm4.h **** 
 490:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8                                             /*!< SCB 
 491:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 492:./Libraries/CMSIS//Include/core_cm4.h **** 
 493:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7                                             /*!< SCB 
 494:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 495:./Libraries/CMSIS//Include/core_cm4.h **** 
 496:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3                                             /*!< SCB 
 497:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 498:./Libraries/CMSIS//Include/core_cm4.h **** 
 499:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1                                             /*!< SCB 
 500:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 501:./Libraries/CMSIS//Include/core_cm4.h **** 
 502:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0                                             /*!< SCB 
 503:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL << SCB_SHCSR_MEMFAULTACT_Pos)             /*!< SCB 
 504:./Libraries/CMSIS//Include/core_cm4.h **** 
 505:./Libraries/CMSIS//Include/core_cm4.h **** /* SCB Configurable Fault Status Registers Definitions */
 506:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16                                             /*!< SCB 
 507:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 508:./Libraries/CMSIS//Include/core_cm4.h **** 
 509:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8                                             /*!< SCB 
 510:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 511:./Libraries/CMSIS//Include/core_cm4.h **** 
 512:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0                                             /*!< SCB 
 513:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL << SCB_CFSR_MEMFAULTSR_Pos)            /*!< SCB 
 514:./Libraries/CMSIS//Include/core_cm4.h **** 
 515:./Libraries/CMSIS//Include/core_cm4.h **** /* SCB Hard Fault Status Registers Definitions */
 516:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31                                             /*!< SCB 
 517:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 518:./Libraries/CMSIS//Include/core_cm4.h **** 
 519:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30                                             /*!< SCB 
 520:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 521:./Libraries/CMSIS//Include/core_cm4.h **** 
 522:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1                                             /*!< SCB 
 523:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 524:./Libraries/CMSIS//Include/core_cm4.h **** 
 525:./Libraries/CMSIS//Include/core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 526:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4                                             /*!< SCB 
 527:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 528:./Libraries/CMSIS//Include/core_cm4.h **** 
 529:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3                                             /*!< SCB 
 530:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 531:./Libraries/CMSIS//Include/core_cm4.h **** 
 532:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2                                             /*!< SCB 
 533:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 534:./Libraries/CMSIS//Include/core_cm4.h **** 
 535:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1                                             /*!< SCB 
 536:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 537:./Libraries/CMSIS//Include/core_cm4.h **** 
 538:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0                                             /*!< SCB 
 539:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL << SCB_DFSR_HALTED_Pos)                   /*!< SCB 
 540:./Libraries/CMSIS//Include/core_cm4.h **** 
 541:./Libraries/CMSIS//Include/core_cm4.h **** /*@} end of group CMSIS_SCB */
 542:./Libraries/CMSIS//Include/core_cm4.h **** 
 543:./Libraries/CMSIS//Include/core_cm4.h **** 
 544:./Libraries/CMSIS//Include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 545:./Libraries/CMSIS//Include/core_cm4.h ****     \defgroup CMSIS_SCnSCB CMSIS System Control and ID Register not in the SCB
 546:./Libraries/CMSIS//Include/core_cm4.h ****   Type definitions for the Cortex-M System Control and ID Register not in the SCB
 547:./Libraries/CMSIS//Include/core_cm4.h ****   @{
 548:./Libraries/CMSIS//Include/core_cm4.h ****  */
 549:./Libraries/CMSIS//Include/core_cm4.h **** 
 550:./Libraries/CMSIS//Include/core_cm4.h **** /** \brief  Structure type to access the System Control and ID Register not in the SCB.
 551:./Libraries/CMSIS//Include/core_cm4.h ****  */
 552:./Libraries/CMSIS//Include/core_cm4.h **** typedef struct
 553:./Libraries/CMSIS//Include/core_cm4.h **** {
 554:./Libraries/CMSIS//Include/core_cm4.h ****        uint32_t RESERVED0[1];
 555:./Libraries/CMSIS//Include/core_cm4.h ****   __I  uint32_t ICTR;                    /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 556:./Libraries/CMSIS//Include/core_cm4.h ****   __IO uint32_t ACTLR;                   /*!< Offset: 0x008 (R/W)  Auxiliary Control Register      
 557:./Libraries/CMSIS//Include/core_cm4.h **** } SCnSCB_Type;
 558:./Libraries/CMSIS//Include/core_cm4.h **** 
 559:./Libraries/CMSIS//Include/core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 560:./Libraries/CMSIS//Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0                                          /*!< ICTR: I
 561:./Libraries/CMSIS//Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL << SCnSCB_ICTR_INTLINESNUM_Pos)      /*!< ICTR: I
 562:./Libraries/CMSIS//Include/core_cm4.h **** 
 563:./Libraries/CMSIS//Include/core_cm4.h **** /* Auxiliary Control Register Definitions */
 564:./Libraries/CMSIS//Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9                                          /*!< ACTLR: 
 565:./Libraries/CMSIS//Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 566:./Libraries/CMSIS//Include/core_cm4.h **** 
 567:./Libraries/CMSIS//Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8                                          /*!< ACTLR: 
 568:./Libraries/CMSIS//Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 569:./Libraries/CMSIS//Include/core_cm4.h **** 
 570:./Libraries/CMSIS//Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2                                          /*!< ACTLR: 
 571:./Libraries/CMSIS//Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 572:./Libraries/CMSIS//Include/core_cm4.h **** 
 573:./Libraries/CMSIS//Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1                                          /*!< ACTLR: 
 574:./Libraries/CMSIS//Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 575:./Libraries/CMSIS//Include/core_cm4.h **** 
 576:./Libraries/CMSIS//Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0                                          /*!< ACTLR: 
 577:./Libraries/CMSIS//Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL << SCnSCB_ACTLR_DISMCYCINT_Pos)        /*!< ACTLR: 
 578:./Libraries/CMSIS//Include/core_cm4.h **** 
 579:./Libraries/CMSIS//Include/core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 580:./Libraries/CMSIS//Include/core_cm4.h **** 
 581:./Libraries/CMSIS//Include/core_cm4.h **** 
 582:./Libraries/CMSIS//Include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 583:./Libraries/CMSIS//Include/core_cm4.h ****     \defgroup CMSIS_SysTick CMSIS SysTick
 584:./Libraries/CMSIS//Include/core_cm4.h ****   Type definitions for the Cortex-M System Timer Registers
 585:./Libraries/CMSIS//Include/core_cm4.h ****   @{
 586:./Libraries/CMSIS//Include/core_cm4.h ****  */
 587:./Libraries/CMSIS//Include/core_cm4.h **** 
 588:./Libraries/CMSIS//Include/core_cm4.h **** /** \brief  Structure type to access the System Timer (SysTick).
 589:./Libraries/CMSIS//Include/core_cm4.h ****  */
 590:./Libraries/CMSIS//Include/core_cm4.h **** typedef struct
 591:./Libraries/CMSIS//Include/core_cm4.h **** {
 592:./Libraries/CMSIS//Include/core_cm4.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 593:./Libraries/CMSIS//Include/core_cm4.h ****   __IO uint32_t LOAD;                    /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register   
 594:./Libraries/CMSIS//Include/core_cm4.h ****   __IO uint32_t VAL;                     /*!< Offset: 0x008 (R/W)  SysTick Current Value Register  
 595:./Libraries/CMSIS//Include/core_cm4.h ****   __I  uint32_t CALIB;                   /*!< Offset: 0x00C (R/ )  SysTick Calibration Register    
 596:./Libraries/CMSIS//Include/core_cm4.h **** } SysTick_Type;
 597:./Libraries/CMSIS//Include/core_cm4.h **** 
 598:./Libraries/CMSIS//Include/core_cm4.h **** /* SysTick Control / Status Register Definitions */
 599:./Libraries/CMSIS//Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
 600:./Libraries/CMSIS//Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 601:./Libraries/CMSIS//Include/core_cm4.h **** 
 602:./Libraries/CMSIS//Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
 603:./Libraries/CMSIS//Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 604:./Libraries/CMSIS//Include/core_cm4.h **** 
 605:./Libraries/CMSIS//Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 606:./Libraries/CMSIS//Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 607:./Libraries/CMSIS//Include/core_cm4.h **** 
 608:./Libraries/CMSIS//Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 609:./Libraries/CMSIS//Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL << SysTick_CTRL_ENABLE_Pos)               /*!< SysT
 610:./Libraries/CMSIS//Include/core_cm4.h **** 
 611:./Libraries/CMSIS//Include/core_cm4.h **** /* SysTick Reload Register Definitions */
 612:./Libraries/CMSIS//Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 613:./Libraries/CMSIS//Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL << SysTick_LOAD_RELOAD_Pos)        /*!< SysT
 614:./Libraries/CMSIS//Include/core_cm4.h **** 
 615:./Libraries/CMSIS//Include/core_cm4.h **** /* SysTick Current Register Definitions */
 616:./Libraries/CMSIS//Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
 617:./Libraries/CMSIS//Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 618:./Libraries/CMSIS//Include/core_cm4.h **** 
 619:./Libraries/CMSIS//Include/core_cm4.h **** /* SysTick Calibration Register Definitions */
 620:./Libraries/CMSIS//Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
 621:./Libraries/CMSIS//Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 622:./Libraries/CMSIS//Include/core_cm4.h **** 
 623:./Libraries/CMSIS//Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
 624:./Libraries/CMSIS//Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 625:./Libraries/CMSIS//Include/core_cm4.h **** 
 626:./Libraries/CMSIS//Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 627:./Libraries/CMSIS//Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 628:./Libraries/CMSIS//Include/core_cm4.h **** 
 629:./Libraries/CMSIS//Include/core_cm4.h **** /*@} end of group CMSIS_SysTick */
 630:./Libraries/CMSIS//Include/core_cm4.h **** 
 631:./Libraries/CMSIS//Include/core_cm4.h **** 
 632:./Libraries/CMSIS//Include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 633:./Libraries/CMSIS//Include/core_cm4.h ****     \defgroup CMSIS_ITM CMSIS ITM
 634:./Libraries/CMSIS//Include/core_cm4.h ****   Type definitions for the Cortex-M Instrumentation Trace Macrocell (ITM)
 635:./Libraries/CMSIS//Include/core_cm4.h ****   @{
 636:./Libraries/CMSIS//Include/core_cm4.h ****  */
 637:./Libraries/CMSIS//Include/core_cm4.h **** 
 638:./Libraries/CMSIS//Include/core_cm4.h **** /** \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 639:./Libraries/CMSIS//Include/core_cm4.h ****  */
 640:./Libraries/CMSIS//Include/core_cm4.h **** typedef struct
 641:./Libraries/CMSIS//Include/core_cm4.h **** {
 642:./Libraries/CMSIS//Include/core_cm4.h ****   __O  union
 643:./Libraries/CMSIS//Include/core_cm4.h ****   {
 644:./Libraries/CMSIS//Include/core_cm4.h ****     __O  uint8_t    u8;                  /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit         
 645:./Libraries/CMSIS//Include/core_cm4.h ****     __O  uint16_t   u16;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit        
 646:./Libraries/CMSIS//Include/core_cm4.h ****     __O  uint32_t   u32;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit        
 647:./Libraries/CMSIS//Include/core_cm4.h ****   }  PORT [32];                          /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers     
 648:./Libraries/CMSIS//Include/core_cm4.h ****        uint32_t RESERVED0[864];
 649:./Libraries/CMSIS//Include/core_cm4.h ****   __IO uint32_t TER;                     /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register       
 650:./Libraries/CMSIS//Include/core_cm4.h ****        uint32_t RESERVED1[15];
 651:./Libraries/CMSIS//Include/core_cm4.h ****   __IO uint32_t TPR;                     /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register    
 652:./Libraries/CMSIS//Include/core_cm4.h ****        uint32_t RESERVED2[15];
 653:./Libraries/CMSIS//Include/core_cm4.h ****   __IO uint32_t TCR;                     /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register      
 654:./Libraries/CMSIS//Include/core_cm4.h **** } ITM_Type;
 655:./Libraries/CMSIS//Include/core_cm4.h **** 
 656:./Libraries/CMSIS//Include/core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 657:./Libraries/CMSIS//Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0                                          /*!< ITM TPR
 658:./Libraries/CMSIS//Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFUL << ITM_TPR_PRIVMASK_Pos)             /*!< ITM TPR
 659:./Libraries/CMSIS//Include/core_cm4.h **** 
 660:./Libraries/CMSIS//Include/core_cm4.h **** /* ITM Trace Control Register Definitions */
 661:./Libraries/CMSIS//Include/core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23                                          /*!< ITM TCR
 662:./Libraries/CMSIS//Include/core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                   /*!< ITM TCR
 663:./Libraries/CMSIS//Include/core_cm4.h **** 
 664:./Libraries/CMSIS//Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16                                          /*!< ITM TCR
 665:./Libraries/CMSIS//Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)          /*!< ITM TCR
 666:./Libraries/CMSIS//Include/core_cm4.h **** 
 667:./Libraries/CMSIS//Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10                                          /*!< ITM TCR
 668:./Libraries/CMSIS//Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                /*!< ITM TCR
 669:./Libraries/CMSIS//Include/core_cm4.h **** 
 670:./Libraries/CMSIS//Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8                                          /*!< ITM TCR
 671:./Libraries/CMSIS//Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)             /*!< ITM TCR
 672:./Libraries/CMSIS//Include/core_cm4.h **** 
 673:./Libraries/CMSIS//Include/core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4                                          /*!< ITM TCR
 674:./Libraries/CMSIS//Include/core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                 /*!< ITM TCR
 675:./Libraries/CMSIS//Include/core_cm4.h **** 
 676:./Libraries/CMSIS//Include/core_cm4.h **** #define ITM_TCR_TXENA_Pos                   3                                          /*!< ITM TCR
 677:./Libraries/CMSIS//Include/core_cm4.h **** #define ITM_TCR_TXENA_Msk                  (1UL << ITM_TCR_TXENA_Pos)                  /*!< ITM TCR
 678:./Libraries/CMSIS//Include/core_cm4.h **** 
 679:./Libraries/CMSIS//Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2                                          /*!< ITM TCR
 680:./Libraries/CMSIS//Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                /*!< ITM TCR
 681:./Libraries/CMSIS//Include/core_cm4.h **** 
 682:./Libraries/CMSIS//Include/core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1                                          /*!< ITM TCR
 683:./Libraries/CMSIS//Include/core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                  /*!< ITM TCR
 684:./Libraries/CMSIS//Include/core_cm4.h **** 
 685:./Libraries/CMSIS//Include/core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0                                          /*!< ITM TCR
 686:./Libraries/CMSIS//Include/core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL << ITM_TCR_ITMENA_Pos)                 /*!< ITM TCR
 687:./Libraries/CMSIS//Include/core_cm4.h **** 
 688:./Libraries/CMSIS//Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 689:./Libraries/CMSIS//Include/core_cm4.h **** 
 690:./Libraries/CMSIS//Include/core_cm4.h **** 
 691:./Libraries/CMSIS//Include/core_cm4.h **** #if (__MPU_PRESENT == 1)
 692:./Libraries/CMSIS//Include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 693:./Libraries/CMSIS//Include/core_cm4.h ****     \defgroup CMSIS_MPU CMSIS MPU
 694:./Libraries/CMSIS//Include/core_cm4.h ****   Type definitions for the Cortex-M Memory Protection Unit (MPU)
 695:./Libraries/CMSIS//Include/core_cm4.h ****   @{
 696:./Libraries/CMSIS//Include/core_cm4.h ****  */
 697:./Libraries/CMSIS//Include/core_cm4.h **** 
 698:./Libraries/CMSIS//Include/core_cm4.h **** /** \brief  Structure type to access the Memory Protection Unit (MPU).
 699:./Libraries/CMSIS//Include/core_cm4.h ****  */
 700:./Libraries/CMSIS//Include/core_cm4.h **** typedef struct
 701:./Libraries/CMSIS//Include/core_cm4.h **** {
 702:./Libraries/CMSIS//Include/core_cm4.h ****   __I  uint32_t TYPE;                    /*!< Offset: 0x000 (R/ )  MPU Type Register               
 703:./Libraries/CMSIS//Include/core_cm4.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x004 (R/W)  MPU Control Register            
 704:./Libraries/CMSIS//Include/core_cm4.h ****   __IO uint32_t RNR;                     /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register      
 705:./Libraries/CMSIS//Include/core_cm4.h ****   __IO uint32_t RBAR;                    /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
 706:./Libraries/CMSIS//Include/core_cm4.h ****   __IO uint32_t RASR;                    /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
 707:./Libraries/CMSIS//Include/core_cm4.h ****   __IO uint32_t RBAR_A1;                 /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
 708:./Libraries/CMSIS//Include/core_cm4.h ****   __IO uint32_t RASR_A1;                 /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
 709:./Libraries/CMSIS//Include/core_cm4.h ****   __IO uint32_t RBAR_A2;                 /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
 710:./Libraries/CMSIS//Include/core_cm4.h ****   __IO uint32_t RASR_A2;                 /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
 711:./Libraries/CMSIS//Include/core_cm4.h ****   __IO uint32_t RBAR_A3;                 /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
 712:./Libraries/CMSIS//Include/core_cm4.h ****   __IO uint32_t RASR_A3;                 /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
 713:./Libraries/CMSIS//Include/core_cm4.h **** } MPU_Type;
 714:./Libraries/CMSIS//Include/core_cm4.h **** 
 715:./Libraries/CMSIS//Include/core_cm4.h **** /* MPU Type Register */
 716:./Libraries/CMSIS//Include/core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16                                             /*!< MPU 
 717:./Libraries/CMSIS//Include/core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
 718:./Libraries/CMSIS//Include/core_cm4.h **** 
 719:./Libraries/CMSIS//Include/core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8                                             /*!< MPU 
 720:./Libraries/CMSIS//Include/core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
 721:./Libraries/CMSIS//Include/core_cm4.h **** 
 722:./Libraries/CMSIS//Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0                                             /*!< MPU 
 723:./Libraries/CMSIS//Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL << MPU_TYPE_SEPARATE_Pos)                 /*!< MPU 
 724:./Libraries/CMSIS//Include/core_cm4.h **** 
 725:./Libraries/CMSIS//Include/core_cm4.h **** /* MPU Control Register */
 726:./Libraries/CMSIS//Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2                                             /*!< MPU 
 727:./Libraries/CMSIS//Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
 728:./Libraries/CMSIS//Include/core_cm4.h **** 
 729:./Libraries/CMSIS//Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1                                             /*!< MPU 
 730:./Libraries/CMSIS//Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
 731:./Libraries/CMSIS//Include/core_cm4.h **** 
 732:./Libraries/CMSIS//Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0                                             /*!< MPU 
 733:./Libraries/CMSIS//Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL << MPU_CTRL_ENABLE_Pos)                   /*!< MPU 
 734:./Libraries/CMSIS//Include/core_cm4.h **** 
 735:./Libraries/CMSIS//Include/core_cm4.h **** /* MPU Region Number Register */
 736:./Libraries/CMSIS//Include/core_cm4.h **** #define MPU_RNR_REGION_Pos                  0                                             /*!< MPU 
 737:./Libraries/CMSIS//Include/core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL << MPU_RNR_REGION_Pos)                 /*!< MPU 
 738:./Libraries/CMSIS//Include/core_cm4.h **** 
 739:./Libraries/CMSIS//Include/core_cm4.h **** /* MPU Region Base Address Register */
 740:./Libraries/CMSIS//Include/core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5                                             /*!< MPU 
 741:./Libraries/CMSIS//Include/core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
 742:./Libraries/CMSIS//Include/core_cm4.h **** 
 743:./Libraries/CMSIS//Include/core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4                                             /*!< MPU 
 744:./Libraries/CMSIS//Include/core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
 745:./Libraries/CMSIS//Include/core_cm4.h **** 
 746:./Libraries/CMSIS//Include/core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0                                             /*!< MPU 
 747:./Libraries/CMSIS//Include/core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL << MPU_RBAR_REGION_Pos)                 /*!< MPU 
 748:./Libraries/CMSIS//Include/core_cm4.h **** 
 749:./Libraries/CMSIS//Include/core_cm4.h **** /* MPU Region Attribute and Size Register */
 750:./Libraries/CMSIS//Include/core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16                                             /*!< MPU 
 751:./Libraries/CMSIS//Include/core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
 752:./Libraries/CMSIS//Include/core_cm4.h **** 
 753:./Libraries/CMSIS//Include/core_cm4.h **** #define MPU_RASR_SRD_Pos                    8                                             /*!< MPU 
 754:./Libraries/CMSIS//Include/core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
 755:./Libraries/CMSIS//Include/core_cm4.h **** 
 756:./Libraries/CMSIS//Include/core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1                                             /*!< MPU 
 757:./Libraries/CMSIS//Include/core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
 758:./Libraries/CMSIS//Include/core_cm4.h **** 
 759:./Libraries/CMSIS//Include/core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0                                             /*!< MPU 
 760:./Libraries/CMSIS//Include/core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL << MPU_RASR_ENABLE_Pos)                   /*!< MPU 
 761:./Libraries/CMSIS//Include/core_cm4.h **** 
 762:./Libraries/CMSIS//Include/core_cm4.h **** /*@} end of group CMSIS_MPU */
 763:./Libraries/CMSIS//Include/core_cm4.h **** #endif
 764:./Libraries/CMSIS//Include/core_cm4.h **** 
 765:./Libraries/CMSIS//Include/core_cm4.h **** 
 766:./Libraries/CMSIS//Include/core_cm4.h **** #if (__FPU_PRESENT == 1)
 767:./Libraries/CMSIS//Include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 768:./Libraries/CMSIS//Include/core_cm4.h ****     \defgroup CMSIS_FPU CMSIS FPU
 769:./Libraries/CMSIS//Include/core_cm4.h ****   Type definitions for the Cortex-M Floating Point Unit (FPU)
 770:./Libraries/CMSIS//Include/core_cm4.h ****   @{
 771:./Libraries/CMSIS//Include/core_cm4.h ****  */
 772:./Libraries/CMSIS//Include/core_cm4.h **** 
 773:./Libraries/CMSIS//Include/core_cm4.h **** /** \brief  Structure type to access the Floating Point Unit (FPU).
 774:./Libraries/CMSIS//Include/core_cm4.h ****  */
 775:./Libraries/CMSIS//Include/core_cm4.h **** typedef struct
 776:./Libraries/CMSIS//Include/core_cm4.h **** {
 777:./Libraries/CMSIS//Include/core_cm4.h ****        uint32_t RESERVED0[1];
 778:./Libraries/CMSIS//Include/core_cm4.h ****   __IO uint32_t FPCCR;                   /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
 779:./Libraries/CMSIS//Include/core_cm4.h ****   __IO uint32_t FPCAR;                   /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
 780:./Libraries/CMSIS//Include/core_cm4.h ****   __IO uint32_t FPDSCR;                  /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
 781:./Libraries/CMSIS//Include/core_cm4.h ****   __I  uint32_t MVFR0;                   /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
 782:./Libraries/CMSIS//Include/core_cm4.h ****   __I  uint32_t MVFR1;                   /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
 783:./Libraries/CMSIS//Include/core_cm4.h **** } FPU_Type;
 784:./Libraries/CMSIS//Include/core_cm4.h **** 
 785:./Libraries/CMSIS//Include/core_cm4.h **** /* Floating-Point Context Control Register */
 786:./Libraries/CMSIS//Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31                                             /*!< FPCC
 787:./Libraries/CMSIS//Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
 788:./Libraries/CMSIS//Include/core_cm4.h **** 
 789:./Libraries/CMSIS//Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30                                             /*!< FPCC
 790:./Libraries/CMSIS//Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
 791:./Libraries/CMSIS//Include/core_cm4.h **** 
 792:./Libraries/CMSIS//Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8                                             /*!< FPCC
 793:./Libraries/CMSIS//Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
 794:./Libraries/CMSIS//Include/core_cm4.h **** 
 795:./Libraries/CMSIS//Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6                                             /*!< FPCC
 796:./Libraries/CMSIS//Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
 797:./Libraries/CMSIS//Include/core_cm4.h **** 
 798:./Libraries/CMSIS//Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5                                             /*!< FPCC
 799:./Libraries/CMSIS//Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
 800:./Libraries/CMSIS//Include/core_cm4.h **** 
 801:./Libraries/CMSIS//Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4                                             /*!< FPCC
 802:./Libraries/CMSIS//Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
 803:./Libraries/CMSIS//Include/core_cm4.h **** 
 804:./Libraries/CMSIS//Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3                                             /*!< FPCC
 805:./Libraries/CMSIS//Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
 806:./Libraries/CMSIS//Include/core_cm4.h **** 
 807:./Libraries/CMSIS//Include/core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1                                             /*!< FPCC
 808:./Libraries/CMSIS//Include/core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
 809:./Libraries/CMSIS//Include/core_cm4.h **** 
 810:./Libraries/CMSIS//Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0                                             /*!< FPCC
 811:./Libraries/CMSIS//Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL << FPU_FPCCR_LSPACT_Pos)                  /*!< FPCC
 812:./Libraries/CMSIS//Include/core_cm4.h **** 
 813:./Libraries/CMSIS//Include/core_cm4.h **** /* Floating-Point Context Address Register */
 814:./Libraries/CMSIS//Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3                                             /*!< FPCA
 815:./Libraries/CMSIS//Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
 816:./Libraries/CMSIS//Include/core_cm4.h **** 
 817:./Libraries/CMSIS//Include/core_cm4.h **** /* Floating-Point Default Status Control Register */
 818:./Libraries/CMSIS//Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26                                             /*!< FPDS
 819:./Libraries/CMSIS//Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
 820:./Libraries/CMSIS//Include/core_cm4.h **** 
 821:./Libraries/CMSIS//Include/core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25                                             /*!< FPDS
 822:./Libraries/CMSIS//Include/core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
 823:./Libraries/CMSIS//Include/core_cm4.h **** 
 824:./Libraries/CMSIS//Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24                                             /*!< FPDS
 825:./Libraries/CMSIS//Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
 826:./Libraries/CMSIS//Include/core_cm4.h **** 
 827:./Libraries/CMSIS//Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22                                             /*!< FPDS
 828:./Libraries/CMSIS//Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
 829:./Libraries/CMSIS//Include/core_cm4.h **** 
 830:./Libraries/CMSIS//Include/core_cm4.h **** /* Media and FP Feature Register 0 */
 831:./Libraries/CMSIS//Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28                                             /*!< MVFR
 832:./Libraries/CMSIS//Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
 833:./Libraries/CMSIS//Include/core_cm4.h **** 
 834:./Libraries/CMSIS//Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24                                             /*!< MVFR
 835:./Libraries/CMSIS//Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
 836:./Libraries/CMSIS//Include/core_cm4.h **** 
 837:./Libraries/CMSIS//Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20                                             /*!< MVFR
 838:./Libraries/CMSIS//Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
 839:./Libraries/CMSIS//Include/core_cm4.h **** 
 840:./Libraries/CMSIS//Include/core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16                                             /*!< MVFR
 841:./Libraries/CMSIS//Include/core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
 842:./Libraries/CMSIS//Include/core_cm4.h **** 
 843:./Libraries/CMSIS//Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12                                             /*!< MVFR
 844:./Libraries/CMSIS//Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
 845:./Libraries/CMSIS//Include/core_cm4.h **** 
 846:./Libraries/CMSIS//Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8                                             /*!< MVFR
 847:./Libraries/CMSIS//Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
 848:./Libraries/CMSIS//Include/core_cm4.h **** 
 849:./Libraries/CMSIS//Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4                                             /*!< MVFR
 850:./Libraries/CMSIS//Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
 851:./Libraries/CMSIS//Include/core_cm4.h **** 
 852:./Libraries/CMSIS//Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0                                             /*!< MVFR
 853:./Libraries/CMSIS//Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL << FPU_MVFR0_A_SIMD_registers_Pos)      /*!< MVFR
 854:./Libraries/CMSIS//Include/core_cm4.h **** 
 855:./Libraries/CMSIS//Include/core_cm4.h **** /* Media and FP Feature Register 1 */
 856:./Libraries/CMSIS//Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28                                             /*!< MVFR
 857:./Libraries/CMSIS//Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
 858:./Libraries/CMSIS//Include/core_cm4.h **** 
 859:./Libraries/CMSIS//Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24                                             /*!< MVFR
 860:./Libraries/CMSIS//Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
 861:./Libraries/CMSIS//Include/core_cm4.h **** 
 862:./Libraries/CMSIS//Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4                                             /*!< MVFR
 863:./Libraries/CMSIS//Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
 864:./Libraries/CMSIS//Include/core_cm4.h **** 
 865:./Libraries/CMSIS//Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0                                             /*!< MVFR
 866:./Libraries/CMSIS//Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL << FPU_MVFR1_FtZ_mode_Pos)              /*!< MVFR
 867:./Libraries/CMSIS//Include/core_cm4.h **** 
 868:./Libraries/CMSIS//Include/core_cm4.h **** /*@} end of group CMSIS_FPU */
 869:./Libraries/CMSIS//Include/core_cm4.h **** #endif
 870:./Libraries/CMSIS//Include/core_cm4.h **** 
 871:./Libraries/CMSIS//Include/core_cm4.h **** 
 872:./Libraries/CMSIS//Include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 873:./Libraries/CMSIS//Include/core_cm4.h ****     \defgroup CMSIS_CoreDebug CMSIS Core Debug
 874:./Libraries/CMSIS//Include/core_cm4.h ****   Type definitions for the Cortex-M Core Debug Registers
 875:./Libraries/CMSIS//Include/core_cm4.h ****   @{
 876:./Libraries/CMSIS//Include/core_cm4.h ****  */
 877:./Libraries/CMSIS//Include/core_cm4.h **** 
 878:./Libraries/CMSIS//Include/core_cm4.h **** /** \brief  Structure type to access the Core Debug Register (CoreDebug).
 879:./Libraries/CMSIS//Include/core_cm4.h ****  */
 880:./Libraries/CMSIS//Include/core_cm4.h **** typedef struct
 881:./Libraries/CMSIS//Include/core_cm4.h **** {
 882:./Libraries/CMSIS//Include/core_cm4.h ****   __IO uint32_t DHCSR;                   /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
 883:./Libraries/CMSIS//Include/core_cm4.h ****   __O  uint32_t DCRSR;                   /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
 884:./Libraries/CMSIS//Include/core_cm4.h ****   __IO uint32_t DCRDR;                   /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
 885:./Libraries/CMSIS//Include/core_cm4.h ****   __IO uint32_t DEMCR;                   /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
 886:./Libraries/CMSIS//Include/core_cm4.h **** } CoreDebug_Type;
 887:./Libraries/CMSIS//Include/core_cm4.h **** 
 888:./Libraries/CMSIS//Include/core_cm4.h **** /* Debug Halting Control and Status Register */
 889:./Libraries/CMSIS//Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16                                             /*!< Core
 890:./Libraries/CMSIS//Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
 891:./Libraries/CMSIS//Include/core_cm4.h **** 
 892:./Libraries/CMSIS//Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25                                             /*!< Core
 893:./Libraries/CMSIS//Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
 894:./Libraries/CMSIS//Include/core_cm4.h **** 
 895:./Libraries/CMSIS//Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24                                             /*!< Core
 896:./Libraries/CMSIS//Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
 897:./Libraries/CMSIS//Include/core_cm4.h **** 
 898:./Libraries/CMSIS//Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19                                             /*!< Core
 899:./Libraries/CMSIS//Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
 900:./Libraries/CMSIS//Include/core_cm4.h **** 
 901:./Libraries/CMSIS//Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18                                             /*!< Core
 902:./Libraries/CMSIS//Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
 903:./Libraries/CMSIS//Include/core_cm4.h **** 
 904:./Libraries/CMSIS//Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17                                             /*!< Core
 905:./Libraries/CMSIS//Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
 906:./Libraries/CMSIS//Include/core_cm4.h **** 
 907:./Libraries/CMSIS//Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16                                             /*!< Core
 908:./Libraries/CMSIS//Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
 909:./Libraries/CMSIS//Include/core_cm4.h **** 
 910:./Libraries/CMSIS//Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5                                             /*!< Core
 911:./Libraries/CMSIS//Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
 912:./Libraries/CMSIS//Include/core_cm4.h **** 
 913:./Libraries/CMSIS//Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3                                             /*!< Core
 914:./Libraries/CMSIS//Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
 915:./Libraries/CMSIS//Include/core_cm4.h **** 
 916:./Libraries/CMSIS//Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2                                             /*!< Core
 917:./Libraries/CMSIS//Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
 918:./Libraries/CMSIS//Include/core_cm4.h **** 
 919:./Libraries/CMSIS//Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1                                             /*!< Core
 920:./Libraries/CMSIS//Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
 921:./Libraries/CMSIS//Include/core_cm4.h **** 
 922:./Libraries/CMSIS//Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0                                             /*!< Core
 923:./Libraries/CMSIS//Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL << CoreDebug_DHCSR_C_DEBUGEN_Pos)         /*!< Core
 924:./Libraries/CMSIS//Include/core_cm4.h **** 
 925:./Libraries/CMSIS//Include/core_cm4.h **** /* Debug Core Register Selector Register */
 926:./Libraries/CMSIS//Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16                                             /*!< Core
 927:./Libraries/CMSIS//Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
 928:./Libraries/CMSIS//Include/core_cm4.h **** 
 929:./Libraries/CMSIS//Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0                                             /*!< Core
 930:./Libraries/CMSIS//Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL << CoreDebug_DCRSR_REGSEL_Pos)         /*!< Core
 931:./Libraries/CMSIS//Include/core_cm4.h **** 
 932:./Libraries/CMSIS//Include/core_cm4.h **** /* Debug Exception and Monitor Control Register */
 933:./Libraries/CMSIS//Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24                                             /*!< Core
 934:./Libraries/CMSIS//Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
 935:./Libraries/CMSIS//Include/core_cm4.h **** 
 936:./Libraries/CMSIS//Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19                                             /*!< Core
 937:./Libraries/CMSIS//Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
 938:./Libraries/CMSIS//Include/core_cm4.h **** 
 939:./Libraries/CMSIS//Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18                                             /*!< Core
 940:./Libraries/CMSIS//Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
 941:./Libraries/CMSIS//Include/core_cm4.h **** 
 942:./Libraries/CMSIS//Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17                                             /*!< Core
 943:./Libraries/CMSIS//Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
 944:./Libraries/CMSIS//Include/core_cm4.h **** 
 945:./Libraries/CMSIS//Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16                                             /*!< Core
 946:./Libraries/CMSIS//Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
 947:./Libraries/CMSIS//Include/core_cm4.h **** 
 948:./Libraries/CMSIS//Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10                                             /*!< Core
 949:./Libraries/CMSIS//Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
 950:./Libraries/CMSIS//Include/core_cm4.h **** 
 951:./Libraries/CMSIS//Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9                                             /*!< Core
 952:./Libraries/CMSIS//Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
 953:./Libraries/CMSIS//Include/core_cm4.h **** 
 954:./Libraries/CMSIS//Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8                                             /*!< Core
 955:./Libraries/CMSIS//Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
 956:./Libraries/CMSIS//Include/core_cm4.h **** 
 957:./Libraries/CMSIS//Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7                                             /*!< Core
 958:./Libraries/CMSIS//Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
 959:./Libraries/CMSIS//Include/core_cm4.h **** 
 960:./Libraries/CMSIS//Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6                                             /*!< Core
 961:./Libraries/CMSIS//Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
 962:./Libraries/CMSIS//Include/core_cm4.h **** 
 963:./Libraries/CMSIS//Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5                                             /*!< Core
 964:./Libraries/CMSIS//Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
 965:./Libraries/CMSIS//Include/core_cm4.h **** 
 966:./Libraries/CMSIS//Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4                                             /*!< Core
 967:./Libraries/CMSIS//Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
 968:./Libraries/CMSIS//Include/core_cm4.h **** 
 969:./Libraries/CMSIS//Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0                                             /*!< Core
 970:./Libraries/CMSIS//Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL << CoreDebug_DEMCR_VC_CORERESET_Pos)      /*!< Core
 971:./Libraries/CMSIS//Include/core_cm4.h **** 
 972:./Libraries/CMSIS//Include/core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
 973:./Libraries/CMSIS//Include/core_cm4.h **** 
 974:./Libraries/CMSIS//Include/core_cm4.h **** 
 975:./Libraries/CMSIS//Include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 976:./Libraries/CMSIS//Include/core_cm4.h ****   @{
 977:./Libraries/CMSIS//Include/core_cm4.h ****  */
 978:./Libraries/CMSIS//Include/core_cm4.h **** 
 979:./Libraries/CMSIS//Include/core_cm4.h **** /* Memory mapping of Cortex-M4 Hardware */
 980:./Libraries/CMSIS//Include/core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
 981:./Libraries/CMSIS//Include/core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address        
 982:./Libraries/CMSIS//Include/core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
 983:./Libraries/CMSIS//Include/core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address    
 984:./Libraries/CMSIS//Include/core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address       
 985:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
 986:./Libraries/CMSIS//Include/core_cm4.h **** 
 987:./Libraries/CMSIS//Include/core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
 988:./Libraries/CMSIS//Include/core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
 989:./Libraries/CMSIS//Include/core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
 990:./Libraries/CMSIS//Include/core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
 991:./Libraries/CMSIS//Include/core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
 992:./Libraries/CMSIS//Include/core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
 993:./Libraries/CMSIS//Include/core_cm4.h **** 
 994:./Libraries/CMSIS//Include/core_cm4.h **** #if (__MPU_PRESENT == 1)
 995:./Libraries/CMSIS//Include/core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit  
 996:./Libraries/CMSIS//Include/core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit  
 997:./Libraries/CMSIS//Include/core_cm4.h **** #endif
 998:./Libraries/CMSIS//Include/core_cm4.h **** 
 999:./Libraries/CMSIS//Include/core_cm4.h **** #if (__FPU_PRESENT == 1)
1000:./Libraries/CMSIS//Include/core_cm4.h ****   #define FPU_BASE          (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit     
1001:./Libraries/CMSIS//Include/core_cm4.h ****   #define FPU               ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit     
1002:./Libraries/CMSIS//Include/core_cm4.h **** #endif
1003:./Libraries/CMSIS//Include/core_cm4.h **** 
1004:./Libraries/CMSIS//Include/core_cm4.h **** /*@} */
1005:./Libraries/CMSIS//Include/core_cm4.h **** 
1006:./Libraries/CMSIS//Include/core_cm4.h **** 
1007:./Libraries/CMSIS//Include/core_cm4.h **** 
1008:./Libraries/CMSIS//Include/core_cm4.h **** /*******************************************************************************
1009:./Libraries/CMSIS//Include/core_cm4.h ****  *                Hardware Abstraction Layer
1010:./Libraries/CMSIS//Include/core_cm4.h ****  ******************************************************************************/
1011:./Libraries/CMSIS//Include/core_cm4.h **** /** \defgroup CMSIS_Core_FunctionInterface CMSIS Core Function Interface
1012:./Libraries/CMSIS//Include/core_cm4.h ****   Core Function Interface contains:
1013:./Libraries/CMSIS//Include/core_cm4.h ****   - Core NVIC Functions
1014:./Libraries/CMSIS//Include/core_cm4.h ****   - Core SysTick Functions
1015:./Libraries/CMSIS//Include/core_cm4.h ****   - Core Debug Functions
1016:./Libraries/CMSIS//Include/core_cm4.h ****   - Core Register Access Functions
1017:./Libraries/CMSIS//Include/core_cm4.h **** */
1018:./Libraries/CMSIS//Include/core_cm4.h **** 
1019:./Libraries/CMSIS//Include/core_cm4.h **** 
1020:./Libraries/CMSIS//Include/core_cm4.h **** 
1021:./Libraries/CMSIS//Include/core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1022:./Libraries/CMSIS//Include/core_cm4.h **** /** \ingroup  CMSIS_Core_FunctionInterface
1023:./Libraries/CMSIS//Include/core_cm4.h ****     \defgroup CMSIS_Core_NVICFunctions CMSIS Core NVIC Functions
1024:./Libraries/CMSIS//Include/core_cm4.h ****   @{
1025:./Libraries/CMSIS//Include/core_cm4.h ****  */
1026:./Libraries/CMSIS//Include/core_cm4.h **** 
1027:./Libraries/CMSIS//Include/core_cm4.h **** /** \brief  Set Priority Grouping
1028:./Libraries/CMSIS//Include/core_cm4.h **** 
1029:./Libraries/CMSIS//Include/core_cm4.h ****   This function sets the priority grouping field using the required unlock sequence.
1030:./Libraries/CMSIS//Include/core_cm4.h ****   The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1031:./Libraries/CMSIS//Include/core_cm4.h ****   Only values from 0..7 are used.
1032:./Libraries/CMSIS//Include/core_cm4.h ****   In case of a conflict between priority grouping and available
1033:./Libraries/CMSIS//Include/core_cm4.h ****   priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1034:./Libraries/CMSIS//Include/core_cm4.h **** 
1035:./Libraries/CMSIS//Include/core_cm4.h ****     \param [in]      PriorityGroup  Priority grouping field
1036:./Libraries/CMSIS//Include/core_cm4.h ****  */
1037:./Libraries/CMSIS//Include/core_cm4.h **** static __INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1038:./Libraries/CMSIS//Include/core_cm4.h **** {
1039:./Libraries/CMSIS//Include/core_cm4.h ****   uint32_t reg_value;
1040:./Libraries/CMSIS//Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07);               /* only values 0..7 a
1041:./Libraries/CMSIS//Include/core_cm4.h **** 
1042:./Libraries/CMSIS//Include/core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1043:./Libraries/CMSIS//Include/core_cm4.h ****   reg_value &= ~(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk);             /* clear bits to chan
1044:./Libraries/CMSIS//Include/core_cm4.h ****   reg_value  =  (reg_value                                 |
1045:./Libraries/CMSIS//Include/core_cm4.h ****                 ((uint32_t)0x5FA << SCB_AIRCR_VECTKEY_Pos) |
1046:./Libraries/CMSIS//Include/core_cm4.h ****                 (PriorityGroupTmp << 8));                                     /* Insert write key a
1047:./Libraries/CMSIS//Include/core_cm4.h ****   SCB->AIRCR =  reg_value;
1048:./Libraries/CMSIS//Include/core_cm4.h **** }
1049:./Libraries/CMSIS//Include/core_cm4.h **** 
1050:./Libraries/CMSIS//Include/core_cm4.h **** 
1051:./Libraries/CMSIS//Include/core_cm4.h **** /** \brief  Get Priority Grouping
1052:./Libraries/CMSIS//Include/core_cm4.h **** 
1053:./Libraries/CMSIS//Include/core_cm4.h ****   This function gets the priority grouping from NVIC Interrupt Controller.
1054:./Libraries/CMSIS//Include/core_cm4.h ****   Priority grouping is SCB->AIRCR [10:8] PRIGROUP field.
1055:./Libraries/CMSIS//Include/core_cm4.h **** 
1056:./Libraries/CMSIS//Include/core_cm4.h ****     \return                Priority grouping field
1057:./Libraries/CMSIS//Include/core_cm4.h ****  */
1058:./Libraries/CMSIS//Include/core_cm4.h **** static __INLINE uint32_t NVIC_GetPriorityGrouping(void)
1059:./Libraries/CMSIS//Include/core_cm4.h **** {
1060:./Libraries/CMSIS//Include/core_cm4.h ****   return ((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos);   /* read priority grou
1061:./Libraries/CMSIS//Include/core_cm4.h **** }
1062:./Libraries/CMSIS//Include/core_cm4.h **** 
1063:./Libraries/CMSIS//Include/core_cm4.h **** 
1064:./Libraries/CMSIS//Include/core_cm4.h **** /** \brief  Enable External Interrupt
1065:./Libraries/CMSIS//Include/core_cm4.h **** 
1066:./Libraries/CMSIS//Include/core_cm4.h ****     This function enables a device specific interrupt in the NVIC interrupt controller.
1067:./Libraries/CMSIS//Include/core_cm4.h ****     The interrupt number cannot be a negative value.
1068:./Libraries/CMSIS//Include/core_cm4.h **** 
1069:./Libraries/CMSIS//Include/core_cm4.h ****     \param [in]      IRQn  Number of the external interrupt to enable
1070:./Libraries/CMSIS//Include/core_cm4.h ****  */
1071:./Libraries/CMSIS//Include/core_cm4.h **** static __INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1072:./Libraries/CMSIS//Include/core_cm4.h **** {
1073:./Libraries/CMSIS//Include/core_cm4.h **** /*  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));  enable interrupt */
1074:./Libraries/CMSIS//Include/core_cm4.h ****   NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32
1075:./Libraries/CMSIS//Include/core_cm4.h **** }
1076:./Libraries/CMSIS//Include/core_cm4.h **** 
1077:./Libraries/CMSIS//Include/core_cm4.h **** 
1078:./Libraries/CMSIS//Include/core_cm4.h **** /** \brief  Disable External Interrupt
1079:./Libraries/CMSIS//Include/core_cm4.h **** 
1080:./Libraries/CMSIS//Include/core_cm4.h ****     This function disables a device specific interrupt in the NVIC interrupt controller.
1081:./Libraries/CMSIS//Include/core_cm4.h ****     The interrupt number cannot be a negative value.
1082:./Libraries/CMSIS//Include/core_cm4.h **** 
1083:./Libraries/CMSIS//Include/core_cm4.h ****     \param [in]      IRQn  Number of the external interrupt to disable
1084:./Libraries/CMSIS//Include/core_cm4.h ****  */
1085:./Libraries/CMSIS//Include/core_cm4.h **** static __INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
1086:./Libraries/CMSIS//Include/core_cm4.h **** {
1087:./Libraries/CMSIS//Include/core_cm4.h ****   NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
1088:./Libraries/CMSIS//Include/core_cm4.h **** }
1089:./Libraries/CMSIS//Include/core_cm4.h **** 
1090:./Libraries/CMSIS//Include/core_cm4.h **** 
1091:./Libraries/CMSIS//Include/core_cm4.h **** /** \brief  Get Pending Interrupt
1092:./Libraries/CMSIS//Include/core_cm4.h **** 
1093:./Libraries/CMSIS//Include/core_cm4.h ****     This function reads the pending register in the NVIC and returns the pending bit
1094:./Libraries/CMSIS//Include/core_cm4.h ****     for the specified interrupt.
1095:./Libraries/CMSIS//Include/core_cm4.h **** 
1096:./Libraries/CMSIS//Include/core_cm4.h ****     \param [in]      IRQn  Number of the interrupt for get pending
1097:./Libraries/CMSIS//Include/core_cm4.h ****     \return             0  Interrupt status is not pending
1098:./Libraries/CMSIS//Include/core_cm4.h ****     \return             1  Interrupt status is pending
1099:./Libraries/CMSIS//Include/core_cm4.h ****  */
1100:./Libraries/CMSIS//Include/core_cm4.h **** static __INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
1101:./Libraries/CMSIS//Include/core_cm4.h **** {
1102:./Libraries/CMSIS//Include/core_cm4.h ****   return((uint32_t) ((NVIC->ISPR[(uint32_t)(IRQn) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0)); 
1103:./Libraries/CMSIS//Include/core_cm4.h **** }
1104:./Libraries/CMSIS//Include/core_cm4.h **** 
1105:./Libraries/CMSIS//Include/core_cm4.h **** 
1106:./Libraries/CMSIS//Include/core_cm4.h **** /** \brief  Set Pending Interrupt
1107:./Libraries/CMSIS//Include/core_cm4.h **** 
1108:./Libraries/CMSIS//Include/core_cm4.h ****     This function sets the pending bit for the specified interrupt.
1109:./Libraries/CMSIS//Include/core_cm4.h ****     The interrupt number cannot be a negative value.
1110:./Libraries/CMSIS//Include/core_cm4.h **** 
1111:./Libraries/CMSIS//Include/core_cm4.h ****     \param [in]      IRQn  Number of the interrupt for set pending
1112:./Libraries/CMSIS//Include/core_cm4.h ****  */
1113:./Libraries/CMSIS//Include/core_cm4.h **** static __INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
1114:./Libraries/CMSIS//Include/core_cm4.h **** {
1115:./Libraries/CMSIS//Include/core_cm4.h ****   NVIC->ISPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* set interrupt pending 
1116:./Libraries/CMSIS//Include/core_cm4.h **** }
1117:./Libraries/CMSIS//Include/core_cm4.h **** 
1118:./Libraries/CMSIS//Include/core_cm4.h **** 
1119:./Libraries/CMSIS//Include/core_cm4.h **** /** \brief  Clear Pending Interrupt
1120:./Libraries/CMSIS//Include/core_cm4.h **** 
1121:./Libraries/CMSIS//Include/core_cm4.h ****     This function clears the pending bit for the specified interrupt.
1122:./Libraries/CMSIS//Include/core_cm4.h ****     The interrupt number cannot be a negative value.
1123:./Libraries/CMSIS//Include/core_cm4.h **** 
1124:./Libraries/CMSIS//Include/core_cm4.h ****     \param [in]      IRQn  Number of the interrupt for clear pending
1125:./Libraries/CMSIS//Include/core_cm4.h ****  */
1126:./Libraries/CMSIS//Include/core_cm4.h **** static __INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1127:./Libraries/CMSIS//Include/core_cm4.h **** {
1128:./Libraries/CMSIS//Include/core_cm4.h ****   NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrup
1129:./Libraries/CMSIS//Include/core_cm4.h **** }
1130:./Libraries/CMSIS//Include/core_cm4.h **** 
1131:./Libraries/CMSIS//Include/core_cm4.h **** 
1132:./Libraries/CMSIS//Include/core_cm4.h **** /** \brief  Get Active Interrupt
1133:./Libraries/CMSIS//Include/core_cm4.h **** 
1134:./Libraries/CMSIS//Include/core_cm4.h ****     This function reads the active register in NVIC and returns the active bit.
1135:./Libraries/CMSIS//Include/core_cm4.h ****     \param [in]      IRQn  Number of the interrupt for get active
1136:./Libraries/CMSIS//Include/core_cm4.h ****     \return             0  Interrupt status is not active
1137:./Libraries/CMSIS//Include/core_cm4.h ****     \return             1  Interrupt status is active
1138:./Libraries/CMSIS//Include/core_cm4.h ****  */
1139:./Libraries/CMSIS//Include/core_cm4.h **** static __INLINE uint32_t NVIC_GetActive(IRQn_Type IRQn)
1140:./Libraries/CMSIS//Include/core_cm4.h **** {
1141:./Libraries/CMSIS//Include/core_cm4.h ****   return((uint32_t)((NVIC->IABR[(uint32_t)(IRQn) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0)); /
1142:./Libraries/CMSIS//Include/core_cm4.h **** }
1143:./Libraries/CMSIS//Include/core_cm4.h **** 
1144:./Libraries/CMSIS//Include/core_cm4.h **** 
1145:./Libraries/CMSIS//Include/core_cm4.h **** /** \brief  Set Interrupt Priority
1146:./Libraries/CMSIS//Include/core_cm4.h **** 
1147:./Libraries/CMSIS//Include/core_cm4.h ****     This function sets the priority for the specified interrupt. The interrupt
1148:./Libraries/CMSIS//Include/core_cm4.h ****     number can be positive to specify an external (device specific)
1149:./Libraries/CMSIS//Include/core_cm4.h ****     interrupt, or negative to specify an internal (core) interrupt.
1150:./Libraries/CMSIS//Include/core_cm4.h **** 
1151:./Libraries/CMSIS//Include/core_cm4.h ****     Note: The priority cannot be set for every core interrupt.
1152:./Libraries/CMSIS//Include/core_cm4.h **** 
1153:./Libraries/CMSIS//Include/core_cm4.h ****     \param [in]      IRQn  Number of the interrupt for set priority
1154:./Libraries/CMSIS//Include/core_cm4.h ****     \param [in]  priority  Priority to set
1155:./Libraries/CMSIS//Include/core_cm4.h ****  */
1156:./Libraries/CMSIS//Include/core_cm4.h **** static __INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1157:./Libraries/CMSIS//Include/core_cm4.h **** {
1158:./Libraries/CMSIS//Include/core_cm4.h ****   if(IRQn < 0) {
1159:./Libraries/CMSIS//Include/core_cm4.h ****     SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set 
1160:./Libraries/CMSIS//Include/core_cm4.h ****   else {
1161:./Libraries/CMSIS//Include/core_cm4.h ****     NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set 
1162:./Libraries/CMSIS//Include/core_cm4.h **** }
1163:./Libraries/CMSIS//Include/core_cm4.h **** 
1164:./Libraries/CMSIS//Include/core_cm4.h **** 
1165:./Libraries/CMSIS//Include/core_cm4.h **** /** \brief  Get Interrupt Priority
1166:./Libraries/CMSIS//Include/core_cm4.h **** 
1167:./Libraries/CMSIS//Include/core_cm4.h ****     This function reads the priority for the specified interrupt. The interrupt
1168:./Libraries/CMSIS//Include/core_cm4.h ****     number can be positive to specify an external (device specific)
1169:./Libraries/CMSIS//Include/core_cm4.h ****     interrupt, or negative to specify an internal (core) interrupt.
1170:./Libraries/CMSIS//Include/core_cm4.h **** 
1171:./Libraries/CMSIS//Include/core_cm4.h ****     The returned priority value is automatically aligned to the implemented
1172:./Libraries/CMSIS//Include/core_cm4.h ****     priority bits of the microcontroller.
1173:./Libraries/CMSIS//Include/core_cm4.h **** 
1174:./Libraries/CMSIS//Include/core_cm4.h ****     \param [in]   IRQn  Number of the interrupt for get priority
1175:./Libraries/CMSIS//Include/core_cm4.h ****     \return             Interrupt Priority
1176:./Libraries/CMSIS//Include/core_cm4.h ****  */
1177:./Libraries/CMSIS//Include/core_cm4.h **** static __INLINE uint32_t NVIC_GetPriority(IRQn_Type IRQn)
1178:./Libraries/CMSIS//Include/core_cm4.h **** {
1179:./Libraries/CMSIS//Include/core_cm4.h **** 
1180:./Libraries/CMSIS//Include/core_cm4.h ****   if(IRQn < 0) {
1181:./Libraries/CMSIS//Include/core_cm4.h ****     return((uint32_t)(SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] >> (8 - __NVIC_PRIO_BITS)));  } /* get p
1182:./Libraries/CMSIS//Include/core_cm4.h ****   else {
1183:./Libraries/CMSIS//Include/core_cm4.h ****     return((uint32_t)(NVIC->IP[(uint32_t)(IRQn)]           >> (8 - __NVIC_PRIO_BITS)));  } /* get p
1184:./Libraries/CMSIS//Include/core_cm4.h **** }
1185:./Libraries/CMSIS//Include/core_cm4.h **** 
1186:./Libraries/CMSIS//Include/core_cm4.h **** 
1187:./Libraries/CMSIS//Include/core_cm4.h **** /** \brief  Encode Priority
1188:./Libraries/CMSIS//Include/core_cm4.h **** 
1189:./Libraries/CMSIS//Include/core_cm4.h ****     This function encodes the priority for an interrupt with the given priority group,
1190:./Libraries/CMSIS//Include/core_cm4.h ****     preemptive priority value and sub priority value.
1191:./Libraries/CMSIS//Include/core_cm4.h ****     In case of a conflict between priority grouping and available
1192:./Libraries/CMSIS//Include/core_cm4.h ****     priority bits (__NVIC_PRIO_BITS) the samllest possible priority group is set.
1193:./Libraries/CMSIS//Include/core_cm4.h **** 
1194:./Libraries/CMSIS//Include/core_cm4.h ****     The returned priority value can be used for NVIC_SetPriority(...) function
1195:./Libraries/CMSIS//Include/core_cm4.h **** 
1196:./Libraries/CMSIS//Include/core_cm4.h ****     \param [in]     PriorityGroup  Used priority group
1197:./Libraries/CMSIS//Include/core_cm4.h ****     \param [in]   PreemptPriority  Preemptive priority value (starting from 0)
1198:./Libraries/CMSIS//Include/core_cm4.h ****     \param [in]       SubPriority  Sub priority value (starting from 0)
1199:./Libraries/CMSIS//Include/core_cm4.h ****     \return                        Encoded priority for the interrupt
1200:./Libraries/CMSIS//Include/core_cm4.h ****  */
1201:./Libraries/CMSIS//Include/core_cm4.h **** static __INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
1202:./Libraries/CMSIS//Include/core_cm4.h **** {
1203:./Libraries/CMSIS//Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);          /* only values 0..7 are used        
1204:./Libraries/CMSIS//Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
1205:./Libraries/CMSIS//Include/core_cm4.h ****   uint32_t SubPriorityBits;
1206:./Libraries/CMSIS//Include/core_cm4.h **** 
1207:./Libraries/CMSIS//Include/core_cm4.h ****   PreemptPriorityBits = ((7 - PriorityGroupTmp) > __NVIC_PRIO_BITS) ? __NVIC_PRIO_BITS : 7 - Priori
1208:./Libraries/CMSIS//Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + __NVIC_PRIO_BITS) < 7) ? 0 : PriorityGroupTmp - 7 + __
1209:./Libraries/CMSIS//Include/core_cm4.h **** 
1210:./Libraries/CMSIS//Include/core_cm4.h ****   return (
1211:./Libraries/CMSIS//Include/core_cm4.h ****            ((PreemptPriority & ((1 << (PreemptPriorityBits)) - 1)) << SubPriorityBits) |
1212:./Libraries/CMSIS//Include/core_cm4.h ****            ((SubPriority     & ((1 << (SubPriorityBits    )) - 1)))
1213:./Libraries/CMSIS//Include/core_cm4.h ****          );
1214:./Libraries/CMSIS//Include/core_cm4.h **** }
1215:./Libraries/CMSIS//Include/core_cm4.h **** 
1216:./Libraries/CMSIS//Include/core_cm4.h **** 
1217:./Libraries/CMSIS//Include/core_cm4.h **** /** \brief  Decode Priority
1218:./Libraries/CMSIS//Include/core_cm4.h **** 
1219:./Libraries/CMSIS//Include/core_cm4.h ****     This function decodes an interrupt priority value with the given priority group to
1220:./Libraries/CMSIS//Include/core_cm4.h ****     preemptive priority value and sub priority value.
1221:./Libraries/CMSIS//Include/core_cm4.h ****     In case of a conflict between priority grouping and available
1222:./Libraries/CMSIS//Include/core_cm4.h ****     priority bits (__NVIC_PRIO_BITS) the samllest possible priority group is set.
1223:./Libraries/CMSIS//Include/core_cm4.h **** 
1224:./Libraries/CMSIS//Include/core_cm4.h ****     The priority value can be retrieved with NVIC_GetPriority(...) function
1225:./Libraries/CMSIS//Include/core_cm4.h **** 
1226:./Libraries/CMSIS//Include/core_cm4.h ****     \param [in]         Priority   Priority value
1227:./Libraries/CMSIS//Include/core_cm4.h ****     \param [in]     PriorityGroup  Used priority group
1228:./Libraries/CMSIS//Include/core_cm4.h ****     \param [out] pPreemptPriority  Preemptive priority value (starting from 0)
1229:./Libraries/CMSIS//Include/core_cm4.h ****     \param [out]     pSubPriority  Sub priority value (starting from 0)
1230:./Libraries/CMSIS//Include/core_cm4.h ****  */
1231:./Libraries/CMSIS//Include/core_cm4.h **** static __INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* pPre
1232:./Libraries/CMSIS//Include/core_cm4.h **** {
1233:./Libraries/CMSIS//Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);          /* only values 0..7 are used        
1234:./Libraries/CMSIS//Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
1235:./Libraries/CMSIS//Include/core_cm4.h ****   uint32_t SubPriorityBits;
1236:./Libraries/CMSIS//Include/core_cm4.h **** 
1237:./Libraries/CMSIS//Include/core_cm4.h ****   PreemptPriorityBits = ((7 - PriorityGroupTmp) > __NVIC_PRIO_BITS) ? __NVIC_PRIO_BITS : 7 - Priori
1238:./Libraries/CMSIS//Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + __NVIC_PRIO_BITS) < 7) ? 0 : PriorityGroupTmp - 7 + __
1239:./Libraries/CMSIS//Include/core_cm4.h **** 
1240:./Libraries/CMSIS//Include/core_cm4.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & ((1 << (PreemptPriorityBits)) - 1);
1241:./Libraries/CMSIS//Include/core_cm4.h ****   *pSubPriority     = (Priority                   ) & ((1 << (SubPriorityBits    )) - 1);
1242:./Libraries/CMSIS//Include/core_cm4.h **** }
1243:./Libraries/CMSIS//Include/core_cm4.h **** 
1244:./Libraries/CMSIS//Include/core_cm4.h **** 
1245:./Libraries/CMSIS//Include/core_cm4.h **** /** \brief  System Reset
1246:./Libraries/CMSIS//Include/core_cm4.h **** 
1247:./Libraries/CMSIS//Include/core_cm4.h ****     This function initiate a system reset request to reset the MCU.
1248:./Libraries/CMSIS//Include/core_cm4.h ****  */
1249:./Libraries/CMSIS//Include/core_cm4.h **** static __INLINE void NVIC_SystemReset(void)
1250:./Libraries/CMSIS//Include/core_cm4.h **** {
1251:./Libraries/CMSIS//Include/core_cm4.h ****   __DSB();                                                     /* Ensure all outstanding memory acc
1252:./Libraries/CMSIS//Include/core_cm4.h ****                                                                   buffered write are completed befo
1253:./Libraries/CMSIS//Include/core_cm4.h ****   SCB->AIRCR  = ((0x5FA << SCB_AIRCR_VECTKEY_Pos)      |
1254:./Libraries/CMSIS//Include/core_cm4.h ****                  (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 1029              		.loc 3 1254 0
 1030 00f8 0E4A     		ldr	r2, .L80+36
 1031 00fa 0F4B     		ldr	r3, .L80+40
 1032 00fc D168     		ldr	r1, [r2, #12]
 1033 00fe 01F4E061 		and	r1, r1, #1792
 1034 0102 0B43     		orrs	r3, r3, r1
1253:./Libraries/CMSIS//Include/core_cm4.h ****   SCB->AIRCR  = ((0x5FA << SCB_AIRCR_VECTKEY_Pos)      |
 1035              		.loc 3 1253 0
 1036 0104 D360     		str	r3, [r2, #12]
 1037              	.LBB92:
 1038              	.LBB93:
 1039              		.loc 2 326 0
 1040              	@ 326 "./Libraries/CMSIS//Include/core_cmInstr.h" 1
 1041 0106 BFF34F8F 		dsb
 1042              	@ 0 "" 2
 1043              		.thumb
 1044              	.L79:
 1045 010a FEE7     		b	.L79
 1046              	.L77:
 1047              	.LBE93:
 1048              	.LBE92:
 1049              	.LBE89:
 1050              	.LBE88:
 1051              	.LBE87:
 1052              	.LBE86:
 611:Libraries/STM32_USB_Device_Library/Class/dfu/src/usbd_dfu_core.c **** }
 1053              		.loc 1 611 0
 1054 010c 0020     		movs	r0, #0
 1055 010e 1CBD     		pop	{r2, r3, r4, pc}
 1056              	.L81:
 1057              		.align	2
 1058              	.L80:
 1059 0110 00000000 		.word	DeviceState
 1060 0114 00000000 		.word	.LANCHOR1
 1061 0118 00000000 		.word	.LANCHOR2
 1062 011c 00000000 		.word	MAL_Buffer
 1063 0120 00000000 		.word	.LANCHOR4
 1064 0124 FEFF3F00 		.word	4194302
 1065 0128 00000000 		.word	DeviceStatus
 1066 012c 00000000 		.word	.LANCHOR3
 1067 0130 00000000 		.word	.LANCHOR0
 1068 0134 00ED00E0 		.word	-536810240
 1069 0138 0400FA05 		.word	100270084
 1070              		.cfi_endproc
 1071              	.LFE113:
 1073              		.global	DFU_cb
 1074              		.global	Manifest_State
 1075              		.comm	DeviceStatus,6,1
 1076              		.comm	DeviceState,1,1
 1077              		.comm	usbd_dfu_OtherCfgDesc,27,1
 1078              		.global	usbd_dfu_CfgDesc
 1079              		.section	.bss.wlength,"aw",%nobits
 1080              		.align	2
 1081              		.set	.LANCHOR2,. + 0
 1084              	wlength:
 1085 0000 00000000 		.space	4
 1086              		.section	.data.DFU_cb,"aw",%progbits
 1087              		.align	2
 1090              	DFU_cb:
 1091 0000 00000000 		.word	usbd_dfu_Init
 1092 0004 00000000 		.word	usbd_dfu_DeInit
 1093 0008 00000000 		.word	usbd_dfu_Setup
 1094 000c 00000000 		.word	EP0_TxSent
 1095 0010 00000000 		.word	EP0_RxReady
 1096 0014 00000000 		.word	0
 1097 0018 00000000 		.word	0
 1098 001c 00000000 		.word	0
 1099 0020 00000000 		.word	0
 1100 0024 00000000 		.word	0
 1101 0028 00000000 		.word	USBD_DFU_GetCfgDesc
 1102              		.section	.data.usbd_dfu_CfgDesc,"aw",%progbits
 1103              		.set	.LANCHOR0,. + 0
 1106              	usbd_dfu_CfgDesc:
 1107 0000 09       		.byte	9
 1108 0001 02       		.byte	2
 1109 0002 1B       		.byte	27
 1110 0003 00       		.byte	0
 1111 0004 01       		.byte	1
 1112 0005 01       		.byte	1
 1113 0006 02       		.byte	2
 1114 0007 C0       		.byte	-64
 1115 0008 32       		.byte	50
 1116 0009 09       		.byte	9
 1117 000a 04       		.byte	4
 1118 000b 00       		.byte	0
 1119 000c 00       		.byte	0
 1120 000d 00       		.byte	0
 1121 000e FE       		.byte	-2
 1122 000f 01       		.byte	1
 1123 0010 02       		.byte	2
 1124 0011 06       		.byte	6
 1125 0012 09       		.byte	9
 1126 0013 21       		.byte	33
 1127 0014 0B       		.byte	11
 1128 0015 FF       		.byte	-1
 1129 0016 00       		.byte	0
 1130 0017 00       		.byte	0
 1131 0018 1A       		.byte	26
 1132 0019 01       		.byte	1
 1133 001a 00       		.space	1
 1134              		.section	.data.Pointer,"aw",%progbits
 1135              		.align	2
 1136              		.set	.LANCHOR4,. + 0
 1139              	Pointer:
 1140 0000 00000008 		.word	134217728
 1141              		.section	.bss.wBlockNum,"aw",%nobits
 1142              		.align	2
 1143              		.set	.LANCHOR1,. + 0
 1146              	wBlockNum:
 1147 0000 00000000 		.space	4
 1148              		.section	.bss.usbd_dfu_AltSet,"aw",%nobits
 1149              		.align	2
 1150              		.set	.LANCHOR5,. + 0
 1153              	usbd_dfu_AltSet:
 1154 0000 00000000 		.space	4
 1155              		.section	.bss.Manifest_State,"aw",%nobits
 1156              		.align	2
 1157              		.set	.LANCHOR3,. + 0
 1160              	Manifest_State:
 1161 0000 00000000 		.space	4
 1162              		.text
 1163              	.Letext0:
 1164              		.file 4 "c:\\program files\\gnu tools arm embedded\\4.6 2012q4\\bin\\../lib/gcc/arm-none-eabi/4.6.
 1165              		.file 5 "./Libraries/STM32_USB_OTG_Driver/inc/usb_core.h"
 1166              		.file 6 "./Libraries/STM32_USB_Device_Library/Class/dfu/inc/usbd_dfu_mal.h"
 1167              		.file 7 "./src/user/usbd_desc.h"
 1168              		.file 8 "./Libraries/STM32_USB_Device_Library/Core/inc/usbd_core.h"
 1169              		.file 9 "./Libraries/STM32_USB_Device_Library/Class/dfu/inc/usbd_dfu_core.h"
DEFINED SYMBOLS
                            *ABS*:00000000 usbd_dfu_core.c
C:\Users\zhx\AppData\Local\Temp\ccQi5er8.s:20     .text.EP0_RxReady:00000000 $t
C:\Users\zhx\AppData\Local\Temp\ccQi5er8.s:24     .text.EP0_RxReady:00000000 EP0_RxReady
C:\Users\zhx\AppData\Local\Temp\ccQi5er8.s:41     .text.USBD_DFU_GetCfgDesc:00000000 $t
C:\Users\zhx\AppData\Local\Temp\ccQi5er8.s:45     .text.USBD_DFU_GetCfgDesc:00000000 USBD_DFU_GetCfgDesc
C:\Users\zhx\AppData\Local\Temp\ccQi5er8.s:63     .text.USBD_DFU_GetCfgDesc:00000008 $d
C:\Users\zhx\AppData\Local\Temp\ccQi5er8.s:68     .text.usbd_dfu_DeInit:00000000 $t
C:\Users\zhx\AppData\Local\Temp\ccQi5er8.s:72     .text.usbd_dfu_DeInit:00000000 usbd_dfu_DeInit
C:\Users\zhx\AppData\Local\Temp\ccQi5er8.s:111    .text.usbd_dfu_DeInit:00000020 $d
                            *COM*:00000001 DeviceState
                            *COM*:00000006 DeviceStatus
C:\Users\zhx\AppData\Local\Temp\ccQi5er8.s:119    .text.usbd_dfu_Setup:00000000 $t
C:\Users\zhx\AppData\Local\Temp\ccQi5er8.s:123    .text.usbd_dfu_Setup:00000000 usbd_dfu_Setup
C:\Users\zhx\AppData\Local\Temp\ccQi5er8.s:152    .text.usbd_dfu_Setup:00000020 $d
C:\Users\zhx\AppData\Local\Temp\ccQi5er8.s:164    .text.usbd_dfu_Setup:0000002e $t
C:\Users\zhx\AppData\Local\Temp\ccQi5er8.s:721    .text.usbd_dfu_Setup:000002a0 $d
C:\Users\zhx\AppData\Local\Temp\ccQi5er8.s:735    .text.usbd_dfu_Setup:000002cc $t
C:\Users\zhx\AppData\Local\Temp\ccQi5er8.s:767    .text.usbd_dfu_Setup:000002e8 $d
C:\Users\zhx\AppData\Local\Temp\ccQi5er8.s:772    .text.usbd_dfu_Init:00000000 $t
C:\Users\zhx\AppData\Local\Temp\ccQi5er8.s:776    .text.usbd_dfu_Init:00000000 usbd_dfu_Init
C:\Users\zhx\AppData\Local\Temp\ccQi5er8.s:806    .text.usbd_dfu_Init:00000018 $d
C:\Users\zhx\AppData\Local\Temp\ccQi5er8.s:812    .text.EP0_TxSent:00000000 $t
C:\Users\zhx\AppData\Local\Temp\ccQi5er8.s:816    .text.EP0_TxSent:00000000 EP0_TxSent
C:\Users\zhx\AppData\Local\Temp\ccQi5er8.s:1059   .text.EP0_TxSent:00000110 $d
C:\Users\zhx\AppData\Local\Temp\ccQi5er8.s:1090   .data.DFU_cb:00000000 DFU_cb
C:\Users\zhx\AppData\Local\Temp\ccQi5er8.s:1160   .bss.Manifest_State:00000000 Manifest_State
                            *COM*:0000001b usbd_dfu_OtherCfgDesc
C:\Users\zhx\AppData\Local\Temp\ccQi5er8.s:1106   .data.usbd_dfu_CfgDesc:00000000 usbd_dfu_CfgDesc
C:\Users\zhx\AppData\Local\Temp\ccQi5er8.s:1080   .bss.wlength:00000000 $d
C:\Users\zhx\AppData\Local\Temp\ccQi5er8.s:1084   .bss.wlength:00000000 wlength
C:\Users\zhx\AppData\Local\Temp\ccQi5er8.s:1087   .data.DFU_cb:00000000 $d
C:\Users\zhx\AppData\Local\Temp\ccQi5er8.s:1133   .data.usbd_dfu_CfgDesc:0000001a $d
C:\Users\zhx\AppData\Local\Temp\ccQi5er8.s:1135   .data.Pointer:00000000 $d
C:\Users\zhx\AppData\Local\Temp\ccQi5er8.s:1139   .data.Pointer:00000000 Pointer
C:\Users\zhx\AppData\Local\Temp\ccQi5er8.s:1142   .bss.wBlockNum:00000000 $d
C:\Users\zhx\AppData\Local\Temp\ccQi5er8.s:1146   .bss.wBlockNum:00000000 wBlockNum
C:\Users\zhx\AppData\Local\Temp\ccQi5er8.s:1149   .bss.usbd_dfu_AltSet:00000000 $d
C:\Users\zhx\AppData\Local\Temp\ccQi5er8.s:1153   .bss.usbd_dfu_AltSet:00000000 usbd_dfu_AltSet
C:\Users\zhx\AppData\Local\Temp\ccQi5er8.s:1156   .bss.Manifest_State:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
MAL_DeInit
USBD_CtlPrepareRx
USBD_CtlError
MAL_Read
USBD_CtlSendData
MAL_GetStatus
DCD_DevDisconnect
DCD_DevConnect
USB_OTG_BSP_mDelay
MAL_Buffer
MAL_Init
MAL_Erase
MAL_Write
